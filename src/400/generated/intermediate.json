{
    "prelude": "\n#include <clang/AST/AST.h>\n#include <clang/ASTMatchers/ASTMatchers.h>\n#include <clang/ASTMatchers/ASTMatchFinder.h>\n",
    "clang_version": "clang version 4.0.0-svn276543-1~exp1 (trunk)",
    "enums": [
        {
            "xitems": [
                "GE_None",
                "GE_Missing_stdio",
                "GE_Missing_setjmp",
                "GE_Missing_ucontext"
            ],
            "anon": false,
            "parent": "clang::ASTContext",
            "typename": "clang::ASTContext::GetBuiltinTypeError",
            "name": "GetBuiltinTypeError"
        },
        {
            "xitems": [
                "None",
                "Weak",
                "WeakUnknown",
                "Strong"
            ],
            "anon": false,
            "parent": "clang::ASTContext",
            "typename": "clang::ASTContext::InlineVariableDefinitionKind",
            "name": "InlineVariableDefinitionKind"
        },
        {
            "xitems": [
                "AS_public",
                "AS_protected",
                "AS_private",
                "AS_none"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::AccessSpecifier",
            "name": "AccessSpecifier"
        },
        {
            "xitems": [
                "ATT_ArrayRank",
                "ATT_ArrayExtent"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ArrayTypeTrait",
            "name": "ArrayTypeTrait"
        },
        {
            "xitems": [
                "AO__c11_atomic_init",
                "AO__c11_atomic_load",
                "AO__c11_atomic_store",
                "AO__c11_atomic_exchange",
                "AO__c11_atomic_compare_exchange_strong",
                "AO__c11_atomic_compare_exchange_weak",
                "AO__c11_atomic_fetch_add",
                "AO__c11_atomic_fetch_sub",
                "AO__c11_atomic_fetch_and",
                "AO__c11_atomic_fetch_or",
                "AO__c11_atomic_fetch_xor",
                "AO__atomic_load",
                "AO__atomic_load_n",
                "AO__atomic_store",
                "AO__atomic_store_n",
                "AO__atomic_exchange",
                "AO__atomic_exchange_n",
                "AO__atomic_compare_exchange",
                "AO__atomic_compare_exchange_n",
                "AO__atomic_fetch_add",
                "AO__atomic_fetch_sub",
                "AO__atomic_fetch_and",
                "AO__atomic_fetch_or",
                "AO__atomic_fetch_xor",
                "AO__atomic_fetch_nand",
                "AO__atomic_add_fetch",
                "AO__atomic_sub_fetch",
                "AO__atomic_and_fetch",
                "AO__atomic_or_fetch",
                "AO__atomic_xor_fetch",
                "AO__atomic_nand_fetch",
                "BI_First"
            ],
            "anon": false,
            "parent": "clang::AtomicExpr",
            "typename": "clang::AtomicExpr::AtomicOp",
            "name": "AtomicOp"
        },
        {
            "xitems": [
                "Auto",
                "DecltypeAuto",
                "GNUAutoType"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::AutoTypeKeyword",
            "name": "AutoTypeKeyword"
        },
        {
            "xitems": [
                "AR_Available",
                "AR_NotYetIntroduced",
                "AR_Deprecated",
                "AR_Unavailable"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::AvailabilityResult",
            "name": "AvailabilityResult"
        },
        {
            "xitems": [
                "BO_PtrMemD",
                "BO_PtrMemI",
                "BO_Mul",
                "BO_Div",
                "BO_Rem",
                "BO_Add",
                "BO_Sub",
                "BO_Shl",
                "BO_Shr",
                "BO_LT",
                "BO_GT",
                "BO_LE",
                "BO_GE",
                "BO_EQ",
                "BO_NE",
                "BO_And",
                "BO_Xor",
                "BO_Or",
                "BO_LAnd",
                "BO_LOr",
                "BO_Assign",
                "BO_MulAssign",
                "BO_DivAssign",
                "BO_RemAssign",
                "BO_AddAssign",
                "BO_SubAssign",
                "BO_ShlAssign",
                "BO_ShrAssign",
                "BO_AndAssign",
                "BO_XorAssign",
                "BO_OrAssign",
                "BO_Comma"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::BinaryOperatorKind",
            "name": "BinaryOperatorKind"
        },
        {
            "xitems": [],
            "anon": false,
            "parent": null,
            "typename": "clang::BuiltinTemplateKind",
            "name": "BuiltinTemplateKind"
        },
        {
            "xitems": [
                "CK_Complete",
                "CK_NonVirtualBase",
                "CK_VirtualBase",
                "CK_Delegating"
            ],
            "anon": false,
            "parent": "clang::CXXConstructExpr",
            "typename": "clang::CXXConstructExpr::ConstructionKind",
            "name": "ConstructionKind"
        },
        {
            "xitems": [
                "NoInit",
                "CallInit",
                "ListInit"
            ],
            "anon": false,
            "parent": "clang::CXXNewExpr",
            "typename": "clang::CXXNewExpr::InitializationStyle",
            "name": "InitializationStyle"
        },
        {
            "xitems": [
                "CC_C",
                "CC_X86StdCall",
                "CC_X86FastCall",
                "CC_X86ThisCall",
                "CC_X86VectorCall",
                "CC_X86Pascal",
                "CC_X86_64Win64",
                "CC_X86_64SysV",
                "CC_AAPCS",
                "CC_AAPCS_VFP",
                "CC_IntelOclBicc",
                "CC_SpirFunction",
                "CC_OpenCLKernel",
                "CC_Swift",
                "CC_PreserveMost",
                "CC_PreserveAll"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::CallingConv",
            "name": "CallingConv"
        },
        {
            "xitems": [
                "CR_Default",
                "CR_OpenMP"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::CapturedRegionKind",
            "name": "CapturedRegionKind"
        },
        {
            "xitems": [
                "CK_Dependent",
                "CK_BitCast",
                "CK_LValueBitCast",
                "CK_LValueToRValue",
                "CK_NoOp",
                "CK_BaseToDerived",
                "CK_DerivedToBase",
                "CK_UncheckedDerivedToBase",
                "CK_Dynamic",
                "CK_ToUnion",
                "CK_ArrayToPointerDecay",
                "CK_FunctionToPointerDecay",
                "CK_NullToPointer",
                "CK_NullToMemberPointer",
                "CK_BaseToDerivedMemberPointer",
                "CK_DerivedToBaseMemberPointer",
                "CK_MemberPointerToBoolean",
                "CK_ReinterpretMemberPointer",
                "CK_UserDefinedConversion",
                "CK_ConstructorConversion",
                "CK_IntegralToPointer",
                "CK_PointerToIntegral",
                "CK_PointerToBoolean",
                "CK_ToVoid",
                "CK_VectorSplat",
                "CK_IntegralCast",
                "CK_IntegralToBoolean",
                "CK_IntegralToFloating",
                "CK_FloatingToIntegral",
                "CK_FloatingToBoolean",
                "CK_BooleanToSignedIntegral",
                "CK_FloatingCast",
                "CK_CPointerToObjCPointerCast",
                "CK_BlockPointerToObjCPointerCast",
                "CK_AnyPointerToBlockPointerCast",
                "CK_ObjCObjectLValueCast",
                "CK_FloatingRealToComplex",
                "CK_FloatingComplexToReal",
                "CK_FloatingComplexToBoolean",
                "CK_FloatingComplexCast",
                "CK_FloatingComplexToIntegralComplex",
                "CK_IntegralRealToComplex",
                "CK_IntegralComplexToReal",
                "CK_IntegralComplexToBoolean",
                "CK_IntegralComplexCast",
                "CK_IntegralComplexToFloatingComplex",
                "CK_ARCProduceObject",
                "CK_ARCConsumeObject",
                "CK_ARCReclaimReturnedObject",
                "CK_ARCExtendBlockObject",
                "CK_AtomicToNonAtomic",
                "CK_NonAtomicToAtomic",
                "CK_CopyAndAutoreleaseBlockObject",
                "CK_BuiltinFnToFnPtr",
                "CK_ZeroToOCLEvent",
                "CK_AddressSpaceConversion"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::CastKind",
            "name": "CastKind"
        },
        {
            "xitems": [
                "Ascii",
                "Wide",
                "UTF8",
                "UTF16",
                "UTF32"
            ],
            "anon": false,
            "parent": "clang::CharacterLiteral",
            "typename": "clang::CharacterLiteral::CharacterKind",
            "name": "CharacterKind"
        },
        {
            "xitems": [
                "FOK_None",
                "FOK_Declared",
                "FOK_Undeclared"
            ],
            "anon": false,
            "parent": "clang::Decl",
            "typename": "clang::Decl::FriendObjectKind",
            "name": "FriendObjectKind"
        },
        {
            "xitems": [
                "AccessSpec",
                "Block",
                "Captured",
                "ClassScopeFunctionSpecialization",
                "Empty",
                "ExternCContext",
                "FileScopeAsm",
                "Friend",
                "FriendTemplate",
                "Import",
                "LinkageSpec",
                "Label",
                "Namespace",
                "NamespaceAlias",
                "ObjCCompatibleAlias",
                "ObjCCategory",
                "ObjCCategoryImpl",
                "ObjCImplementation",
                "firstObjCImpl",
                "lastObjCImpl",
                "ObjCInterface",
                "ObjCProtocol",
                "firstObjCContainer",
                "lastObjCContainer",
                "ObjCMethod",
                "ObjCProperty",
                "BuiltinTemplate",
                "ClassTemplate",
                "FunctionTemplate",
                "TypeAliasTemplate",
                "VarTemplate",
                "firstRedeclarableTemplate",
                "lastRedeclarableTemplate",
                "TemplateTemplateParm",
                "firstTemplate",
                "lastTemplate",
                "Enum",
                "Record",
                "CXXRecord",
                "ClassTemplateSpecialization",
                "ClassTemplatePartialSpecialization",
                "firstClassTemplateSpecialization",
                "lastClassTemplateSpecialization",
                "firstCXXRecord",
                "lastCXXRecord",
                "firstRecord",
                "lastRecord",
                "firstTag",
                "lastTag",
                "TemplateTypeParm",
                "ObjCTypeParam",
                "TypeAlias",
                "Typedef",
                "firstTypedefName",
                "lastTypedefName",
                "UnresolvedUsingTypename",
                "firstType",
                "lastType",
                "Using",
                "UsingDirective",
                "UsingShadow",
                "ConstructorUsingShadow",
                "firstUsingShadow",
                "lastUsingShadow",
                "Binding",
                "Field",
                "ObjCAtDefsField",
                "ObjCIvar",
                "firstField",
                "lastField",
                "Function",
                "CXXMethod",
                "CXXConstructor",
                "CXXConversion",
                "CXXDestructor",
                "firstCXXMethod",
                "lastCXXMethod",
                "firstFunction",
                "lastFunction",
                "MSProperty",
                "NonTypeTemplateParm",
                "Var",
                "Decomposition",
                "ImplicitParam",
                "OMPCapturedExpr",
                "ParmVar",
                "VarTemplateSpecialization",
                "VarTemplatePartialSpecialization",
                "firstVarTemplateSpecialization",
                "lastVarTemplateSpecialization",
                "firstVar",
                "lastVar",
                "firstDeclarator",
                "lastDeclarator",
                "EnumConstant",
                "IndirectField",
                "OMPDeclareReduction",
                "UnresolvedUsingValue",
                "firstValue",
                "lastValue",
                "firstNamed",
                "lastNamed",
                "OMPThreadPrivate",
                "ObjCPropertyImpl",
                "PragmaComment",
                "PragmaDetectMismatch",
                "StaticAssert",
                "TranslationUnit",
                "firstDecl",
                "lastDecl"
            ],
            "anon": false,
            "parent": "clang::Decl",
            "typename": "clang::Decl::Kind",
            "name": "Kind"
        },
        {
            "xitems": [
                "OBJC_TQ_None",
                "OBJC_TQ_In",
                "OBJC_TQ_Inout",
                "OBJC_TQ_Out",
                "OBJC_TQ_Bycopy",
                "OBJC_TQ_Byref",
                "OBJC_TQ_Oneway",
                "OBJC_TQ_CSNullability"
            ],
            "anon": false,
            "parent": "clang::Decl",
            "typename": "clang::Decl::ObjCDeclQualifier",
            "name": "ObjCDeclQualifier"
        },
        {
            "xitems": [
                "Identifier",
                "ObjCZeroArgSelector",
                "ObjCOneArgSelector",
                "ObjCMultiArgSelector",
                "CXXConstructorName",
                "CXXDestructorName",
                "CXXConversionFunctionName",
                "CXXOperatorName",
                "CXXLiteralOperatorName",
                "CXXUsingDirective"
            ],
            "anon": false,
            "parent": "clang::DeclarationName",
            "typename": "clang::DeclarationName::NameKind",
            "name": "NameKind"
        },
        {
            "xitems": [
                "ETK_Struct",
                "ETK_Interface",
                "ETK_Union",
                "ETK_Class",
                "ETK_Enum",
                "ETK_Typename",
                "ETK_None"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ElaboratedTypeKeyword",
            "name": "ElaboratedTypeKeyword"
        },
        {
            "xitems": [
                "LV_Valid",
                "LV_NotObjectType",
                "LV_IncompleteVoidType",
                "LV_DuplicateVectorComponents",
                "LV_InvalidExpression",
                "LV_InvalidMessageExpression",
                "LV_MemberFunction",
                "LV_SubObjCPropertySetting",
                "LV_ClassTemporary",
                "LV_ArrayTemporary"
            ],
            "anon": false,
            "parent": "clang::Expr",
            "typename": "clang::Expr::LValueClassification",
            "name": "LValueClassification"
        },
        {
            "xitems": [
                "NPCK_NotNull",
                "NPCK_ZeroExpression",
                "NPCK_ZeroLiteral",
                "NPCK_CXX11_nullptr",
                "NPCK_GNUNull"
            ],
            "anon": false,
            "parent": "clang::Expr",
            "typename": "clang::Expr::NullPointerConstantKind",
            "name": "NullPointerConstantKind"
        },
        {
            "xitems": [
                "NPC_NeverValueDependent",
                "NPC_ValueDependentIsNull",
                "NPC_ValueDependentIsNotNull"
            ],
            "anon": false,
            "parent": "clang::Expr",
            "typename": "clang::Expr::NullPointerConstantValueDependence",
            "name": "NullPointerConstantValueDependence"
        },
        {
            "xitems": [
                "SE_NoSideEffects",
                "SE_AllowUndefinedBehavior",
                "SE_AllowSideEffects"
            ],
            "anon": false,
            "parent": "clang::Expr",
            "typename": "clang::Expr::SideEffectsKind",
            "name": "SideEffectsKind"
        },
        {
            "xitems": [
                "MLV_Valid",
                "MLV_NotObjectType",
                "MLV_IncompleteVoidType",
                "MLV_DuplicateVectorComponents",
                "MLV_InvalidExpression",
                "MLV_LValueCast",
                "MLV_IncompleteType",
                "MLV_ConstQualified",
                "MLV_ConstAddrSpace",
                "MLV_ArrayType",
                "MLV_NoSetterProperty",
                "MLV_MemberFunction",
                "MLV_SubObjCPropertySetting",
                "MLV_InvalidMessageExpression",
                "MLV_ClassTemporary",
                "MLV_ArrayTemporary"
            ],
            "anon": false,
            "parent": "clang::Expr",
            "typename": "clang::Expr::isModifiableLvalueResult",
            "name": "isModifiableLvalueResult"
        },
        {
            "xitems": [
                "OK_Ordinary",
                "OK_BitField",
                "OK_VectorComponent",
                "OK_ObjCProperty",
                "OK_ObjCSubscript"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ExprObjectKind",
            "name": "ExprObjectKind"
        },
        {
            "xitems": [
                "VK_RValue",
                "VK_LValue",
                "VK_XValue"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ExprValueKind",
            "name": "ExprValueKind"
        },
        {
            "xitems": [
                "ET_IsLValueExpr",
                "ET_IsRValueExpr"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ExpressionTrait",
            "name": "ExpressionTrait"
        },
        {
            "xitems": [
                "TK_NonTemplate",
                "TK_FunctionTemplate",
                "TK_MemberSpecialization",
                "TK_FunctionTemplateSpecialization",
                "TK_DependentFunctionTemplateSpecialization"
            ],
            "anon": false,
            "parent": "clang::FunctionDecl",
            "typename": "clang::FunctionDecl::TemplatedKind",
            "name": "TemplatedKind"
        },
        {
            "xitems": [
                "GVA_Internal",
                "GVA_AvailableExternally",
                "GVA_DiscardableODR",
                "GVA_StrongExternal",
                "GVA_StrongODR"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::GVALinkage",
            "name": "GVALinkage"
        },
        {
            "xitems": [
                "ICIS_NoInit",
                "ICIS_CopyInit",
                "ICIS_ListInit"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::InClassInitStyle",
            "name": "InClassInitStyle"
        },
        {
            "xitems": [
                "LCD_None",
                "LCD_ByCopy",
                "LCD_ByRef"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::LambdaCaptureDefault",
            "name": "LambdaCaptureDefault"
        },
        {
            "xitems": [
                "CLanguageLinkage",
                "CXXLanguageLinkage",
                "NoLanguageLinkage"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::LanguageLinkage",
            "name": "LanguageLinkage"
        },
        {
            "xitems": [
                "NoLinkage",
                "InternalLinkage",
                "UniqueExternalLinkage",
                "VisibleNoLinkage",
                "ExternalLinkage"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::Linkage",
            "name": "Linkage"
        },
        {
            "xitems": [
                "lang_c",
                "lang_cxx"
            ],
            "anon": false,
            "parent": "clang::LinkageSpecDecl",
            "typename": "clang::LinkageSpecDecl::LanguageIDs",
            "name": "LanguageIDs"
        },
        {
            "xitems": [
                "VisibilityForType",
                "VisibilityForValue"
            ],
            "anon": false,
            "parent": "clang::NamedDecl",
            "typename": "clang::NamedDecl::ExplicitVisibilityKind",
            "name": "ExplicitVisibilityKind"
        },
        {
            "xitems": [
                "SFF_None",
                "SFF_NSString",
                "SFF_CFString"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ObjCStringFormatFamily",
            "name": "ObjCStringFormatFamily"
        },
        {
            "xitems": [
                "Ordinary",
                "Result",
                "Parameter",
                "Property",
                "Superclass"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ObjCSubstitutionContext",
            "name": "ObjCSubstitutionContext"
        },
        {
            "xitems": [
                "OO_None",
                "OO_New",
                "OO_Delete",
                "OO_Array_New",
                "OO_Array_Delete",
                "OO_Plus",
                "OO_Minus",
                "OO_Star",
                "OO_Slash",
                "OO_Percent",
                "OO_Caret",
                "OO_Amp",
                "OO_Pipe",
                "OO_Tilde",
                "OO_Exclaim",
                "OO_Equal",
                "OO_Less",
                "OO_Greater",
                "OO_PlusEqual",
                "OO_MinusEqual",
                "OO_StarEqual",
                "OO_SlashEqual",
                "OO_PercentEqual",
                "OO_CaretEqual",
                "OO_AmpEqual",
                "OO_PipeEqual",
                "OO_LessLess",
                "OO_GreaterGreater",
                "OO_LessLessEqual",
                "OO_GreaterGreaterEqual",
                "OO_EqualEqual",
                "OO_ExclaimEqual",
                "OO_LessEqual",
                "OO_GreaterEqual",
                "OO_AmpAmp",
                "OO_PipePipe",
                "OO_PlusPlus",
                "OO_MinusMinus",
                "OO_Comma",
                "OO_ArrowStar",
                "OO_Arrow",
                "OO_Call",
                "OO_Subscript",
                "OO_Conditional",
                "OO_Coawait",
                "NUM_OVERLOADED_OPERATORS"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::OverloadedOperatorKind",
            "name": "OverloadedOperatorKind"
        },
        {
            "xitems": [
                "PCK_Unknown",
                "PCK_Linker",
                "PCK_Lib",
                "PCK_Compiler",
                "PCK_ExeStr",
                "PCK_User"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::PragmaMSCommentKind",
            "name": "PragmaMSCommentKind"
        },
        {
            "xitems": [
                "Func",
                "Function",
                "LFunction",
                "FuncDName",
                "FuncSig",
                "PrettyFunction",
                "PrettyFunctionNoVirtual"
            ],
            "anon": false,
            "parent": "clang::PredefinedExpr",
            "typename": "clang::PredefinedExpr::IdentType",
            "name": "IdentType"
        },
        {
            "xitems": [
                "DK_none",
                "DK_cxx_destructor",
                "DK_objc_strong_lifetime",
                "DK_objc_weak_lifetime"
            ],
            "anon": false,
            "parent": "clang::QualType",
            "typename": "clang::QualType::DestructionKind",
            "name": "DestructionKind"
        },
        {
            "xitems": [
                "GCNone",
                "Weak",
                "Strong"
            ],
            "anon": false,
            "parent": "clang::Qualifiers",
            "typename": "clang::Qualifiers::GC",
            "name": "GC"
        },
        {
            "xitems": [
                "OCL_None",
                "OCL_ExplicitNone",
                "OCL_Strong",
                "OCL_Weak",
                "OCL_Autoreleasing"
            ],
            "anon": false,
            "parent": "clang::Qualifiers",
            "typename": "clang::Qualifiers::ObjCLifetime",
            "name": "ObjCLifetime"
        },
        {
            "xitems": [
                "RQ_None",
                "RQ_LValue",
                "RQ_RValue"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::RefQualifierKind",
            "name": "RefQualifierKind"
        },
        {
            "xitems": [
                "NoStmtClass",
                "GCCAsmStmtClass",
                "MSAsmStmtClass",
                "firstAsmStmtConstant",
                "lastAsmStmtConstant",
                "AttributedStmtClass",
                "BreakStmtClass",
                "CXXCatchStmtClass",
                "CXXForRangeStmtClass",
                "CXXTryStmtClass",
                "CapturedStmtClass",
                "CompoundStmtClass",
                "ContinueStmtClass",
                "CoreturnStmtClass",
                "CoroutineBodyStmtClass",
                "DeclStmtClass",
                "DoStmtClass",
                "BinaryConditionalOperatorClass",
                "ConditionalOperatorClass",
                "firstAbstractConditionalOperatorConstant",
                "lastAbstractConditionalOperatorConstant",
                "AddrLabelExprClass",
                "ArraySubscriptExprClass",
                "ArrayTypeTraitExprClass",
                "AsTypeExprClass",
                "AtomicExprClass",
                "BinaryOperatorClass",
                "CompoundAssignOperatorClass",
                "firstBinaryOperatorConstant",
                "lastBinaryOperatorConstant",
                "BlockExprClass",
                "CXXBindTemporaryExprClass",
                "CXXBoolLiteralExprClass",
                "CXXConstructExprClass",
                "CXXTemporaryObjectExprClass",
                "firstCXXConstructExprConstant",
                "lastCXXConstructExprConstant",
                "CXXDefaultArgExprClass",
                "CXXDefaultInitExprClass",
                "CXXDeleteExprClass",
                "CXXDependentScopeMemberExprClass",
                "CXXFoldExprClass",
                "CXXInheritedCtorInitExprClass",
                "CXXNewExprClass",
                "CXXNoexceptExprClass",
                "CXXNullPtrLiteralExprClass",
                "CXXPseudoDestructorExprClass",
                "CXXScalarValueInitExprClass",
                "CXXStdInitializerListExprClass",
                "CXXThisExprClass",
                "CXXThrowExprClass",
                "CXXTypeidExprClass",
                "CXXUnresolvedConstructExprClass",
                "CXXUuidofExprClass",
                "CallExprClass",
                "CUDAKernelCallExprClass",
                "CXXMemberCallExprClass",
                "CXXOperatorCallExprClass",
                "UserDefinedLiteralClass",
                "firstCallExprConstant",
                "lastCallExprConstant",
                "CStyleCastExprClass",
                "CXXFunctionalCastExprClass",
                "CXXConstCastExprClass",
                "CXXDynamicCastExprClass",
                "CXXReinterpretCastExprClass",
                "CXXStaticCastExprClass",
                "firstCXXNamedCastExprConstant",
                "lastCXXNamedCastExprConstant",
                "ObjCBridgedCastExprClass",
                "firstExplicitCastExprConstant",
                "lastExplicitCastExprConstant",
                "ImplicitCastExprClass",
                "firstCastExprConstant",
                "lastCastExprConstant",
                "CharacterLiteralClass",
                "ChooseExprClass",
                "CompoundLiteralExprClass",
                "ConvertVectorExprClass",
                "CoawaitExprClass",
                "CoyieldExprClass",
                "firstCoroutineSuspendExprConstant",
                "lastCoroutineSuspendExprConstant",
                "DeclRefExprClass",
                "DependentScopeDeclRefExprClass",
                "DesignatedInitExprClass",
                "DesignatedInitUpdateExprClass",
                "ExprWithCleanupsClass",
                "ExpressionTraitExprClass",
                "ExtVectorElementExprClass",
                "FloatingLiteralClass",
                "FunctionParmPackExprClass",
                "GNUNullExprClass",
                "GenericSelectionExprClass",
                "ImaginaryLiteralClass",
                "ImplicitValueInitExprClass",
                "InitListExprClass",
                "IntegerLiteralClass",
                "LambdaExprClass",
                "MSPropertyRefExprClass",
                "MSPropertySubscriptExprClass",
                "MaterializeTemporaryExprClass",
                "MemberExprClass",
                "NoInitExprClass",
                "OMPArraySectionExprClass",
                "ObjCArrayLiteralClass",
                "ObjCAvailabilityCheckExprClass",
                "ObjCBoolLiteralExprClass",
                "ObjCBoxedExprClass",
                "ObjCDictionaryLiteralClass",
                "ObjCEncodeExprClass",
                "ObjCIndirectCopyRestoreExprClass",
                "ObjCIsaExprClass",
                "ObjCIvarRefExprClass",
                "ObjCMessageExprClass",
                "ObjCPropertyRefExprClass",
                "ObjCProtocolExprClass",
                "ObjCSelectorExprClass",
                "ObjCStringLiteralClass",
                "ObjCSubscriptRefExprClass",
                "OffsetOfExprClass",
                "OpaqueValueExprClass",
                "UnresolvedLookupExprClass",
                "UnresolvedMemberExprClass",
                "firstOverloadExprConstant",
                "lastOverloadExprConstant",
                "PackExpansionExprClass",
                "ParenExprClass",
                "ParenListExprClass",
                "PredefinedExprClass",
                "PseudoObjectExprClass",
                "ShuffleVectorExprClass",
                "SizeOfPackExprClass",
                "StmtExprClass",
                "StringLiteralClass",
                "SubstNonTypeTemplateParmExprClass",
                "SubstNonTypeTemplateParmPackExprClass",
                "TypeTraitExprClass",
                "TypoExprClass",
                "UnaryExprOrTypeTraitExprClass",
                "UnaryOperatorClass",
                "VAArgExprClass",
                "firstExprConstant",
                "lastExprConstant",
                "ForStmtClass",
                "GotoStmtClass",
                "IfStmtClass",
                "IndirectGotoStmtClass",
                "LabelStmtClass",
                "MSDependentExistsStmtClass",
                "NullStmtClass",
                "OMPAtomicDirectiveClass",
                "OMPBarrierDirectiveClass",
                "OMPCancelDirectiveClass",
                "OMPCancellationPointDirectiveClass",
                "OMPCriticalDirectiveClass",
                "OMPFlushDirectiveClass",
                "OMPDistributeDirectiveClass",
                "OMPDistributeParallelForDirectiveClass",
                "OMPDistributeParallelForSimdDirectiveClass",
                "OMPDistributeSimdDirectiveClass",
                "OMPForDirectiveClass",
                "OMPForSimdDirectiveClass",
                "OMPParallelForDirectiveClass",
                "OMPParallelForSimdDirectiveClass",
                "OMPSimdDirectiveClass",
                "OMPTargetParallelForSimdDirectiveClass",
                "OMPTargetSimdDirectiveClass",
                "OMPTaskLoopDirectiveClass",
                "OMPTaskLoopSimdDirectiveClass",
                "firstOMPLoopDirectiveConstant",
                "lastOMPLoopDirectiveConstant",
                "OMPMasterDirectiveClass",
                "OMPOrderedDirectiveClass",
                "OMPParallelDirectiveClass",
                "OMPParallelSectionsDirectiveClass",
                "OMPSectionDirectiveClass",
                "OMPSectionsDirectiveClass",
                "OMPSingleDirectiveClass",
                "OMPTargetDataDirectiveClass",
                "OMPTargetDirectiveClass",
                "OMPTargetEnterDataDirectiveClass",
                "OMPTargetExitDataDirectiveClass",
                "OMPTargetParallelDirectiveClass",
                "OMPTargetParallelForDirectiveClass",
                "OMPTargetUpdateDirectiveClass",
                "OMPTaskDirectiveClass",
                "OMPTaskgroupDirectiveClass",
                "OMPTaskwaitDirectiveClass",
                "OMPTaskyieldDirectiveClass",
                "OMPTeamsDirectiveClass",
                "firstOMPExecutableDirectiveConstant",
                "lastOMPExecutableDirectiveConstant",
                "ObjCAtCatchStmtClass",
                "ObjCAtFinallyStmtClass",
                "ObjCAtSynchronizedStmtClass",
                "ObjCAtThrowStmtClass",
                "ObjCAtTryStmtClass",
                "ObjCAutoreleasePoolStmtClass",
                "ObjCForCollectionStmtClass",
                "ReturnStmtClass",
                "SEHExceptStmtClass",
                "SEHFinallyStmtClass",
                "SEHLeaveStmtClass",
                "SEHTryStmtClass",
                "CaseStmtClass",
                "DefaultStmtClass",
                "firstSwitchCaseConstant",
                "lastSwitchCaseConstant",
                "SwitchStmtClass",
                "WhileStmtClass",
                "firstStmtConstant",
                "lastStmtConstant"
            ],
            "anon": false,
            "parent": "clang::Stmt",
            "typename": "clang::Stmt::StmtClass",
            "name": "StmtClass"
        },
        {
            "xitems": [
                "SC_None",
                "SC_Extern",
                "SC_Static",
                "SC_PrivateExtern",
                "SC_Auto",
                "SC_Register"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::StorageClass",
            "name": "StorageClass"
        },
        {
            "xitems": [
                "SD_FullExpression",
                "SD_Automatic",
                "SD_Thread",
                "SD_Static",
                "SD_Dynamic"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::StorageDuration",
            "name": "StorageDuration"
        },
        {
            "xitems": [
                "Ascii",
                "Wide",
                "UTF8",
                "UTF16",
                "UTF32"
            ],
            "anon": false,
            "parent": "clang::StringLiteral",
            "typename": "clang::StringLiteral::StringKind",
            "name": "StringKind"
        },
        {
            "xitems": [
                "TTK_Struct",
                "TTK_Interface",
                "TTK_Union",
                "TTK_Class",
                "TTK_Enum"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::TagTypeKind",
            "name": "TagTypeKind"
        },
        {
            "xitems": [
                "TSK_Undeclared",
                "TSK_ImplicitInstantiation",
                "TSK_ExplicitSpecialization",
                "TSK_ExplicitInstantiationDeclaration",
                "TSK_ExplicitInstantiationDefinition"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::TemplateSpecializationKind",
            "name": "TemplateSpecializationKind"
        },
        {
            "xitems": [
                "TSCS_unspecified",
                "TSCS___thread",
                "TSCS_thread_local",
                "TSCS__Thread_local"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::ThreadStorageClassSpecifier",
            "name": "ThreadStorageClassSpecifier"
        },
        {
            "xitems": [
                "STK_CPointer",
                "STK_BlockPointer",
                "STK_ObjCObjectPointer",
                "STK_MemberPointer",
                "STK_Bool",
                "STK_Integral",
                "STK_Floating",
                "STK_IntegralComplex",
                "STK_FloatingComplex"
            ],
            "anon": false,
            "parent": "clang::Type",
            "typename": "clang::Type::ScalarTypeKind",
            "name": "ScalarTypeKind"
        },
        {
            "xitems": [
                "Builtin",
                "Complex",
                "Pointer",
                "BlockPointer",
                "LValueReference",
                "RValueReference",
                "MemberPointer",
                "ConstantArray",
                "IncompleteArray",
                "VariableArray",
                "DependentSizedArray",
                "DependentSizedExtVector",
                "Vector",
                "ExtVector",
                "FunctionProto",
                "FunctionNoProto",
                "UnresolvedUsing",
                "Paren",
                "Typedef",
                "Adjusted",
                "Decayed",
                "TypeOfExpr",
                "TypeOf",
                "Decltype",
                "UnaryTransform",
                "Record",
                "Enum",
                "Elaborated",
                "Attributed",
                "TemplateTypeParm",
                "SubstTemplateTypeParm",
                "SubstTemplateTypeParmPack",
                "TemplateSpecialization",
                "Auto",
                "InjectedClassName",
                "DependentName",
                "DependentTemplateSpecialization",
                "PackExpansion",
                "ObjCObject",
                "ObjCInterface",
                "ObjCObjectPointer",
                "Pipe",
                "Atomic",
                "TypeLast",
                "TagFirst",
                "TagLast"
            ],
            "anon": false,
            "parent": "clang::Type",
            "typename": "clang::Type::TypeClass",
            "name": "TypeClass"
        },
        {
            "xitems": [
                "UTT_HasNothrowAssign",
                "UTT_HasNothrowMoveAssign",
                "UTT_HasNothrowCopy",
                "UTT_HasNothrowConstructor",
                "UTT_HasTrivialAssign",
                "UTT_HasTrivialMoveAssign",
                "UTT_HasTrivialCopy",
                "UTT_HasTrivialDefaultConstructor",
                "UTT_HasTrivialMoveConstructor",
                "UTT_HasTrivialDestructor",
                "UTT_HasVirtualDestructor",
                "UTT_IsAbstract",
                "UTT_IsArithmetic",
                "UTT_IsArray",
                "UTT_IsClass",
                "UTT_IsCompleteType",
                "UTT_IsCompound",
                "UTT_IsConst",
                "UTT_IsDestructible",
                "UTT_IsEmpty",
                "UTT_IsEnum",
                "UTT_IsFinal",
                "UTT_IsFloatingPoint",
                "UTT_IsFunction",
                "UTT_IsFundamental",
                "UTT_IsIntegral",
                "UTT_IsInterfaceClass",
                "UTT_IsLiteral",
                "UTT_IsLvalueReference",
                "UTT_IsMemberFunctionPointer",
                "UTT_IsMemberObjectPointer",
                "UTT_IsMemberPointer",
                "UTT_IsNothrowDestructible",
                "UTT_IsObject",
                "UTT_IsPOD",
                "UTT_IsPointer",
                "UTT_IsPolymorphic",
                "UTT_IsReference",
                "UTT_IsRvalueReference",
                "UTT_IsScalar",
                "UTT_IsSealed",
                "UTT_IsSigned",
                "UTT_IsStandardLayout",
                "UTT_IsTrivial",
                "UTT_IsTriviallyCopyable",
                "UTT_IsUnion",
                "UTT_IsUnsigned",
                "UTT_IsVoid",
                "UTT_IsVolatile",
                "UTT_Last",
                "BTT_IsBaseOf",
                "BTT_IsConvertible",
                "BTT_IsConvertibleTo",
                "BTT_IsSame",
                "BTT_TypeCompatible",
                "BTT_IsAssignable",
                "BTT_IsNothrowAssignable",
                "BTT_IsTriviallyAssignable",
                "BTT_Last",
                "TT_IsConstructible",
                "TT_IsNothrowConstructible",
                "TT_IsTriviallyConstructible"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::TypeTrait",
            "name": "TypeTrait"
        },
        {
            "xitems": [
                "UETT_SizeOf",
                "UETT_AlignOf",
                "UETT_VecStep",
                "UETT_OpenMPRequiredSimdAlign"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::UnaryExprOrTypeTrait",
            "name": "UnaryExprOrTypeTrait"
        },
        {
            "xitems": [
                "UO_PostInc",
                "UO_PostDec",
                "UO_PreInc",
                "UO_PreDec",
                "UO_AddrOf",
                "UO_Deref",
                "UO_Plus",
                "UO_Minus",
                "UO_Not",
                "UO_LNot",
                "UO_Real",
                "UO_Imag",
                "UO_Extension",
                "UO_Coawait"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::UnaryOperatorKind",
            "name": "UnaryOperatorKind"
        },
        {
            "xitems": [
                "LOK_Raw",
                "LOK_Template",
                "LOK_Integer",
                "LOK_Floating",
                "LOK_String",
                "LOK_Character"
            ],
            "anon": false,
            "parent": "clang::UserDefinedLiteral",
            "typename": "clang::UserDefinedLiteral::LiteralOperatorKind",
            "name": "LiteralOperatorKind"
        },
        {
            "xitems": [
                "DeclarationOnly",
                "TentativeDefinition",
                "Definition"
            ],
            "anon": false,
            "parent": "clang::VarDecl",
            "typename": "clang::VarDecl::DefinitionKind",
            "name": "DefinitionKind"
        },
        {
            "xitems": [
                "CInit",
                "CallInit",
                "ListInit"
            ],
            "anon": false,
            "parent": "clang::VarDecl",
            "typename": "clang::VarDecl::InitializationStyle",
            "name": "InitializationStyle"
        },
        {
            "xitems": [
                "TLS_None",
                "TLS_Static",
                "TLS_Dynamic"
            ],
            "anon": false,
            "parent": "clang::VarDecl",
            "typename": "clang::VarDecl::TLSKind",
            "name": "TLSKind"
        },
        {
            "xitems": [
                "HiddenVisibility",
                "ProtectedVisibility",
                "DefaultVisibility"
            ],
            "anon": false,
            "parent": null,
            "typename": "clang::Visibility",
            "name": "Visibility"
        }
    ],
    "classes": [
        {
            "node": false,
            "is_disabled": true,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::iterator_range<const unsigned char *> (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const unsigned char *>",
                    "typename": "iterator_range<const unsigned char *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "bytes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "const char * (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "data"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "char (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "char",
                    "typename": "char () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "front"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "char (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "char",
                    "typename": "char () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "back"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "equals"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "equals_lower"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "compare"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "compare_lower"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "compare_numeric"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Other"
                        ],
                        [
                            "bool",
                            "AllowReplacements"
                        ],
                        [
                            "unsigned int",
                            "MaxEditDistance"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned int (llvm::StringRef::*)(llvm::StringRef, bool, unsigned int) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (llvm::StringRef, bool, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "edit_distance"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "std::basic_string<char> (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "str"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Prefix"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "startswith"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Prefix"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "startswith_lower"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "rfind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "rfind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_first_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_first_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_first_not_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_first_not_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_last_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_last_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_last_not_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "find_last_not_of"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "C"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(char) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (char) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "count"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "size_t (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "count"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Radix"
                        ],
                        [
                            "llvm::APInt &",
                            "Result"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "bool (llvm::StringRef::*)(unsigned int, llvm::APInt &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int, llvm::APInt &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsInteger"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "std::basic_string<char> (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "lower"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "llvm::StringRef",
                    "signature": "std::basic_string<char> (llvm::StringRef::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "upper"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "Start"
                        ],
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long, unsigned long) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (size_t, size_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "substr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (size_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "drop_front"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (size_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "drop_back"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "Start"
                        ],
                        [
                            "unsigned long",
                            "End"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long, unsigned long) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (size_t, size_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "slice"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "char",
                            "Separator"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(char) const",
                    "mode": "long",
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "typename": "std::pair<StringRef, StringRef> (char) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "split"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Separator"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "typename": "std::pair<StringRef, StringRef> (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "split"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<llvm::StringRef> &",
                            "A"
                        ],
                        [
                            "llvm::StringRef",
                            "Separator"
                        ],
                        [
                            "int",
                            "MaxSplit"
                        ],
                        [
                            "bool",
                            "KeepEmpty"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "void (llvm::StringRef::*)(llvm::SmallVectorImpl<llvm::StringRef> &, llvm::StringRef, int, bool) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<llvm::StringRef> &, llvm::StringRef, int, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "split"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<llvm::StringRef> &",
                            "A"
                        ],
                        [
                            "char",
                            "Separator"
                        ],
                        [
                            "int",
                            "MaxSplit"
                        ],
                        [
                            "bool",
                            "KeepEmpty"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "void (llvm::StringRef::*)(llvm::SmallVectorImpl<llvm::StringRef> &, char, int, bool) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<llvm::StringRef> &, char, int, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "split"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "char",
                            "Separator"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(char) const",
                    "mode": "short",
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "typename": "std::pair<StringRef, StringRef> (char) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "rsplit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (char) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "ltrim"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "ltrim"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (char) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "rtrim"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "rtrim"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (char) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "trim"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "parent": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "trim"
                }
            ],
            "typename": "llvm::StringRef",
            "supers": [],
            "name": "StringRef"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMacroID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isValid"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInvalid"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "int",
                            "Offset"
                        ]
                    ],
                    "parent": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceLocation::*)(int) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocWithOffset"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "unsigned int (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawEncoding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceLocation",
                    "signature": "void * (clang::SourceLocation::*)() const",
                    "mode": "short",
                    "result_type": "void *",
                    "typename": "void *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPtrEncoding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "parent": "clang::SourceLocation",
                    "signature": "void (clang::SourceLocation::*)(llvm::raw_ostream &, const clang::SourceManager &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::SourceManager &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "parent": "clang::SourceLocation",
                    "signature": "std::basic_string<char> (clang::SourceLocation::*)(const clang::SourceManager &) const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::SourceManager &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "printToString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "parent": "clang::SourceLocation",
                    "signature": "void (clang::SourceLocation::*)(const clang::SourceManager &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::SourceManager &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dump"
                }
            ],
            "typename": "clang::SourceLocation",
            "supers": [],
            "name": "SourceLocation"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceRange",
                    "signature": "clang::SourceLocation (clang::SourceRange::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBegin"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceRange",
                    "signature": "clang::SourceLocation (clang::SourceRange::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "b"
                        ]
                    ],
                    "parent": "clang::SourceRange",
                    "signature": "void (clang::SourceRange::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBegin"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "e"
                        ]
                    ],
                    "parent": "clang::SourceRange",
                    "signature": "void (clang::SourceRange::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceRange",
                    "signature": "bool (clang::SourceRange::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isValid"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceRange",
                    "signature": "bool (clang::SourceRange::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInvalid"
                }
            ],
            "typename": "clang::SourceRange",
            "supers": [],
            "name": "SourceRange"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEmpty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCZeroArgSelector"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCOneArgSelector"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::DeclarationName::NameKind (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName::NameKind",
                    "typename": "clang::DeclarationName::NameKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "std::basic_string<char> (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::IdentifierInfo * (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsIdentifierInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "unsigned long (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "uintptr_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsOpaqueInteger"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "void * (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "void *",
                    "typename": "void *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsOpaquePtr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::QualType (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCXXNameType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::OverloadedOperatorKind (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::OverloadedOperatorKind",
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCXXOverloadedOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::IdentifierInfo * (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCXXLiteralIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "clang::Selector (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "clang::Selector",
                    "typename": "clang::Selector () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSelector"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "void *",
                            "T"
                        ]
                    ],
                    "parent": "clang::DeclarationName",
                    "signature": "void (clang::DeclarationName::*)(void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFETokenInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::DeclarationName",
                    "signature": "void (clang::DeclarationName::*)(llvm::raw_ostream &, const clang::PrintingPolicy &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationName",
                    "signature": "void (clang::DeclarationName::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dump"
                }
            ],
            "typename": "clang::DeclarationName",
            "supers": [],
            "name": "DeclarationName"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationName (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::DeclarationName",
                            "N"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::DeclarationName)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclarationName)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "const clang::DeclarationNameLoc & (clang::DeclarationNameInfo::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclarationNameLoc &",
                    "typename": "const clang::DeclarationNameLoc &() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameLoc & (clang::DeclarationNameInfo::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclarationNameLoc &",
                    "typename": "clang::DeclarationNameLoc &()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DeclarationNameLoc &",
                            "Info"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(const clang::DeclarationNameLoc &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::DeclarationNameLoc &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::TypeSourceInfo * (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamedTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNamedTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceRange (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCXXOperatorNameRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceRange)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceRange)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCXXOperatorNameRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCXXLiteralOperatorNameLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCXXLiteralOperatorNameLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "bool (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInstantiationDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "bool (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsUnexpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "std::basic_string<char> (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "void (clang::DeclarationNameInfo::*)(llvm::raw_ostream &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "printName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBeginLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceRange (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclarationNameInfo",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "typename": "clang::DeclarationNameInfo",
            "supers": [],
            "name": "DeclarationNameInfo"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::SourceRange (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl::Kind (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl::Kind",
                    "typename": "clang::Decl::Kind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const char * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclKindName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNextDeclInContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNextDeclInContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDeclContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDeclContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNonClosureContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNonClosureContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::TranslationUnitDecl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::TranslationUnitDecl *",
                    "typename": "clang::TranslationUnitDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTranslationUnitDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::TranslationUnitDecl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::TranslationUnitDecl *",
                    "typename": "const clang::TranslationUnitDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTranslationUnitDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInAnonymousNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInStdNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::ASTContext & (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ASTContext &",
                    "typename": "clang::ASTContext &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::AccessSpecifier",
                            "AS"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::AccessSpecifier)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::AccessSpecifier)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAccess"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::AccessSpecifier (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::AccessSpecifier",
                    "typename": "clang::AccessSpecifier () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAccess"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::AccessSpecifier (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::AccessSpecifier",
                    "typename": "clang::AccessSpecifier () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAccessUnsafe"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const llvm::SmallVector<clang::Attr *, 2> &",
                            "Attrs"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(const llvm::SmallVector<clang::Attr *, 2> &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const AttrVec &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "llvm::SmallVector<clang::Attr *, 2> & (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "llvm::SmallVector<clang::Attr *, 2> &",
                    "typename": "AttrVec &()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const llvm::SmallVector<clang::Attr *, 2> & (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const llvm::SmallVector<clang::Attr *, 2> &",
                    "typename": "const AttrVec &() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dropAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Attr *",
                            "A"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::Attr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Attr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "llvm::iterator_range<clang::Attr *const *> (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::Attr *const *>",
                    "typename": "attr_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "attrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMaxAlignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInvalidDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInvalidDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "CheckUsedAttr"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)(bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUsed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsUsed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::ASTContext &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "markUsed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isReferenced"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationReferenced"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "R"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setReferenced"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTopLevelDeclInObjCContainer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTopLevelDeclInObjCContainer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isModulePrivate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefiningAttr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Attr * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Attr *",
                    "typename": "const clang::Attr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefiningAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "std::basic_string<char> *",
                            "Message"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "clang::AvailabilityResult (clang::Decl::*)(std::basic_string<char> *) const",
                    "mode": "short",
                    "result_type": "clang::AvailabilityResult",
                    "typename": "clang::AvailabilityResult (std::string *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAvailability"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "std::basic_string<char> *",
                            "Message"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)(std::basic_string<char> *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (std::string *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDeprecated"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "std::basic_string<char> *",
                            "Message"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)(std::basic_string<char> *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (std::string *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnavailable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWeakImported"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool &",
                            "IsDefinition"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)(bool &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "canBeWeakImported"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFromASTFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGlobalID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOwningModuleID"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Module * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Module *",
                    "typename": "clang::Module *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImportedOwningModule"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Module * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Module *",
                    "typename": "clang::Module *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalOwningModule"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::Module *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Module *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocalOwningModule"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentifierNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "NS"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInIdentifierNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTagIdentifierNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLexicalDeclContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLexicalDeclContext"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOutOfLine"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::DeclContext *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclContext *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeclContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(clang::DeclContext *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclContext *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLexicalDeclContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDefinedOutsideFunctionOrMethod"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLexicallyWithinFunctionOrMethod"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParentFunctionOrMethod"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParentFunctionOrMethod"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "llvm::iterator_range<clang::Decl::redecl_iterator> (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::Decl::redecl_iterator>",
                    "typename": "redecl_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "redecls"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFirstDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Stmt * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBodyRBrace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemplateParameter"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemplateParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemplateDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionOrFunctionTemplate"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::TemplateDecl * (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateDecl *",
                    "typename": "clang::TemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDescribedTemplate"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::FunctionDecl * (clang::Decl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsFunction"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "const clang::FunctionDecl * (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocalExternDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "bool (clang::Decl::*)()",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalExternDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "PerformFriendInjection"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjectOfFriendDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "clang::Decl::FriendObjectKind (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl::FriendObjectKind",
                    "typename": "clang::Decl::FriendObjectKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendObjectKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNonMemberOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ],
                        [
                            "bool",
                            "PrintInstantiation"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &, unsigned int, bool) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, unsigned int, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ],
                        [
                            "bool",
                            "PrintInstantiation"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, unsigned int, bool) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, unsigned int, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)() const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dumpColor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "bool",
                            "BlocksToo"
                        ]
                    ],
                    "parent": "clang::Decl",
                    "signature": "const clang::FunctionType * (clang::Decl::*)(bool) const",
                    "mode": "short",
                    "result_type": "const clang::FunctionType *",
                    "typename": "const clang::FunctionType *(bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFunctionType"
                }
            ],
            "deleter": "decl_deleter<clang::Decl>::type",
            "typename": "clang::Decl",
            "supers": [],
            "name": "Decl"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::Decl::Kind (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl::Kind",
                    "typename": "Decl::Kind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const char * (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclKindName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLexicalParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLexicalParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLookupParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLookupParent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::ASTContext & (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::ASTContext &",
                    "typename": "clang::ASTContext &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParentASTContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isClosure"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCContainer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionOrMethod"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLookupContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFileContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTranslationUnit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRecord"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStdNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInlineNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTransparentContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExternCContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExternCXXContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Equals"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Encloses"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::Decl * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNonClosureAncestor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::Decl * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNonClosureAncestor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPrimaryContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPrimaryContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRedeclContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRedeclContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getEnclosingNamespaceContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getEnclosingNamespaceContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::RecordDecl * (clang::DeclContext::*)()",
                    "mode": "long",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOuterLexicalRecordContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "const clang::RecordDecl * (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::RecordDecl *",
                    "typename": "const clang::RecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOuterLexicalRecordContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "NS"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "InEnclosingNamespaceSetOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::DeclContext *> &",
                            "Contexts"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(llvm::SmallVectorImpl<clang::DeclContext *> &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<clang::DeclContext *> &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "collectAllContexts"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::decl_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::decl_iterator>",
                    "typename": "decl_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "decls"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "decls_empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::decl_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::decl_iterator>",
                    "typename": "decl_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "noload_decls"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addDeclInternal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addHiddenDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(clang::Decl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContextLookupResult (clang::DeclContext::*)(clang::DeclarationName) const",
                    "mode": "short",
                    "result_type": "clang::DeclContextLookupResult",
                    "typename": "lookup_result (clang::DeclarationName) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "lookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "clang::DeclContextLookupResult (clang::DeclContext::*)(clang::DeclarationName)",
                    "mode": "short",
                    "result_type": "clang::DeclContextLookupResult",
                    "typename": "lookup_result (clang::DeclarationName)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "noload_lookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::NamedDecl *> &",
                            "Results"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::DeclarationName, llvm::SmallVectorImpl<clang::NamedDecl *> &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclarationName, SmallVectorImpl<clang::NamedDecl *> &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "localUncachedLookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "makeDeclVisibleInContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator>",
                    "typename": "lookups_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "lookups"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator>",
                    "typename": "lookups_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "noload_lookups"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::udir_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::udir_iterator>",
                    "typename": "udir_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "using_directives"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "llvm::iterator_range<clang::DeclContext::ddiag_iterator> (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::ddiag_iterator>",
                    "typename": "ddiag_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ddiags"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMustBuildLookupTable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::StoredDeclsMap * (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::StoredDeclsMap *",
                    "typename": "clang::StoredDeclsMap *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLookupPtr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "clang::StoredDeclsMap * (clang::DeclContext::*)()",
                    "mode": "short",
                    "result_type": "clang::StoredDeclsMap *",
                    "typename": "clang::StoredDeclsMap *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "buildLookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExternalLexicalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ES"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasExternalLexicalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExternalVisibleStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ES"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasExternalVisibleStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(const clang::Decl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDeclInLexicalTraversal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "use"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)(bool)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUseQualifiedLookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "shouldUseQualifiedLookup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dumpDeclContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)() const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dumpLookups"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "bool",
                            "DumpDecls"
                        ]
                    ],
                    "parent": "clang::DeclContext",
                    "signature": "void (clang::DeclContext::*)(llvm::raw_ostream &, bool) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dumpLookups"
                }
            ],
            "typename": "clang::DeclContext",
            "supers": [],
            "name": "DeclContext"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsOpaqueValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "flag"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "flag"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "flag"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addCVRUQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnaligned"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "flag"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUnaligned"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeUnaligned"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addUnaligned"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "clang::Qualifiers::GC (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::GC",
                    "typename": "clang::Qualifiers::GC () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers::GC",
                            "type"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::GC)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers::GC)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers::GC",
                            "type"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::GC)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers::GC)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers",
                    "typename": "clang::Qualifiers () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withoutObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers",
                    "typename": "clang::Qualifiers () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withoutObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "typename": "clang::Qualifiers::ObjCLifetime () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "type"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::ObjCLifetime)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers::ObjCLifetime)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "type"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::ObjCLifetime)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers::ObjCLifetime)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasStrongOrWeakObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "space"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "space"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)()",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers",
                    "typename": "clang::Qualifiers () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNonFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "qs"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Qualifiers)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addConsistentQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Qualifiers) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAddressSpaceSupersetOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Qualifiers) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "compatiblyIncludes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Qualifiers) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "compatiblyIncludesObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Other"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Qualifiers) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStrictSupersetOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Qualifiers",
                    "signature": "std::basic_string<char> (clang::Qualifiers::*)() const",
                    "mode": "long",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "std::basic_string<char> (clang::Qualifiers::*)(const clang::PrintingPolicy &) const",
                    "mode": "long",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::PrintingPolicy &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "bool (clang::Qualifiers::*)(const clang::PrintingPolicy &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::PrintingPolicy &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEmptyWhenPrinted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "appendSpaceIfNonEmpty"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "parent": "clang::Qualifiers",
                    "signature": "void (clang::Qualifiers::*)(llvm::FoldingSetNodeID &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Profile"
                }
            ],
            "typename": "clang::Qualifiers",
            "supers": [],
            "name": "Qualifiers"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Quals"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocalFastQualifiers"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "const clang::Type * (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypePtr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "const clang::Type * (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypePtrOrNull"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "const clang::IdentifierInfo * (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "const clang::IdentifierInfo *",
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBaseTypeIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::SplitQualType",
                    "typename": "clang::SplitQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "split"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void * (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "void *",
                    "typename": "void *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsOpaquePtr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCanonical"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCanonicalAsParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNull"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalConstQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalRestrictQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRestrictQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalVolatileQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVolatileQualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLocalQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLocalNonFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::Qualifiers (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers",
                    "typename": "clang::Qualifiers () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::Qualifiers (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers",
                    "typename": "clang::Qualifiers () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isConstant"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPODType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXX98PODType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXX11PODType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTrivialType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTriviallyCopyableType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "CVR"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeLocalConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeLocalVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeLocalRestrict"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Mask"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeLocalCVRQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)()",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeLocalFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Mask"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "removeLocalFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withExactLocalFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "withoutLocalFastQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalUnqualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnqualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::SplitQualType",
                    "typename": "clang::SplitQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSplitUnqualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Other"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMoreQualifiedThan"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Other"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAtLeastAsQualifiedAs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNonReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNonLValueExprType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDesugaredType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "mode": "long",
                    "result_type": "clang::SplitQualType",
                    "typename": "clang::SplitQualType () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSplitDesugaredType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSingleStepDesugaredType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParens"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "std::basic_string<char> (clang::QualType::*)() const",
                    "mode": "long",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "std::basic_string<char> (clang::QualType::*)(const clang::PrintingPolicy &) const",
                    "mode": "long",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::PrintingPolicy &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "const llvm::Twine &",
                            "PlaceHolder"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "print"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "std::basic_string<char> &",
                            "Str"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(std::basic_string<char> &, const clang::PrintingPolicy &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (std::string &, const clang::PrintingPolicy &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsStringInternal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "const llvm::Twine &",
                            "PlaceHolder"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType::StreamedQualTypeHelper (clang::QualType::*)(const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType::StreamedQualTypeHelper",
                    "typename": "clang::QualType::StreamedQualTypeHelper (const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "stream"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const char *",
                            "s"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(const char *) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (const char *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)() const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "void (clang::QualType::*)(llvm::FoldingSetNodeID &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Profile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::Qualifiers::GC (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::GC",
                    "typename": "Qualifiers::GC () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCGCAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCGCWeak"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCGCStrong"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "typename": "Qualifiers::ObjCLifetime () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasStrongOrWeakObjCLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType::DestructionKind (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType::DestructionKind",
                    "typename": "clang::QualType::DestructionKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDestructedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "bool (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCForbiddenLValueType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "ctx"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "typeArgs"
                        ],
                        [
                            "clang::ObjCSubstitutionContext",
                            "context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(clang::ASTContext &, llvm::ArrayRef<clang::QualType>, clang::ObjCSubstitutionContext) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ASTContext &, ArrayRef<clang::QualType>, clang::ObjCSubstitutionContext) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "substObjCTypeArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "objectType"
                        ],
                        [
                            "const clang::DeclContext *",
                            "dc"
                        ],
                        [
                            "clang::ObjCSubstitutionContext",
                            "context"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(clang::QualType, const clang::DeclContext *, clang::ObjCSubstitutionContext) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, const clang::DeclContext *, clang::ObjCSubstitutionContext) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "substObjCMemberType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "ctx"
                        ]
                    ],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "stripObjCKindOfType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAtomicUnqualifiedType"
                }
            ],
            "typename": "clang::QualType",
            "supers": [],
            "name": "QualType"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::Type::TypeClass (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::Type::TypeClass",
                    "typename": "clang::Type::TypeClass () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFromAST"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsUnexpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCanonicalUnqualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocallyUnqualifiedSingleStepDesugaredType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIncompleteOrObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLiteralType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStandardLayoutType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBuiltinType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "K"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSpecificBuiltinType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPlaceholderType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::BuiltinType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::BuiltinType *",
                    "typename": "const clang::BuiltinType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsPlaceholderType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "K"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSpecificPlaceholderType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNonOverloadPlaceholderType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEnumeralType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBooleanType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWideCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isChar16Type"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isChar32Type"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnyCharacterType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIntegralType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIntegralOrEnumerationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIntegralOrUnscopedEnumerationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRealFloatingType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isComplexType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnyComplexType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFloatingType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isHalfType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRealType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArithmeticType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVoidType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isScalarType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAggregateType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFundamentalType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCompoundType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionNoProtoType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionProtoType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnyPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBlockPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVoidPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLValueReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRValueReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberFunctionPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberDataPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstantArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIncompleteArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVariableArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentSizedArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRecordType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStructureType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCBoxableRecordType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInterfaceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStructureOrClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isComplexIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVectorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExtVectorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCObjectPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCRetainableType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCLifetimeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCIndirectLifetimeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCNSObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCIndependentClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCQualifiedInterfaceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCQualifiedIdType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCQualifiedClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCObjectOrInterfaceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCIdType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCInertUnsafeUnretainedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCClassOrClassKindOfType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "ctx"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBlockCompatibleObjCPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCSelType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCBuiltinType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCARCBridgableType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCARCBridgableType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemplateTypeParmType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNullPtrType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAtomicType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dArrayROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dBufferROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dDepthROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayDepthROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAAROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAAROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAADepthROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAADepthROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage3dROType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dArrayWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dBufferWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dDepthWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayDepthWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAAWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAAWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAADepthWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAADepthWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage3dWOType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dArrayRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage1dBufferRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dDepthRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayDepthRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAARWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAARWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dMSAADepthRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage2dArrayMSAADepthRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOCLImage3dRWType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImageType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSamplerT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEventT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isClkEventT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isQueueT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNDRangeT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isReserveIDT"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPipeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOpenCLSpecificType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCARCImplicitlyUnretainedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "typename": "Qualifiers::ObjCLifetime () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCARCImplicitLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::Type::ScalarTypeKind (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::Type::ScalarTypeKind",
                    "typename": "clang::Type::ScalarTypeKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getScalarTypeKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInstantiationDependentType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUndeducedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVariablyModifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSizedVLAType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnnamedOrLocalType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOverloadableType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isElaboratedTypeSpecifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "canDecayToPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasPointerRepresentation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasObjCPointerRepresentation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasIntegerRepresentation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSignedIntegerRepresentation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnsignedIntegerRepresentation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasFloatingRepresentation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::RecordType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::RecordType *",
                    "typename": "const clang::RecordType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsStructureType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::RecordType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::RecordType *",
                    "typename": "const clang::RecordType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsUnionType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ComplexType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ComplexType *",
                    "typename": "const clang::ComplexType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsComplexIntegerType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ObjCObjectType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCObjectType *",
                    "typename": "const clang::ObjCObjectType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsObjCInterfaceType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsObjCInterfacePointerType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsObjCQualifiedIdType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsObjCQualifiedClassType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ObjCObjectType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCObjectType *",
                    "typename": "const clang::ObjCObjectType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsObjCQualifiedInterfaceType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::CXXRecordDecl * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsCXXRecordDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::TagDecl * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::TagDecl *",
                    "typename": "clang::TagDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsTagDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::CXXRecordDecl * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointeeCXXRecordDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::AutoType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::AutoType *",
                    "typename": "clang::AutoType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getContainedAutoType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ArrayType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ArrayType *",
                    "typename": "const clang::ArrayType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsArrayTypeUnsafe"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::ArrayType * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ArrayType *",
                    "typename": "const clang::ArrayType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "castAsArrayTypeUnsafe"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBaseElementTypeUnsafe"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArrayElementTypeNoTypeQual"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointeeOrArrayElementType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointeeType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnqualifiedDesugaredType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPromotableIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSignedIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnsignedIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSignedIntegerOrEnumerationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnsignedIntegerOrEnumerationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstantSizeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSpecifierType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::Linkage (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::Linkage",
                    "typename": "clang::Linkage () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::Visibility (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::Visibility",
                    "typename": "clang::Visibility () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVisibility"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVisibilityExplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::LinkageInfo (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::LinkageInfo",
                    "typename": "clang::LinkageInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLinkageAndVisibility"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLinkageValid"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "context"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "llvm::Optional<clang::NullabilityKind> (clang::Type::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "llvm::Optional<clang::NullabilityKind>",
                    "typename": "Optional<clang::NullabilityKind> (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNullability"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "canHaveNullability"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "dc"
                        ]
                    ],
                    "parent": "clang::Type",
                    "signature": "llvm::Optional<llvm::ArrayRef<clang::QualType> > (clang::Type::*)(const clang::DeclContext *) const",
                    "mode": "short",
                    "result_type": "llvm::Optional<llvm::ArrayRef<clang::QualType> >",
                    "typename": "Optional<ArrayRef<clang::QualType> > (const clang::DeclContext *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSubstitutions"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "bool (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "acceptsObjCTypeParams"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "const char * (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeClassName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalTypeInternal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "clang::CanQual<clang::Type> (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalTypeUnqualified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Type",
                    "signature": "void (clang::Type::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dump"
                }
            ],
            "typename": "clang::Type",
            "supers": [],
            "name": "Type"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeSourceInfo",
                    "signature": "clang::QualType (clang::TypeSourceInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TypeSourceInfo",
                    "signature": "clang::TypeLoc (clang::TypeSourceInfo::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeLoc",
                    "typename": "clang::TypeLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::TypeSourceInfo",
                    "signature": "void (clang::TypeSourceInfo::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "overrideType"
                }
            ],
            "typename": "clang::TypeSourceInfo",
            "supers": [],
            "name": "TypeSourceInfo"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TranslationUnitDecl",
                    "signature": "clang::ASTContext & (clang::TranslationUnitDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ASTContext &",
                    "typename": "clang::ASTContext &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TranslationUnitDecl",
                    "signature": "clang::NamespaceDecl * (clang::TranslationUnitDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAnonymousNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamespaceDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::TranslationUnitDecl",
                    "signature": "void (clang::TranslationUnitDecl::*)(clang::NamespaceDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamespaceDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAnonymousNamespace"
                }
            ],
            "deleter": "decl_deleter<clang::TranslationUnitDecl>::type",
            "typename": "clang::TranslationUnitDecl",
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "TranslationUnitDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PragmaCommentDecl",
                    "signature": "clang::PragmaMSCommentKind (clang::PragmaCommentDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::PragmaMSCommentKind",
                    "typename": "clang::PragmaMSCommentKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCommentKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PragmaCommentDecl",
                    "signature": "llvm::StringRef (clang::PragmaCommentDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArg"
                }
            ],
            "deleter": "decl_deleter<clang::PragmaCommentDecl>::type",
            "typename": "clang::PragmaCommentDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "PragmaCommentDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PragmaDetectMismatchDecl",
                    "signature": "llvm::StringRef (clang::PragmaDetectMismatchDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PragmaDetectMismatchDecl",
                    "signature": "llvm::StringRef (clang::PragmaDetectMismatchDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                }
            ],
            "deleter": "decl_deleter<clang::PragmaDetectMismatchDecl>::type",
            "typename": "clang::PragmaDetectMismatchDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "PragmaDetectMismatchDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "decl_deleter<clang::ExternCContextDecl>::type",
            "typename": "clang::ExternCContextDecl",
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "ExternCContextDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::IdentifierInfo * (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "llvm::StringRef (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "std::basic_string<char> (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameAsString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "os"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "printName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::DeclarationName (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::DeclarationName",
                            "N"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(clang::DeclarationName)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclarationName)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeclName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "printQualifiedName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "printQualifiedName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "std::basic_string<char> (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifiedNameAsString"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameForDiagnostic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "OldD"
                        ],
                        [
                            "bool",
                            "IsKnownNewer"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)(clang::NamedDecl *, bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::NamedDecl *, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "declarationReplaces"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isHidden"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Hide"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "void (clang::NamedDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHidden"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXXClassMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXXInstanceMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::Linkage (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Linkage",
                    "typename": "clang::Linkage () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLinkageInternal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::Linkage (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Linkage",
                    "typename": "clang::Linkage () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFormalLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExternalFormalLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExternallyVisible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::Visibility (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Visibility",
                    "typename": "clang::Visibility () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVisibility"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::LinkageInfo (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LinkageInfo",
                    "typename": "clang::LinkageInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLinkageAndVisibility"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NamedDecl::ExplicitVisibilityKind",
                            "kind"
                        ]
                    ],
                    "parent": "clang::NamedDecl",
                    "signature": "llvm::Optional<clang::Visibility> (clang::NamedDecl::*)(clang::NamedDecl::ExplicitVisibilityKind) const",
                    "mode": "short",
                    "result_type": "llvm::Optional<clang::Visibility>",
                    "typename": "Optional<clang::Visibility> (clang::NamedDecl::ExplicitVisibilityKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExplicitVisibility"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLinkageValid"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLinkageBeenComputed"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::NamedDecl * (clang::NamedDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getUnderlyingDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "const clang::NamedDecl * (clang::NamedDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamedDecl *",
                    "typename": "const clang::NamedDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getUnderlyingDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::NamedDecl * (clang::NamedDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "const clang::NamedDecl * (clang::NamedDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamedDecl *",
                    "typename": "const clang::NamedDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamedDecl",
                    "signature": "clang::ObjCStringFormatFamily (clang::NamedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ObjCStringFormatFamily",
                    "typename": "clang::ObjCStringFormatFamily () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCFStringFormattingFamily"
                }
            ],
            "deleter": "decl_deleter<clang::NamedDecl>::type",
            "typename": "clang::NamedDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "NamedDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "clang::LabelStmt * (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LabelStmt *",
                    "typename": "clang::LabelStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::LabelStmt *",
                            "T"
                        ]
                    ],
                    "parent": "clang::LabelDecl",
                    "signature": "void (clang::LabelDecl::*)(clang::LabelStmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::LabelStmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGnuLocal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::LabelDecl",
                    "signature": "void (clang::LabelDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "clang::SourceRange (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMSAsmLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isResolvedMSAsmLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Name"
                        ]
                    ],
                    "parent": "clang::LabelDecl",
                    "signature": "void (clang::LabelDecl::*)(llvm::StringRef)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::StringRef)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMSAsmLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "llvm::StringRef (clang::LabelDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMSAsmLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelDecl",
                    "signature": "void (clang::LabelDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMSAsmLabelResolved"
                }
            ],
            "deleter": "decl_deleter<clang::LabelDecl>::type",
            "typename": "clang::LabelDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "LabelDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnonymousNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInline"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Inline"
                        ]
                    ],
                    "parent": "clang::NamespaceDecl",
                    "signature": "void (clang::NamespaceDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInline"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOriginalNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamespaceDecl *",
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOriginalNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOriginalNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAnonymousNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamespaceDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::NamespaceDecl",
                    "signature": "void (clang::NamespaceDecl::*)(clang::NamespaceDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamespaceDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAnonymousNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamespaceDecl *",
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::SourceRange (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::SourceLocation (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceDecl",
                    "signature": "clang::SourceLocation (clang::NamespaceDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::NamespaceDecl",
                    "signature": "void (clang::NamespaceDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::NamespaceDecl",
                    "signature": "void (clang::NamespaceDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRBraceLoc"
                }
            ],
            "deleter": "decl_deleter<clang::NamespaceDecl>::type",
            "typename": "clang::NamespaceDecl",
            "supers": [
                "clang::NamedDecl",
                "clang::DeclContext"
            ],
            "name": "NamespaceDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ValueDecl",
                    "signature": "clang::QualType (clang::ValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "newType"
                        ]
                    ],
                    "parent": "clang::ValueDecl",
                    "signature": "void (clang::ValueDecl::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ValueDecl",
                    "signature": "bool (clang::ValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWeak"
                }
            ],
            "deleter": "decl_deleter<clang::ValueDecl>::type",
            "typename": "clang::ValueDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "ValueDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::TypeSourceInfo * (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TI"
                        ]
                    ],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInnerLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInnerLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOuterLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::SourceRange (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifierLoc",
                            "QualifierLoc"
                        ]
                    ],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::NestedNameSpecifierLoc)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NestedNameSpecifierLoc)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setQualifierInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "unsigned int (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateParameterLists"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::TemplateParameterList * (clang::DeclaratorDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameterList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateParameterList *>",
                            "TPLists"
                        ]
                    ],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::TemplateParameterList *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::TemplateParameterList *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateParameterListsInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclaratorDecl",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSpecStartLoc"
                }
            ],
            "deleter": "decl_deleter<clang::DeclaratorDecl>::type",
            "typename": "clang::DeclaratorDecl",
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "DeclaratorDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::SourceRange (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::StorageClass (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::StorageClass",
                    "typename": "clang::StorageClass () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStorageClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::StorageClass",
                            "SC"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::StorageClass)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::StorageClass)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStorageClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ThreadStorageClassSpecifier",
                            "TSC"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::ThreadStorageClassSpecifier)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ThreadStorageClassSpecifier)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTSCSpec"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::ThreadStorageClassSpecifier (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ThreadStorageClassSpecifier",
                    "typename": "clang::ThreadStorageClassSpecifier () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTSCSpec"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::TLSKind (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl::TLSKind",
                    "typename": "clang::VarDecl::TLSKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTLSKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLocalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStaticLocal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExternalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasGlobalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::StorageDuration (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::StorageDuration",
                    "typename": "clang::StorageDuration () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStorageDuration"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::LanguageLinkage (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LanguageLinkage",
                    "typename": "clang::LanguageLinkage () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLanguageLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExternC"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInExternCContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInExternCXXContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalVarDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalVarDeclOrParm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionOrMethodVarDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStaticDataMember"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            null
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)(clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "typename": "clang::VarDecl::DefinitionKind (clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "typename": "clang::VarDecl::DefinitionKind () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            null
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)(clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "typename": "clang::VarDecl::DefinitionKind (clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "typename": "clang::VarDecl::DefinitionKind () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getActingDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getActingDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            null
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)(clang::ASTContext &)",
                    "mode": "long",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *(clang::ASTContext &)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)(clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *(clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "isOutOfLine"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFileVarDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::Expr * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAnyInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "const clang::Expr * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::Expr * (clang::VarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "I"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUsableInConstantExpressions"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::EvaluatedStmt * (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::EvaluatedStmt *",
                    "typename": "clang::EvaluatedStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ensureEvaluatedStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::APValue * (clang::VarDecl::*)() const",
                    "mode": "long",
                    "result_type": "clang::APValue *",
                    "typename": "clang::APValue *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "evaluateValue"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &",
                            "Notes"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "clang::APValue * (clang::VarDecl::*)(llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &) const",
                    "mode": "long",
                    "result_type": "clang::APValue *",
                    "typename": "clang::APValue *(SmallVectorImpl<PartialDiagnosticAt> &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "evaluateValue"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::APValue * (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::APValue *",
                    "typename": "clang::APValue *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEvaluatedValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInitKnownICE"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInitICE"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "checkInitIsICE"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarDecl::InitializationStyle",
                            "Style"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::VarDecl::InitializationStyle)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarDecl::InitializationStyle)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitStyle"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl::InitializationStyle (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl::InitializationStyle",
                    "typename": "clang::VarDecl::InitializationStyle () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInitStyle"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDirectInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExceptionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "EV"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExceptionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNRVOVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "NRVO"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNRVOVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXXForRangeDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "FRD"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCXXForRangeDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isARCPseudoStrong"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ps"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setARCPseudoStrong"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInline"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInlineSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInlineSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicitlyInline"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInitCapture"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitCapture"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPreviousDeclInSameBlockScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Same"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPreviousDeclInSameBlockScope"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromStaticDataMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::SourceLocation (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointOfInstantiation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::MemberSpecializationInfo * (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MemberSpecializationInfo *",
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::VarDecl *, clang::TemplateSpecializationKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarDecl *, clang::TemplateSpecializationKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiationOfStaticDataMember"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDescribedVarTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "parent": "clang::VarDecl",
                    "signature": "void (clang::VarDecl::*)(clang::VarTemplateDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplateDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDescribedVarTemplate"
                }
            ],
            "deleter": "decl_deleter<clang::VarDecl>::type",
            "typename": "clang::VarDecl",
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "VarDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "decl_deleter<clang::ImplicitParamDecl>::type",
            "typename": "clang::ImplicitParamDecl",
            "supers": [
                "clang::VarDecl"
            ],
            "name": "ImplicitParamDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::SourceRange (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "parameterIndex"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCMethodScopeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "scopeDepth"
                        ],
                        [
                            "unsigned int",
                            "parameterIndex"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(unsigned int, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setScopeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCMethodParameter"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "unsigned int (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFunctionScopeDepth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "unsigned int (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFunctionScopeIndex"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::Decl::ObjCDeclQualifier (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl::ObjCDeclQualifier",
                    "typename": "clang::Decl::ObjCDeclQualifier () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCDeclQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QTVal"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Decl::ObjCDeclQualifier)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl::ObjCDeclQualifier)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCDeclQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isKNRPromoted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "promoted"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setKNRPromoted"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::Expr * (clang::ParmVarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefaultArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "const clang::Expr * (clang::ParmVarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "defarg"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::SourceRange (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "arg"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUninstantiatedDefaultArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::Expr * (clang::ParmVarDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getUninstantiatedDefaultArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "const clang::Expr * (clang::ParmVarDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getUninstantiatedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnparsedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUninstantiatedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUnparsedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInheritedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasInheritedDefaultArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "clang::QualType (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOriginalType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParmVarDecl",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::DeclContext *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::ParmVarDecl",
                    "signature": "void (clang::ParmVarDecl::*)(clang::DeclContext *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclContext *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOwningFunction"
                }
            ],
            "deleter": "decl_deleter<clang::ParmVarDecl>::type",
            "typename": "clang::ParmVarDecl",
            "supers": [
                "clang::VarDecl"
            ],
            "name": "ParmVarDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::DeclarationNameInfo (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getNameForDiagnostic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "E"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRangeEnd"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::SourceRange (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "hasBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialBody"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isDefined"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::Stmt * (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "doesThisDeclarationHaveABody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "B"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "Offset"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(unsigned long)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (uint64_t)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLazyBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVariadic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVirtualAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setVirtualAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPure"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "P"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPure"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLateTemplateParsed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ILT"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLateTemplateParsed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTrivial"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IT"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTrivial"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDefaulted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "D"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaulted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitlyDefaulted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ED"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExplicitlyDefaulted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasImplicitReturnZero"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IRZ"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasImplicitReturnZero"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasPrototype"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasWrittenPrototype"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInheritedPrototype"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "P"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasInheritedPrototype"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "usesSEHTry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "UST"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUsesSEHTry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDeleted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDeletedAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "D"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeletedAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMain"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMSVCRTEntryPoint"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isReservedGlobalPlacementOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isReplaceableGlobalAllocationFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::LanguageLinkage (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LanguageLinkage",
                    "typename": "clang::LanguageLinkage () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLanguageLinkage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExternC"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInExternCContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInExternCXXContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGlobal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNoReturn"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSkippedBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Skipped"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasSkippedBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPreviousDeclaration"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "llvm::ArrayRef<clang::ParmVarDecl *> (clang::FunctionDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::ArrayRef<clang::ParmVarDecl *>",
                    "typename": "ArrayRef<clang::ParmVarDecl *> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "llvm::MutableArrayRef<clang::ParmVarDecl *> (clang::FunctionDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::MutableArrayRef<clang::ParmVarDecl *>",
                    "typename": "MutableArrayRef<clang::ParmVarDecl *> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "param_empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "unsigned long (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "param_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumParams"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::ParmVarDecl * (clang::FunctionDecl::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::ParmVarDecl *",
                    "typename": "const clang::ParmVarDecl *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParamDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::ParmVarDecl * (clang::FunctionDecl::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::ParmVarDecl *",
                    "typename": "clang::ParmVarDecl *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParamDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::ArrayRef<clang::ParmVarDecl *>",
                            "NewParamInfo"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(llvm::ArrayRef<clang::ParmVarDecl *>)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (ArrayRef<clang::ParmVarDecl *>)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setParams"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "llvm::ArrayRef<clang::NamedDecl *> (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::NamedDecl *>",
                    "typename": "ArrayRef<clang::NamedDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclsInPrototypeScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::ArrayRef<clang::NamedDecl *>",
                            "NewDecls"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(llvm::ArrayRef<clang::NamedDecl *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (ArrayRef<clang::NamedDecl *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeclsInPrototypeScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMinRequiredArguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::QualType (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReturnType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::SourceRange (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReturnTypeSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::QualType (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCallResultType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::Attr * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Attr *",
                    "typename": "const clang::Attr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnusedResultAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnusedResultAttr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::StorageClass (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::StorageClass",
                    "typename": "clang::StorageClass () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStorageClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInlineSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInlineSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicitlyInline"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInlined"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInlineDefinitionExternallyVisible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMSExternInline"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "doesDeclarationForceExternallyVisibleDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOverloadedOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::OverloadedOperatorKind (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::OverloadedOperatorKind",
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOverloadedOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::IdentifierInfo * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::IdentifierInfo *",
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLiteralIdentifier"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl::TemplatedKind (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl::TemplatedKind",
                    "typename": "clang::FunctionDecl::TemplatedKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedKind"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::MemberSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MemberSpecializationInfo *",
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionDecl *, clang::TemplateSpecializationKind)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *, clang::TemplateSpecializationKind)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOfMemberFunction"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDescribedFunctionTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionTemplateDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionTemplateDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDescribedFunctionTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFunctionTemplateSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClassScopeSpecializationPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionTemplateSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionTemplateSpecializationInfo *",
                    "typename": "clang::FunctionTemplateSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitlyInstantiable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemplateInstantiation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPrimaryTemplate"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::TemplateArgumentList * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentList *",
                    "typename": "const clang::TemplateArgumentList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationArgsAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FunctionTemplateDecl *",
                            "Template"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo *",
                            "TemplateArgsAsWritten"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionTemplateDecl *, const clang::TemplateArgumentList *, void *, clang::TemplateSpecializationKind, const clang::TemplateArgumentListInfo *, clang::SourceLocation)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::FunctionTemplateDecl *, const clang::TemplateArgumentList *, void *, clang::TemplateSpecializationKind, const clang::TemplateArgumentListInfo *, clang::SourceLocation)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setFunctionTemplateSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "const clang::UnresolvedSetImpl &",
                            "Templates"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "TemplateArgs"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::ASTContext &, const clang::UnresolvedSetImpl &, const clang::TemplateArgumentListInfo &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &, const clang::UnresolvedSetImpl &, const clang::TemplateArgumentListInfo &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDependentTemplateSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::DependentFunctionTemplateSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::DependentFunctionTemplateSpecializationInfo *",
                    "typename": "clang::DependentFunctionTemplateSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDependentSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "parent": "clang::FunctionDecl",
                    "signature": "void (clang::FunctionDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "clang::SourceLocation (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointOfInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "isOutOfLine"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionDecl",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemoryFunctionKind"
                }
            ],
            "deleter": "decl_deleter<clang::FunctionDecl>::type",
            "typename": "clang::FunctionDecl",
            "supers": [
                "clang::DeclaratorDecl",
                "clang::DeclContext"
            ],
            "name": "FunctionDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "unsigned int (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFieldIndex"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMutable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBitField"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnnamedBitfield"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnonymousStructOrUnion"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::Expr * (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBitWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::FieldDecl",
                    "signature": "unsigned int (clang::FieldDecl::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBitWidthValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Width"
                        ]
                    ],
                    "parent": "clang::FieldDecl",
                    "signature": "void (clang::FieldDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBitWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "void (clang::FieldDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeBitWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::InClassInitStyle (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::InClassInitStyle",
                    "typename": "clang::InClassInitStyle () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInClassInitStyle"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInClassInitializer"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::Expr * (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInClassInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Init"
                        ]
                    ],
                    "parent": "clang::FieldDecl",
                    "signature": "void (clang::FieldDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInClassInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "void (clang::FieldDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeInClassInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasCapturedVLAType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "const clang::VariableArrayType * (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::VariableArrayType *",
                    "typename": "const clang::VariableArrayType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCapturedVLAType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::VariableArrayType *",
                            "VLAType"
                        ]
                    ],
                    "parent": "clang::FieldDecl",
                    "signature": "void (clang::FieldDecl::*)(const clang::VariableArrayType *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::VariableArrayType *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCapturedVLAType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "const clang::RecordDecl * (clang::FieldDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::RecordDecl *",
                    "typename": "const clang::RecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::RecordDecl * (clang::FieldDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::SourceRange (clang::FieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "clang::FieldDecl * (clang::FieldDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FieldDecl",
                    "signature": "const clang::FieldDecl * (clang::FieldDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FieldDecl *",
                    "typename": "const clang::FieldDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::FieldDecl>::type",
            "typename": "clang::FieldDecl",
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "FieldDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "const clang::Expr * (clang::EnumConstantDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "clang::Expr * (clang::EnumConstantDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "const llvm::APSInt & (clang::EnumConstantDecl::*)() const",
                    "mode": "short",
                    "result_type": "const llvm::APSInt &",
                    "typename": "const llvm::APSInt &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInitVal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "void (clang::EnumConstantDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const llvm::APSInt &",
                            "V"
                        ]
                    ],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "void (clang::EnumConstantDecl::*)(const llvm::APSInt &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const llvm::APSInt &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitVal"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "clang::SourceRange (clang::EnumConstantDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "clang::EnumConstantDecl * (clang::EnumConstantDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::EnumConstantDecl *",
                    "typename": "clang::EnumConstantDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumConstantDecl",
                    "signature": "const clang::EnumConstantDecl * (clang::EnumConstantDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::EnumConstantDecl *",
                    "typename": "const clang::EnumConstantDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::EnumConstantDecl>::type",
            "typename": "clang::EnumConstantDecl",
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "EnumConstantDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "llvm::ArrayRef<clang::NamedDecl *> (clang::IndirectFieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::NamedDecl *>",
                    "typename": "ArrayRef<clang::NamedDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "chain"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "unsigned int (clang::IndirectFieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getChainingSize"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "clang::FieldDecl * (clang::IndirectFieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAnonField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "clang::VarDecl * (clang::IndirectFieldDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVarDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "clang::IndirectFieldDecl * (clang::IndirectFieldDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::IndirectFieldDecl *",
                    "typename": "clang::IndirectFieldDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectFieldDecl",
                    "signature": "const clang::IndirectFieldDecl * (clang::IndirectFieldDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::IndirectFieldDecl *",
                    "typename": "const clang::IndirectFieldDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::IndirectFieldDecl>::type",
            "typename": "clang::IndirectFieldDecl",
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "IndirectFieldDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeDecl",
                    "signature": "const clang::Type * (clang::TypeDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeForDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "TD"
                        ]
                    ],
                    "parent": "clang::TypeDecl",
                    "signature": "void (clang::TypeDecl::*)(const clang::Type *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::Type *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeForDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeDecl",
                    "signature": "clang::SourceLocation (clang::TypeDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::TypeDecl",
                    "signature": "void (clang::TypeDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeDecl",
                    "signature": "clang::SourceRange (clang::TypeDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::TypeDecl>::type",
            "typename": "clang::TypeDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "TypeDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "bool (clang::TypedefNameDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isModed"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "clang::TypeSourceInfo * (clang::TypedefNameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "clang::QualType (clang::TypedefNameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnderlyingType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "newType"
                        ]
                    ],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "void (clang::TypedefNameDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "unmodedTSI"
                        ],
                        [
                            "clang::QualType",
                            "modedTy"
                        ]
                    ],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "void (clang::TypedefNameDecl::*)(clang::TypeSourceInfo *, clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setModedTypeSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "clang::TypedefNameDecl * (clang::TypedefNameDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::TypedefNameDecl *",
                    "typename": "clang::TypedefNameDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "const clang::TypedefNameDecl * (clang::TypedefNameDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::TypedefNameDecl *",
                    "typename": "const clang::TypedefNameDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "AnyRedecl"
                        ]
                    ],
                    "parent": "clang::TypedefNameDecl",
                    "signature": "clang::TagDecl * (clang::TypedefNameDecl::*)(bool) const",
                    "mode": "short",
                    "result_type": "clang::TagDecl *",
                    "typename": "clang::TagDecl *(bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAnonDeclWithTypedefName"
                }
            ],
            "deleter": "decl_deleter<clang::TypedefNameDecl>::type",
            "typename": "clang::TypedefNameDecl",
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "TypedefNameDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypedefDecl",
                    "signature": "clang::SourceRange (clang::TypedefDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::TypedefDecl>::type",
            "typename": "clang::TypedefDecl",
            "supers": [
                "clang::TypedefNameDecl"
            ],
            "name": "TypedefDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasDecl",
                    "signature": "clang::SourceRange (clang::TypeAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasDecl",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "typename": "clang::TypeAliasTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDescribedAliasTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeAliasTemplateDecl *",
                            "TAT"
                        ]
                    ],
                    "parent": "clang::TypeAliasDecl",
                    "signature": "void (clang::TypeAliasDecl::*)(clang::TypeAliasTemplateDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeAliasTemplateDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDescribedAliasTemplate"
                }
            ],
            "deleter": "decl_deleter<clang::TypeAliasDecl>::type",
            "typename": "clang::TypeAliasDecl",
            "supers": [
                "clang::TypedefNameDecl"
            ],
            "name": "TypeAliasDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::SourceRange (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBraceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(clang::SourceRange)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceRange)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBraceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::SourceLocation (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInnerLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::SourceLocation (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOuterLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::SourceRange (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::TagDecl * (clang::TagDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::TagDecl *",
                    "typename": "clang::TagDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "const clang::TagDecl * (clang::TagDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::TagDecl *",
                    "typename": "const clang::TagDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCompleteDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCompleteDefinitionRequired"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBeingDefined"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEmbeddedInDeclarator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "isInDeclarator"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEmbeddedInDeclarator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFreeStanding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "isFreeStanding"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFreeStanding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "startDefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::TagDecl * (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TagDecl *",
                    "typename": "clang::TagDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCompleteDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCompleteDefinitionRequired"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "llvm::StringRef (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKindName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::TagTypeKind (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TagTypeKind",
                    "typename": "TagKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTagKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TagTypeKind",
                            "TK"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(clang::TagTypeKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (TagKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTagKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStruct"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInterface"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEnum"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNameForLinkage"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::TypedefNameDecl * (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefNameDecl *",
                    "typename": "clang::TypedefNameDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypedefNameForAnonDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypedefNameDecl *",
                            "TDD"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(clang::TypedefNameDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypedefNameDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypedefNameForAnonDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifierLoc",
                            "QualifierLoc"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(clang::NestedNameSpecifierLoc)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NestedNameSpecifierLoc)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setQualifierInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TagDecl",
                    "signature": "unsigned int (clang::TagDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateParameterLists"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "clang::TemplateParameterList * (clang::TagDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameterList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateParameterList *>",
                            "TPLists"
                        ]
                    ],
                    "parent": "clang::TagDecl",
                    "signature": "void (clang::TagDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::TemplateParameterList *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::TemplateParameterList *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateParameterListsInfo"
                }
            ],
            "deleter": "decl_deleter<clang::TagDecl>::type",
            "typename": "clang::TagDecl",
            "supers": [
                "clang::TypeDecl",
                "clang::DeclContext"
            ],
            "name": "TagDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::EnumDecl *",
                    "typename": "const clang::EnumDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::EnumDecl *",
                    "typename": "const clang::EnumDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::EnumDecl *",
                    "typename": "const clang::EnumDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "NewType"
                        ],
                        [
                            "clang::QualType",
                            "PromotionType"
                        ],
                        [
                            "unsigned int",
                            "NumPositiveBits"
                        ],
                        [
                            "unsigned int",
                            "NumNegativeBits"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType, clang::QualType, unsigned int, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType, clang::QualType, unsigned int, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "completeDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::EnumConstantDecl> > (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::EnumConstantDecl> >",
                    "typename": "enumerator_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "enumerators"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::QualType (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPromotionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPromotionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::QualType (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIntegerTypeSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::TypeSourceInfo * (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntegerTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::SourceRange (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntegerTypeRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "unsigned int (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumPositiveBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Num"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNumPositiveBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "unsigned int (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumNegativeBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Num"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNumNegativeBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isScoped"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isScopedUsingClassTag"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFixed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isComplete"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::EnumDecl *",
                    "typename": "clang::EnumDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberEnum"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateSpecializationKind"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::EnumDecl",
                    "signature": "clang::MemberSpecializationInfo * (clang::EnumDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MemberSpecializationInfo *",
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::EnumDecl *",
                            "ED"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::EnumDecl",
                    "signature": "void (clang::EnumDecl::*)(clang::EnumDecl *, clang::TemplateSpecializationKind)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::EnumDecl *, clang::TemplateSpecializationKind)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOfMemberEnum"
                }
            ],
            "deleter": "decl_deleter<clang::EnumDecl>::type",
            "typename": "clang::EnumDecl",
            "supers": [
                "clang::TagDecl"
            ],
            "name": "EnumDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "const clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::RecordDecl *",
                    "typename": "const clang::RecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "const clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::RecordDecl *",
                    "typename": "const clang::RecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasFlexibleArrayMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasFlexibleArrayMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnonymousStructOrUnion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Anon"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAnonymousStructOrUnion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasObjectMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasObjectMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasVolatileMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasVolatileMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLoadedFieldsFromExternalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHasLoadedFieldsFromExternalStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInjectedClassName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLambda"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCapturedRecord"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCapturedRecord"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::FieldDecl> > (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::FieldDecl> >",
                    "typename": "field_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "fields"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "field_empty"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "void (clang::RecordDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "completeDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMsStruct"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "EmitRemark"
                        ]
                    ],
                    "parent": "clang::RecordDecl",
                    "signature": "bool (clang::RecordDecl::*)(bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mayInsertExtraPadding"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RecordDecl",
                    "signature": "const clang::FieldDecl * (clang::RecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::FieldDecl *",
                    "typename": "const clang::FieldDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "findFirstNamedDataMember"
                }
            ],
            "deleter": "decl_deleter<clang::RecordDecl>::type",
            "typename": "clang::RecordDecl",
            "supers": [
                "clang::TagDecl"
            ],
            "name": "RecordDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "clang::SourceLocation (clang::FileScopeAsmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsmLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "clang::SourceLocation (clang::FileScopeAsmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "void (clang::FileScopeAsmDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "clang::SourceRange (clang::FileScopeAsmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "const clang::StringLiteral * (clang::FileScopeAsmDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsmString"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "clang::StringLiteral * (clang::FileScopeAsmDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::StringLiteral *",
                            "Asm"
                        ]
                    ],
                    "parent": "clang::FileScopeAsmDecl",
                    "signature": "void (clang::FileScopeAsmDecl::*)(clang::StringLiteral *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::StringLiteral *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAsmString"
                }
            ],
            "deleter": "decl_deleter<clang::FileScopeAsmDecl>::type",
            "typename": "clang::FileScopeAsmDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "FileScopeAsmDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::SourceLocation (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaretLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVariadic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsVariadic"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::CompoundStmt * (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCompoundBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::Stmt * (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CompoundStmt *",
                            "B"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(clang::CompoundStmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CompoundStmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "Sig"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSignatureAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::TypeSourceInfo * (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSignatureAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "llvm::ArrayRef<clang::ParmVarDecl *> (clang::BlockDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::ArrayRef<clang::ParmVarDecl *>",
                    "typename": "ArrayRef<clang::ParmVarDecl *> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "llvm::MutableArrayRef<clang::ParmVarDecl *> (clang::BlockDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::MutableArrayRef<clang::ParmVarDecl *>",
                    "typename": "MutableArrayRef<clang::ParmVarDecl *> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "param_empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "unsigned long (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "param_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumParams"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "const clang::ParmVarDecl * (clang::BlockDecl::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::ParmVarDecl *",
                    "typename": "const clang::ParmVarDecl *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParamDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::ParmVarDecl * (clang::BlockDecl::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::ParmVarDecl *",
                    "typename": "clang::ParmVarDecl *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParamDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::ArrayRef<clang::ParmVarDecl *>",
                            "NewParamInfo"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(llvm::ArrayRef<clang::ParmVarDecl *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (ArrayRef<clang::ParmVarDecl *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setParams"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasCaptures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumCaptures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "llvm::ArrayRef<clang::BlockDecl::Capture> (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::BlockDecl::Capture>",
                    "typename": "ArrayRef<clang::BlockDecl::Capture> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "capturesCXXThis"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "blockMissingReturnType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBlockMissingReturnType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConversionFromLambda"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsConversionFromLambda"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "var"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "bool (clang::BlockDecl::*)(const clang::VarDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "capturesVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::BlockDecl::Capture>",
                            "Captures"
                        ],
                        [
                            "bool",
                            "CapturesCXXThis"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::BlockDecl::Capture>, bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::BlockDecl::Capture>, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCaptures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockManglingNumber"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::Decl * (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockManglingContextDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Number"
                        ],
                        [
                            "clang::Decl *",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::BlockDecl",
                    "signature": "void (clang::BlockDecl::*)(unsigned int, clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBlockMangling"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockDecl",
                    "signature": "clang::SourceRange (clang::BlockDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::BlockDecl>::type",
            "typename": "clang::BlockDecl",
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "BlockDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "clang::Stmt * (clang::CapturedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "B"
                        ]
                    ],
                    "parent": "clang::CapturedDecl",
                    "signature": "void (clang::CapturedDecl::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "bool (clang::CapturedDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNothrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Nothrow"
                        ]
                    ],
                    "parent": "clang::CapturedDecl",
                    "signature": "void (clang::CapturedDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNothrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "unsigned int (clang::CapturedDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumParams"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::CapturedDecl",
                    "signature": "clang::ImplicitParamDecl * (clang::CapturedDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::ImplicitParamDecl *",
                    "typename": "clang::ImplicitParamDecl *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::ImplicitParamDecl *",
                            "P"
                        ]
                    ],
                    "parent": "clang::CapturedDecl",
                    "signature": "void (clang::CapturedDecl::*)(unsigned int, clang::ImplicitParamDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::ImplicitParamDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "llvm::ArrayRef<clang::ImplicitParamDecl *> (clang::CapturedDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::ArrayRef<clang::ImplicitParamDecl *>",
                    "typename": "ArrayRef<clang::ImplicitParamDecl *> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "llvm::MutableArrayRef<clang::ImplicitParamDecl *> (clang::CapturedDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::MutableArrayRef<clang::ImplicitParamDecl *>",
                    "typename": "MutableArrayRef<clang::ImplicitParamDecl *> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "parameters"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "clang::ImplicitParamDecl * (clang::CapturedDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ImplicitParamDecl *",
                    "typename": "clang::ImplicitParamDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getContextParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::ImplicitParamDecl *",
                            "P"
                        ]
                    ],
                    "parent": "clang::CapturedDecl",
                    "signature": "void (clang::CapturedDecl::*)(unsigned int, clang::ImplicitParamDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::ImplicitParamDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setContextParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedDecl",
                    "signature": "unsigned int (clang::CapturedDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getContextParamPosition"
                }
            ],
            "deleter": "decl_deleter<clang::CapturedDecl>::type",
            "typename": "clang::CapturedDecl",
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "CapturedDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ImportDecl",
                    "signature": "clang::Module * (clang::ImportDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Module *",
                    "typename": "clang::Module *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImportedModule"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ImportDecl",
                    "signature": "llvm::ArrayRef<clang::SourceLocation> (clang::ImportDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::SourceLocation>",
                    "typename": "ArrayRef<clang::SourceLocation> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentifierLocs"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImportDecl",
                    "signature": "clang::SourceRange (clang::ImportDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::ImportDecl>::type",
            "typename": "clang::ImportDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "ImportDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "decl_deleter<clang::EmptyDecl>::type",
            "typename": "clang::EmptyDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "EmptyDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::Stmt::StmtClass (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt::StmtClass",
                    "typename": "clang::Stmt::StmtClass () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStmtClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "const char * (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStmtClassName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::SourceRange (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::SourceLocation (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::SourceLocation (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)() const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(clang::SourceManager &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::SourceManager &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &, clang::SourceManager &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, clang::SourceManager &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dumpColor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dumpPretty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "clang::PrinterHelper *",
                            "Helper"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &, clang::PrinterHelper *, const clang::PrintingPolicy &, unsigned int) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, clang::PrinterHelper *, const clang::PrintingPolicy &, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "printPretty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "viewAST"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::Stmt * (clang::Stmt::*)()",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "IgnoreImplicit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IgnoreCaptured"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "clang::Stmt * (clang::Stmt::*)(bool)",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *(bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "IgnoreContainers"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "const clang::Stmt * (clang::Stmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "stripLabelLikeStatements"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "clang::Stmt * (clang::Stmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "stripLabelLikeStatements"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::Stmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Stmt",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::Stmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "typename": "const_child_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "bool",
                            "Canonical"
                        ]
                    ],
                    "parent": "clang::Stmt",
                    "signature": "void (clang::Stmt::*)(llvm::FoldingSetNodeID &, const clang::ASTContext &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::FoldingSetNodeID &, const clang::ASTContext &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Profile"
                }
            ],
            "deleter": "stmt_deleter<clang::Stmt>::type",
            "typename": "clang::Stmt",
            "supers": [],
            "name": "Stmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "bool (clang::DeclStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSingleDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "const clang::Decl * (clang::DeclStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSingleDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::Decl * (clang::DeclStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSingleDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "const clang::DeclGroupRef (clang::DeclStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclGroupRef",
                    "typename": "const clang::DeclGroupRef () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDeclGroup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::DeclGroupRef (clang::DeclStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclGroupRef",
                    "typename": "clang::DeclGroupRef ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDeclGroup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::DeclGroupRef",
                            "DGR"
                        ]
                    ],
                    "parent": "clang::DeclStmt",
                    "signature": "void (clang::DeclStmt::*)(clang::DeclGroupRef)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::DeclGroupRef)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeclGroup"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStartLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DeclStmt",
                    "signature": "void (clang::DeclStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStartLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DeclStmt",
                    "signature": "void (clang::DeclStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DeclStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "llvm::iterator_range<clang::Decl **> (clang::DeclStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Decl **>",
                    "typename": "decl_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "decls"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclStmt",
                    "signature": "llvm::iterator_range<clang::Decl *const *> (clang::DeclStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Decl *const *>",
                    "typename": "decl_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "decls"
                }
            ],
            "deleter": "stmt_deleter<clang::DeclStmt>::type",
            "typename": "clang::DeclStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "DeclStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NullStmt",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSemiLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::NullStmt",
                    "signature": "void (clang::NullStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSemiLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NullStmt",
                    "signature": "bool (clang::NullStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLeadingEmptyMacro"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NullStmt",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NullStmt",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NullStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::NullStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::NullStmt>::type",
            "typename": "clang::NullStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "NullStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "llvm::ArrayRef<clang::Stmt *>",
                            "Stmts"
                        ]
                    ],
                    "parent": "clang::CompoundStmt",
                    "signature": "void (clang::CompoundStmt::*)(const clang::ASTContext &, llvm::ArrayRef<clang::Stmt *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, ArrayRef<clang::Stmt *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStmts"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "bool (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "body_empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "unsigned int (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "llvm::iterator_range<clang::Stmt **> (clang::CompoundStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt **>",
                    "typename": "body_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::Stmt * (clang::CompoundStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body_front"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::Stmt * (clang::CompoundStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body_back"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CompoundStmt",
                    "signature": "void (clang::CompoundStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLastStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "llvm::iterator_range<clang::Stmt *const *> (clang::CompoundStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt *const *>",
                    "typename": "body_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "const clang::Stmt * (clang::CompoundStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body_front"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "const clang::Stmt * (clang::CompoundStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "body_back"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLBracLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBracLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CompoundStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CompoundStmt",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CompoundStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "typename": "const_child_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CompoundStmt>::type",
            "typename": "clang::CompoundStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CompoundStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "const clang::SwitchCase * (clang::SwitchCase::*)() const",
                    "mode": "long",
                    "result_type": "const clang::SwitchCase *",
                    "typename": "const clang::SwitchCase *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNextSwitchCase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::SwitchCase * (clang::SwitchCase::*)()",
                    "mode": "long",
                    "result_type": "clang::SwitchCase *",
                    "typename": "clang::SwitchCase *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNextSwitchCase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "parent": "clang::SwitchCase",
                    "signature": "void (clang::SwitchCase::*)(clang::SwitchCase *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SwitchCase *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNextSwitchCase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::SwitchCase",
                    "signature": "void (clang::SwitchCase::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::SwitchCase",
                    "signature": "void (clang::SwitchCase::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setColonLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::Stmt * (clang::SwitchCase::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "const clang::Stmt * (clang::SwitchCase::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchCase",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::SwitchCase>::type",
            "typename": "clang::SwitchCase",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SwitchCase"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaseLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCaseLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEllipsisLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEllipsisLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setColonLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::Expr * (clang::CaseStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::Expr * (clang::CaseStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::Stmt * (clang::CaseStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "const clang::Expr * (clang::CaseStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "const clang::Expr * (clang::CaseStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "const clang::Stmt * (clang::CaseStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Val"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Val"
                        ]
                    ],
                    "parent": "clang::CaseStmt",
                    "signature": "void (clang::CaseStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CaseStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CaseStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CaseStmt>::type",
            "typename": "clang::CaseStmt",
            "supers": [
                "clang::SwitchCase"
            ],
            "name": "CaseStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "clang::Stmt * (clang::DefaultStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "const clang::Stmt * (clang::DefaultStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::DefaultStmt",
                    "signature": "void (clang::DefaultStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DefaultStmt",
                    "signature": "void (clang::DefaultStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaultLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DefaultStmt",
                    "signature": "void (clang::DefaultStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DefaultStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DefaultStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DefaultStmt>::type",
            "typename": "clang::DefaultStmt",
            "supers": [
                "clang::SwitchCase"
            ],
            "name": "DefaultStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "clang::LabelDecl * (clang::LabelStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::LabelDecl *",
                    "typename": "clang::LabelDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::LabelStmt",
                    "signature": "void (clang::LabelStmt::*)(clang::LabelDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::LabelDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "const char * (clang::LabelStmt::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "clang::Stmt * (clang::LabelStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "const clang::Stmt * (clang::LabelStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::LabelStmt",
                    "signature": "void (clang::LabelStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIdentLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "SS"
                        ]
                    ],
                    "parent": "clang::LabelStmt",
                    "signature": "void (clang::LabelStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LabelStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::LabelStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::LabelStmt>::type",
            "typename": "clang::LabelStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "LabelStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAttrLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "llvm::ArrayRef<const clang::Attr *> (clang::AttributedStmt::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<const clang::Attr *>",
                    "typename": "ArrayRef<const clang::Attr *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAttrs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "clang::Stmt * (clang::AttributedStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "const clang::Stmt * (clang::AttributedStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AttributedStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AttributedStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::AttributedStmt>::type",
            "typename": "clang::AttributedStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "AttributedStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::VarDecl * (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConditionVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "const clang::DeclStmt * (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariableDeclStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "const clang::Expr * (clang::IfStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getThen"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setThen"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getElse"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setElse"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::Expr * (clang::IfStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getThen"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getElse"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIfLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIfLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getElseLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setElseLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "C"
                        ]
                    ],
                    "parent": "clang::IfStmt",
                    "signature": "void (clang::IfStmt::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::IfStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IfStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::IfStmt>::type",
            "typename": "clang::IfStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "IfStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::VarDecl * (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConditionVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "const clang::DeclStmt * (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariableDeclStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::Stmt * (clang::SwitchStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "const clang::Stmt * (clang::SwitchStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "const clang::Expr * (clang::SwitchStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "const clang::Stmt * (clang::SwitchStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "const clang::SwitchCase * (clang::SwitchStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::SwitchCase *",
                    "typename": "const clang::SwitchCase *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSwitchCaseList"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::Expr * (clang::SwitchStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::Stmt * (clang::SwitchStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::SwitchCase * (clang::SwitchStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::SwitchCase *",
                    "typename": "clang::SwitchCase *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSwitchCaseList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::SwitchCase *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SwitchCase *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSwitchCaseList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSwitchLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSwitchLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ],
                        [
                            "clang::SourceLocation",
                            "SL"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *, clang::SourceLocation)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *, clang::SourceLocation)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)(clang::SwitchCase *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SwitchCase *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addSwitchCase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "void (clang::SwitchStmt::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAllEnumCasesCovered"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "bool (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAllEnumCasesCovered"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SwitchStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SwitchStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SwitchStmt>::type",
            "typename": "clang::SwitchStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SwitchStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::VarDecl * (clang::WhileStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "parent": "clang::WhileStmt",
                    "signature": "void (clang::WhileStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConditionVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "const clang::DeclStmt * (clang::WhileStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariableDeclStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::Expr * (clang::WhileStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "const clang::Expr * (clang::WhileStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::WhileStmt",
                    "signature": "void (clang::WhileStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::Stmt * (clang::WhileStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "const clang::Stmt * (clang::WhileStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::WhileStmt",
                    "signature": "void (clang::WhileStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWhileLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::WhileStmt",
                    "signature": "void (clang::WhileStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setWhileLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::WhileStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::WhileStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::WhileStmt>::type",
            "typename": "clang::WhileStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "WhileStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::Expr * (clang::DoStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "const clang::Expr * (clang::DoStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::DoStmt",
                    "signature": "void (clang::DoStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::Stmt * (clang::DoStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "const clang::Stmt * (clang::DoStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::DoStmt",
                    "signature": "void (clang::DoStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DoStmt",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWhileLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DoStmt",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setWhileLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DoStmt",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DoStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DoStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DoStmt>::type",
            "typename": "clang::DoStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "DoStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::Stmt * (clang::ForStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::VarDecl * (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConditionVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "const clang::DeclStmt * (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConditionVariableDeclStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::Expr * (clang::ForStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::Expr * (clang::ForStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::Stmt * (clang::ForStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "const clang::Stmt * (clang::ForStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "const clang::Expr * (clang::ForStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "const clang::Expr * (clang::ForStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "const clang::Stmt * (clang::ForStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getForLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setForLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ForStmt",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ForStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ForStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ForStmt>::type",
            "typename": "clang::ForStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "ForStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "clang::LabelDecl * (clang::GotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::LabelDecl *",
                    "typename": "clang::LabelDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::GotoStmt",
                    "signature": "void (clang::GotoStmt::*)(clang::LabelDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::LabelDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGotoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::GotoStmt",
                    "signature": "void (clang::GotoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setGotoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLabelLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::GotoStmt",
                    "signature": "void (clang::GotoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLabelLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::GotoStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GotoStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::GotoStmt>::type",
            "typename": "clang::GotoStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "GotoStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setGotoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGotoLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStarLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStarLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::Expr * (clang::IndirectGotoStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTarget"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "const clang::Expr * (clang::IndirectGotoStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTarget"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTarget"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::LabelDecl * (clang::IndirectGotoStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::LabelDecl *",
                    "typename": "clang::LabelDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getConstantTarget"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "const clang::LabelDecl * (clang::IndirectGotoStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::LabelDecl *",
                    "typename": "const clang::LabelDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getConstantTarget"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::IndirectGotoStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IndirectGotoStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::IndirectGotoStmt>::type",
            "typename": "clang::IndirectGotoStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "IndirectGotoStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ContinueStmt",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getContinueLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ContinueStmt",
                    "signature": "void (clang::ContinueStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setContinueLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ContinueStmt",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ContinueStmt",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ContinueStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ContinueStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ContinueStmt>::type",
            "typename": "clang::ContinueStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "ContinueStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BreakStmt",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBreakLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::BreakStmt",
                    "signature": "void (clang::BreakStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBreakLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BreakStmt",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BreakStmt",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BreakStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BreakStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::BreakStmt>::type",
            "typename": "clang::BreakStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "BreakStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "const clang::Expr * (clang::ReturnStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRetValue"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "clang::Expr * (clang::ReturnStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRetValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ReturnStmt",
                    "signature": "void (clang::ReturnStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRetValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReturnLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ReturnStmt",
                    "signature": "void (clang::ReturnStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setReturnLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "const clang::VarDecl * (clang::ReturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNRVOCandidate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "parent": "clang::ReturnStmt",
                    "signature": "void (clang::ReturnStmt::*)(const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNRVOCandidate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ReturnStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ReturnStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ReturnStmt>::type",
            "typename": "clang::ReturnStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "ReturnStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsmLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "void (clang::AsmStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAsmLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "bool (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSimple"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "void (clang::AsmStmt::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSimple"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "bool (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "void (clang::AsmStmt::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "std::basic_string<char> (clang::AsmStmt::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "generateAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumOutputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputConstraint"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "bool (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOutputPlusConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "const clang::Expr * (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumPlusOperands"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumInputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "const clang::Expr * (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumClobbers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClobber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::AsmStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "typename": "inputs_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "inputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::AsmStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "typename": "inputs_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "inputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::AsmStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "typename": "outputs_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "outputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::AsmStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "typename": "outputs_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "outputs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsmStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AsmStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::AsmStmt>::type",
            "typename": "clang::AsmStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "AsmStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "void (clang::GCCAsmStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsmString"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::StringLiteral *",
                            "E"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "void (clang::GCCAsmStmt::*)(clang::StringLiteral *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::StringLiteral *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &",
                            "Pieces"
                        ],
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int &",
                            "DiagOffs"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "unsigned int (clang::GCCAsmStmt::*)(llvm::SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &, const clang::ASTContext &, unsigned int &) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &, const clang::ASTContext &, unsigned int &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AnalyzeAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "std::basic_string<char> (clang::GCCAsmStmt::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "generateAsmString"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::IdentifierInfo * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputConstraintLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputConstraintLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::Expr * (clang::GCCAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::Expr * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::IdentifierInfo * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputConstraintLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputConstraintLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::Expr * (clang::GCCAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "void (clang::GCCAsmStmt::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInputExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::Expr * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "SymbolicName"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "int (clang::GCCAsmStmt::*)(llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamedOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClobber"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getClobberStringLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getClobberStringLiteral"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GCCAsmStmt",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::GCCAsmStmt>::type",
            "typename": "clang::GCCAsmStmt",
            "supers": [
                "clang::AsmStmt"
            ],
            "name": "GCCAsmStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "void (clang::MSAsmStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "void (clang::MSAsmStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "bool (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasBraces"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "unsigned int (clang::MSAsmStmt::*)()",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumAsmToks"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::Token * (clang::MSAsmStmt::*)()",
                    "mode": "short",
                    "result_type": "clang::Token *",
                    "typename": "clang::Token *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsmToks"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "std::basic_string<char> (clang::MSAsmStmt::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "generateAsmString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOutputConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::Expr * (clang::MSAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "const clang::Expr * (clang::MSAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOutputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInputConstraint"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::Expr * (clang::MSAsmStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "void (clang::MSAsmStmt::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInputExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "const clang::Expr * (clang::MSAsmStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInputExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::ArrayRef<llvm::StringRef> (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<llvm::StringRef>",
                    "typename": "ArrayRef<llvm::StringRef> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAllConstraints"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::ArrayRef<llvm::StringRef> (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<llvm::StringRef>",
                    "typename": "ArrayRef<llvm::StringRef> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClobbers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "typename": "ArrayRef<clang::Expr *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAllExprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClobber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSAsmStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSAsmStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::MSAsmStmt>::type",
            "typename": "clang::MSAsmStmt",
            "supers": [
                "clang::AsmStmt"
            ],
            "name": "MSAsmStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExceptLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::Expr * (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFilterExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "clang::CompoundStmt * (clang::SEHExceptStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlock"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SEHExceptStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHExceptStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SEHExceptStmt>::type",
            "typename": "clang::SEHExceptStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHExceptStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFinallyLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "clang::CompoundStmt * (clang::SEHFinallyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlock"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SEHFinallyStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHFinallyStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SEHFinallyStmt>::type",
            "typename": "clang::SEHFinallyStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHFinallyStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTryLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "bool (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIsCXXTry"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::CompoundStmt * (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTryBlock"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::Stmt * (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getHandler"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SEHExceptStmt * (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SEHExceptStmt *",
                    "typename": "clang::SEHExceptStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExceptHandler"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "clang::SEHFinallyStmt * (clang::SEHTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SEHFinallyStmt *",
                    "typename": "clang::SEHFinallyStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFinallyHandler"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SEHTryStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHTryStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SEHTryStmt>::type",
            "typename": "clang::SEHTryStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHTryStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHLeaveStmt",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLeaveLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::SEHLeaveStmt",
                    "signature": "void (clang::SEHLeaveStmt::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLeaveLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHLeaveStmt",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SEHLeaveStmt",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SEHLeaveStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHLeaveStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SEHLeaveStmt>::type",
            "typename": "clang::SEHLeaveStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHLeaveStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::Stmt * (clang::CapturedStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCapturedStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "const clang::Stmt * (clang::CapturedStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCapturedStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::CapturedDecl * (clang::CapturedStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::CapturedDecl *",
                    "typename": "clang::CapturedDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCapturedDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "const clang::CapturedDecl * (clang::CapturedStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CapturedDecl *",
                    "typename": "const clang::CapturedDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCapturedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CapturedDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::CapturedStmt",
                    "signature": "void (clang::CapturedStmt::*)(clang::CapturedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CapturedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCapturedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::CapturedRegionKind (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::CapturedRegionKind",
                    "typename": "clang::CapturedRegionKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCapturedRegionKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CapturedRegionKind",
                            "Kind"
                        ]
                    ],
                    "parent": "clang::CapturedStmt",
                    "signature": "void (clang::CapturedStmt::*)(clang::CapturedRegionKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CapturedRegionKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCapturedRegionKind"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "const clang::RecordDecl * (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "const clang::RecordDecl *",
                    "typename": "const clang::RecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCapturedRecordDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::RecordDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::CapturedStmt",
                    "signature": "void (clang::CapturedStmt::*)(clang::RecordDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::RecordDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCapturedRecordDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "parent": "clang::CapturedStmt",
                    "signature": "bool (clang::CapturedStmt::*)(const clang::VarDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "capturesVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "llvm::iterator_range<clang::CapturedStmt::Capture *> (clang::CapturedStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::CapturedStmt::Capture *>",
                    "typename": "capture_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "llvm::iterator_range<const clang::CapturedStmt::Capture *> (clang::CapturedStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<const clang::CapturedStmt::Capture *>",
                    "typename": "capture_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "unsigned int (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "capture_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "llvm::iterator_range<clang::Expr **> (clang::CapturedStmt::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Expr **>",
                    "typename": "capture_init_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "capture_inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::CapturedStmt::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "typename": "const_capture_init_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "capture_inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::SourceLocation (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::SourceLocation (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "clang::SourceRange (clang::CapturedStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CapturedStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CapturedStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CapturedStmt>::type",
            "typename": "clang::CapturedStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CapturedStmt"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "clearIDTables"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::DiagnosticsEngine & (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "clang::DiagnosticsEngine &",
                    "typename": "clang::DiagnosticsEngine &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDiagnostics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileManager & (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "clang::FileManager &",
                    "typename": "clang::FileManager &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileManager"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOverridenFilesKeepOriginalName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "userFilesAreVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::ArrayRef<std::pair<std::basic_string<char>, clang::FullSourceLoc> > (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<std::pair<std::basic_string<char>, clang::FullSourceLoc> >",
                    "typename": "ModuleBuildStack () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getModuleBuildStack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::ArrayRef<std::pair<std::basic_string<char>, clang::FullSourceLoc> >",
                            "stack"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(llvm::ArrayRef<std::pair<std::basic_string<char>, clang::FullSourceLoc> >)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (ModuleBuildStack)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setModuleBuildStack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::StringRef",
                            "moduleName"
                        ],
                        [
                            "clang::FullSourceLoc",
                            "importLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(llvm::StringRef, clang::FullSourceLoc)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::StringRef, clang::FullSourceLoc)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "pushModuleBuildStack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMainFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::FileID)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FileID)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMainFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "Preamble"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::FileID)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FileID)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPreambleFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPreambleFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "clang::SourceLocation",
                            "IncludePos"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *, clang::SourceLocation, clang::SrcMgr::CharacteristicKind, int, unsigned int)",
                    "mode": "long",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID (const clang::FileEntry *, clang::SourceLocation, SrcMgr::CharacteristicKind, int, unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "createFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >",
                            "Buffer"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ],
                        [
                            "clang::SourceLocation",
                            "IncludeLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, clang::SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "mode": "long",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID (std::unique_ptr<llvm::MemoryBuffer>, SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "createFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *, clang::SrcMgr::CharacteristicKind)",
                    "mode": "short",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID (const clang::FileEntry *, SrcMgr::CharacteristicKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOrCreateFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLoc"
                        ],
                        [
                            "unsigned int",
                            "TokLength"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, unsigned int)",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation, clang::SourceLocation, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "createMacroArgExpansionLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLocStart"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLocEnd"
                        ],
                        [
                            "unsigned int",
                            "TokLength"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, unsigned int, int, unsigned int)",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, unsigned int, int, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "createExpansionLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(const clang::FileEntry *, bool *)",
                    "mode": "short",
                    "result_type": "llvm::MemoryBuffer *",
                    "typename": "llvm::MemoryBuffer *(const clang::FileEntry *, bool *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemoryBufferForFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "llvm::MemoryBuffer *",
                            "Buffer"
                        ],
                        [
                            "bool",
                            "DoNotFree"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, llvm::MemoryBuffer *, bool)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (const clang::FileEntry *, llvm::MemoryBuffer *, bool)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "overrideFileContents"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >",
                            "Buffer"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (const clang::FileEntry *, std::unique_ptr<llvm::MemoryBuffer>)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "overrideFileContents"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "const clang::FileEntry *",
                            "NewFile"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, const clang::FileEntry *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (const clang::FileEntry *, const clang::FileEntry *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "overrideFileContents"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(const clang::FileEntry *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::FileEntry *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFileOverridden"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::FileEntry *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "disableFileContentsOverride"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::FileEntry *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFileIsTransient"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "Transient"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAllFilesAreTransient"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(clang::FileID, clang::SourceLocation, bool *) const",
                    "mode": "long",
                    "result_type": "llvm::MemoryBuffer *",
                    "typename": "llvm::MemoryBuffer *(clang::FileID, clang::SourceLocation, bool *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBuffer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "mode": "long",
                    "result_type": "llvm::MemoryBuffer *",
                    "typename": "llvm::MemoryBuffer *(clang::FileID, bool *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBuffer"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const clang::FileEntry * (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "const clang::FileEntry *",
                    "typename": "const clang::FileEntry *(clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileEntryForID"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::SrcMgr::SLocEntry &",
                            "sloc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const clang::FileEntry * (clang::SourceManager::*)(const clang::SrcMgr::SLocEntry &) const",
                    "mode": "short",
                    "result_type": "const clang::FileEntry *",
                    "typename": "const clang::FileEntry *(const SrcMgr::SLocEntry &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileEntryForSLocEntry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::StringRef (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (clang::FileID, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBufferData"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumCreatedFIDsForFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "NumFIDs"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::FileID, unsigned int) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FileID, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNumCreatedFIDsForFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "llvm::StringRef (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFilename"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocForStartOfFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocForEndOfFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIncludeLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::SourceLocation, llvm::StringRef> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::SourceLocation, llvm::StringRef>",
                    "typename": "std::pair<SourceLocation, StringRef> (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getModuleImportLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::SourceLocation, clang::SourceLocation> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::SourceLocation, clang::SourceLocation>",
                    "typename": "std::pair<SourceLocation, SourceLocation> (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImmediateExpansionRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::SourceLocation, clang::SourceLocation> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "long",
                    "result_type": "std::pair<clang::SourceLocation, clang::SourceLocation>",
                    "typename": "std::pair<SourceLocation, SourceLocation> (clang::SourceLocation) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpansionRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "Range"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceRange (clang::SourceManager::*)(clang::SourceRange) const",
                    "mode": "long",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange (clang::SourceRange) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpansionRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpellingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImmediateSpellingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecomposedLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecomposedExpansionLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecomposedSpellingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "typename": "std::pair<FileID, unsigned int> (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecomposedIncludedLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileOffset"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "StartLoc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMacroArgExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMacroBodyExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "MacroBegin"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAtStartOfImmediateMacroExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "MacroEnd"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAtEndOfImmediateMacroExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "Start"
                        ],
                        [
                            "unsigned int",
                            "Length"
                        ],
                        [
                            "unsigned int *",
                            "RelativeOffset"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, unsigned int, unsigned int *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation, unsigned int, unsigned int *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInSLocAddrSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ],
                        [
                            "int *",
                            "RelativeOffset"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, int *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation, int *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInSameSLocAddrSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SL"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const char * (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "const char *",
                    "typename": "const char *(clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCharacterData"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "FilePos"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID, unsigned int, bool *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::FileID, unsigned int, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColumnNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpellingColumnNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionColumnNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPresumedColumnNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "FilePos"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID, unsigned int, bool *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::FileID, unsigned int, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLineNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpellingLineNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionLineNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPresumedLineNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const char * (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "mode": "aux",
                    "result_type": "const char *",
                    "typename": "const char *(clang::SourceLocation, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBufferName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SrcMgr::CharacteristicKind (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SrcMgr::CharacteristicKind",
                    "typename": "SrcMgr::CharacteristicKind (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileCharacteristic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool",
                            "UseLineDirectives"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::PresumedLoc (clang::SourceManager::*)(clang::SourceLocation, bool) const",
                    "mode": "short",
                    "result_type": "clang::PresumedLoc",
                    "typename": "clang::PresumedLoc (clang::SourceLocation, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPresumedLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInMainFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc1"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc2"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWrittenInSameFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWrittenInMainFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInSystemHeader"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInExternCSystemHeader"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInSystemMacro"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFileIDSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int *",
                            "RelativeOffset"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::FileID, unsigned int *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::FileID, unsigned int *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)(llvm::StringRef)",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (llvm::StringRef)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLineTableFilenameID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "unsigned int",
                            "LineNo"
                        ],
                        [
                            "int",
                            "FilenameID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::SourceLocation, unsigned int, int)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation, unsigned int, int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "AddLineNote"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "unsigned int",
                            "LineNo"
                        ],
                        [
                            "int",
                            "FilenameID"
                        ],
                        [
                            "bool",
                            "IsFileEntry"
                        ],
                        [
                            "bool",
                            "IsFileExit"
                        ],
                        [
                            "bool",
                            "IsSystemHeader"
                        ],
                        [
                            "bool",
                            "IsExternCHeader"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::SourceLocation, unsigned int, int, bool, bool, bool, bool)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation, unsigned int, int, bool, bool, bool, bool)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "AddLineNote"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasLineTable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::LineTableInfo & (clang::SourceManager::*)()",
                    "mode": "short",
                    "result_type": "clang::LineTableInfo &",
                    "typename": "clang::LineTableInfo &()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLineTable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned long (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getContentCacheSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceManager::MemoryBufferSizes (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceManager::MemoryBufferSizes",
                    "typename": "clang::SourceManager::MemoryBufferSizes () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemoryBufferSizes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned long (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDataStructureSizes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "unsigned int",
                            "Line"
                        ],
                        [
                            "unsigned int",
                            "Col"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(const clang::FileEntry *, unsigned int, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (const clang::FileEntry *, unsigned int, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "translateFileLineCol"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *) const",
                    "mode": "short",
                    "result_type": "clang::FileID",
                    "typename": "clang::FileID (const clang::FileEntry *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "translateFile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "Line"
                        ],
                        [
                            "unsigned int",
                            "Col"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID, unsigned int, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::FileID, unsigned int, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "translateLineCol"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMacroArgExpandedLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBeforeInTranslationUnit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isBeforeInSLocAddrSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "unsigned int",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, unsigned int) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation, unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isBeforeInSLocAddrSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(const clang::FileEntry *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::FileEntry *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasFileInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "PrintStats"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "dump"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "local_sloc_entry_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(unsigned int, bool *) const",
                    "mode": "short",
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "typename": "const SrcMgr::SLocEntry &(unsigned int, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalSLocEntry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "loaded_sloc_entry_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(unsigned int, bool *) const",
                    "mode": "short",
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "typename": "const SrcMgr::SLocEntry &(unsigned int, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLoadedSLocEntry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "mode": "short",
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "typename": "const SrcMgr::SLocEntry &(clang::FileID, bool *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSLocEntry"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SourceManager",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNextLocalOffset"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ExternalSLocEntrySource *",
                            "Source"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "void (clang::SourceManager::*)(clang::ExternalSLocEntrySource *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ExternalSLocEntrySource *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExternalSLocEntrySource"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "NumSLocEntries"
                        ],
                        [
                            "unsigned int",
                            "TotalSize"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "std::pair<int, unsigned int> (clang::SourceManager::*)(unsigned int, unsigned int)",
                    "mode": "short",
                    "result_type": "std::pair<int, unsigned int>",
                    "typename": "std::pair<int, unsigned int> (unsigned int, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AllocateLoadedSLocEntries"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLoadedSourceLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalSourceLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLoadedFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "bool (clang::SourceManager::*)(clang::FileID) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::FileID) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLocalFileID"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::SourceManager",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImmediateMacroCallerLoc"
                }
            ],
            "typename": "clang::SourceManager",
            "supers": [],
            "name": "SourceManager"
        },
        {
            "node": false,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ast_type_traits::DynTypedNode &",
                            "Node"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ASTContext::DynTypedNodeList (clang::ASTContext::*)(const clang::ast_type_traits::DynTypedNode &)",
                    "mode": "short",
                    "result_type": "clang::ASTContext::DynTypedNodeList",
                    "typename": "clang::ASTContext::DynTypedNodeList (const ast_type_traits::DynTypedNode &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParents"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::PrintingPolicy & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const clang::PrintingPolicy &",
                    "typename": "const clang::PrintingPolicy &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPrintingPolicy"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::PrintingPolicy &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::PrintingPolicy &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPrintingPolicy"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::SourceManager & (clang::ASTContext::*)()",
                    "mode": "long",
                    "result_type": "clang::SourceManager &",
                    "typename": "clang::SourceManager &()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSourceManager"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::SourceManager & (clang::ASTContext::*)() const",
                    "mode": "long",
                    "result_type": "const clang::SourceManager &",
                    "typename": "const clang::SourceManager &() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSourceManager"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096> & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096> &",
                    "typename": "llvm::BumpPtrAllocator &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAllocator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "void *",
                            "Ptr"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(void *) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (void *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Deallocate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTAllocatedMemory"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "size_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSideTableAllocatedMemory"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::PartialDiagnostic::StorageAllocator & (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::PartialDiagnostic::StorageAllocator &",
                    "typename": "PartialDiagnostic::StorageAllocator &()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDiagAllocator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::TargetInfo & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TargetInfo &",
                    "typename": "const clang::TargetInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTargetInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::TargetInfo * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TargetInfo *",
                    "typename": "const clang::TargetInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAuxTargetInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "DestWidth"
                        ],
                        [
                            "unsigned int",
                            "Signed"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntTypeForBitwidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "DestWidth"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRealTypeForBitwidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::AtomicExpr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::AtomicExpr *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::AtomicExpr *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AtomicUsesUnsupportedLibcall"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::LangOptions & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const clang::LangOptions &",
                    "typename": "const clang::LangOptions &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLangOpts"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::SanitizerBlacklist & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const clang::SanitizerBlacklist &",
                    "typename": "const clang::SanitizerBlacklist &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSanitizerBlacklist"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::DiagnosticsEngine & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::DiagnosticsEngine &",
                    "typename": "clang::DiagnosticsEngine &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDiagnostics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::FullSourceLoc (clang::ASTContext::*)(clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::FullSourceLoc",
                    "typename": "clang::FullSourceLoc (clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFullLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::RawComment * (clang::ASTContext::*)(const clang::Decl *) const",
                    "mode": "short",
                    "result_type": "clang::RawComment *",
                    "typename": "clang::RawComment *(const clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawCommentForDeclNoCache"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::RawCommentList & (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::RawCommentList &",
                    "typename": "clang::RawCommentList &()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawCommentList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::RawComment &",
                            "RC"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::RawComment &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::RawComment &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addComment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ],
                        [
                            "const clang::Preprocessor *",
                            "PP"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(const clang::Decl *, const clang::Preprocessor *) const",
                    "mode": "short",
                    "result_type": "clang::comments::FullComment *",
                    "typename": "comments::FullComment *(const clang::Decl *, const clang::Preprocessor *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCommentForDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(const clang::Decl *) const",
                    "mode": "short",
                    "result_type": "clang::comments::FullComment *",
                    "typename": "comments::FullComment *(const clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocalCommentForDeclUncached"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::comments::FullComment *",
                            "FC"
                        ],
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(clang::comments::FullComment *, const clang::Decl *) const",
                    "mode": "short",
                    "result_type": "clang::comments::FullComment *",
                    "typename": "comments::FullComment *(comments::FullComment *, const clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "cloneFullComment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::comments::CommandTraits & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::comments::CommandTraits &",
                    "typename": "comments::CommandTraits &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCommentCommandTraits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::SmallVector<clang::Attr *, 2> & (clang::ASTContext::*)(const clang::Decl *)",
                    "mode": "short",
                    "result_type": "llvm::SmallVector<clang::Attr *, 2> &",
                    "typename": "AttrVec &(const clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclAttrs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "eraseDeclAttrs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::MemberSpecializationInfo * (clang::ASTContext::*)(const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "clang::MemberSpecializationInfo *",
                    "typename": "clang::MemberSpecializationInfo *(const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromStaticDataMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *> (clang::ASTContext::*)(const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>",
                    "typename": "TemplateOrSpecializationInfo (const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateOrSpecializationInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::FunctionDecl * (clang::ASTContext::*)(const clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *(const clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getClassScopeSpecializationPattern"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::FunctionDecl *",
                            "Pattern"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *, clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setClassScopeSpecializationPattern"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarDecl *",
                            "Inst"
                        ],
                        [
                            "clang::VarDecl *",
                            "Tmpl"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::VarDecl *, clang::VarDecl *, clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarDecl *, clang::VarDecl *, clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromStaticDataMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::VarDecl *",
                            "Inst"
                        ],
                        [
                            "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>",
                            "TSI"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::VarDecl *, llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarDecl *, TemplateOrSpecializationInfo)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateOrSpecializationInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingDecl *",
                            "Inst"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::NamedDecl * (clang::ASTContext::*)(clang::UsingDecl *)",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *(clang::UsingDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromUsingDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingDecl *",
                            "Inst"
                        ],
                        [
                            "clang::NamedDecl *",
                            "Pattern"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::UsingDecl *, clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::UsingDecl *, clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromUsingDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "Inst"
                        ],
                        [
                            "clang::UsingShadowDecl *",
                            "Pattern"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::UsingShadowDecl *, clang::UsingShadowDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::UsingShadowDecl *, clang::UsingShadowDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromUsingShadowDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "Inst"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::UsingShadowDecl * (clang::ASTContext::*)(clang::UsingShadowDecl *)",
                    "mode": "short",
                    "result_type": "clang::UsingShadowDecl *",
                    "typename": "clang::UsingShadowDecl *(clang::UsingShadowDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromUsingShadowDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "Field"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::FieldDecl * (clang::ASTContext::*)(clang::FieldDecl *)",
                    "mode": "short",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *(clang::FieldDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromUnnamedFieldDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "Inst"
                        ],
                        [
                            "clang::FieldDecl *",
                            "Tmpl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::FieldDecl *, clang::FieldDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FieldDecl *, clang::FieldDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromUnnamedFieldDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::CXXMethodDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::CXXMethodDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "overridden_methods_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::iterator_range<const clang::CXXMethodDecl *const *> (clang::ASTContext::*)(const clang::CXXMethodDecl *) const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::CXXMethodDecl *const *>",
                    "typename": "overridden_method_range (const clang::CXXMethodDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "overridden_methods"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ],
                        [
                            "const clang::CXXMethodDecl *",
                            "Overridden"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::CXXMethodDecl *, const clang::CXXMethodDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::CXXMethodDecl *, const clang::CXXMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addOverriddenMethod"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "Method"
                        ],
                        [
                            "llvm::SmallVectorImpl<const clang::NamedDecl *> &",
                            "Overridden"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::NamedDecl *, llvm::SmallVectorImpl<const clang::NamedDecl *> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::NamedDecl *, SmallVectorImpl<const clang::NamedDecl *> &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOverriddenMethods"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ImportDecl *",
                            "Import"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::ImportDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ImportDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addedLocalImportDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::iterator_range<clang::ASTContext::import_iterator> (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::ASTContext::import_iterator>",
                    "typename": "import_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "local_imports"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Decl * (clang::ASTContext::*)(clang::Decl *)",
                    "mode": "short",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *(clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPrimaryMergedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ],
                        [
                            "clang::Decl *",
                            "Primary"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::Decl *, clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Decl *, clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPrimaryMergedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ],
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "bool",
                            "NotifyListeners"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::NamedDecl *, clang::Module *, bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamedDecl *, clang::Module *, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeDefinitionIntoModule"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "deduplicateMergedDefinitonsFor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "Def"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::ArrayRef<clang::Module *> (clang::ASTContext::*)(clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Module *>",
                    "typename": "ArrayRef<clang::Module *> (clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getModulesWithMergedDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "clang::Decl *",
                            "Init"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::Module *, clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Module *, clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addModuleInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "llvm::ArrayRef<unsigned int>",
                            "IDs"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::Module *, llvm::ArrayRef<unsigned int>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Module *, ArrayRef<uint32_t>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addLazyModuleInitializers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::ArrayRef<clang::Decl *> (clang::ASTContext::*)(clang::Module *)",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Decl *>",
                    "typename": "ArrayRef<clang::Decl *> (clang::Module *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getModuleInitializers"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TranslationUnitDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TranslationUnitDecl *",
                    "typename": "clang::TranslationUnitDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTranslationUnitDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ExternCContextDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::ExternCContextDecl *",
                    "typename": "clang::ExternCContextDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExternCContextDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "typename": "clang::BuiltinTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMakeIntegerSeqDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "typename": "clang::BuiltinTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypePackElementDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::IntrusiveRefCntPtr<clang::ExternalASTSource>",
                            "Source"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(llvm::IntrusiveRefCntPtr<clang::ExternalASTSource>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (IntrusiveRefCntPtr<clang::ExternalASTSource>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExternalSource"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ExternalASTSource * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::ExternalASTSource *",
                    "typename": "clang::ExternalASTSource *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExternalSource"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTMutationListener *",
                            "Listener"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::ASTMutationListener *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTMutationListener *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setASTMutationListener"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ASTMutationListener * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::ASTMutationListener *",
                    "typename": "clang::ASTMutationListener *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTMutationListener"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "PrintStats"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "const llvm::SmallVectorImpl<clang::Type *> & (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "const llvm::SmallVectorImpl<clang::Type *> &",
                    "typename": "const SmallVectorImpl<clang::Type *> &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypes"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::BuiltinTemplateKind",
                            "BTK"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "II"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)(clang::BuiltinTemplateKind, const clang::IdentifierInfo *) const",
                    "mode": "short",
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "typename": "clang::BuiltinTemplateDecl *(clang::BuiltinTemplateKind, const clang::IdentifierInfo *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "buildBuiltinTemplateDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::StringRef",
                            "Name"
                        ],
                        [
                            "clang::TagTypeKind",
                            "TK"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::RecordDecl * (clang::ASTContext::*)(llvm::StringRef, clang::TagTypeKind) const",
                    "mode": "short",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *(llvm::StringRef, RecordDecl::TagKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "buildImplicitRecord"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "llvm::StringRef",
                            "Name"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)(clang::QualType, llvm::StringRef) const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *(clang::QualType, llvm::StringRef) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "buildImplicitTypedef"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInt128Decl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUInt128Decl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "unsigned int",
                            "AddressSpace"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAddrSpaceQualType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers::GC",
                            "gcAttr"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::GC) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, Qualifiers::GC) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCGCQualType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRestrictType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVolatileType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FunctionType *",
                            "Fn"
                        ],
                        [
                            "clang::FunctionType::ExtInfo",
                            "EInfo"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::FunctionType * (clang::ASTContext::*)(const clang::FunctionType *, clang::FunctionType::ExtInfo)",
                    "mode": "short",
                    "result_type": "const clang::FunctionType *",
                    "typename": "const clang::FunctionType *(const clang::FunctionType *, FunctionType::ExtInfo)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "adjustFunctionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "ResultType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalFunctionResultType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::QualType",
                            "ResultType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "adjustDeducedFunctionResultType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "const clang::FunctionProtoType::ExceptionSpecInfo &",
                            "ESI"
                        ],
                        [
                            "bool",
                            "AsWritten"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, const clang::FunctionProtoType::ExceptionSpecInfo &, bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *, const FunctionProtoType::ExceptionSpecInfo &, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "adjustExceptionSpec"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getComplexType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "mode": "long",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (CanQualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getComplexType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "mode": "long",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (CanQualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Orig"
                        ],
                        [
                            "clang::QualType",
                            "New"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAdjustedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "Orig"
                        ],
                        [
                            "clang::CanQual<clang::Type>",
                            "New"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>, clang::CanQual<clang::Type>) const",
                    "mode": "long",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (CanQualType, CanQualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAdjustedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDecayedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "mode": "long",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (CanQualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDecayedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAtomicType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockDescriptorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPipeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockDescriptorExtendedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setcudaConfigureCallDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::FunctionDecl * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getcudaConfigureCallDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ],
                        [
                            "const clang::VarDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "BlockRequiresCopying"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ],
                        [
                            "clang::Qualifiers::ObjCLifetime &",
                            "Lifetime"
                        ],
                        [
                            "bool &",
                            "HasByrefExtendedLayout"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::ObjCLifetime &, bool &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, Qualifiers::ObjCLifetime &, bool &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getByrefLifetime"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "bool",
                            "SpelledAsLValue"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, bool) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLValueReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRValueReferenceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "const clang::Type *",
                            "Cls"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const clang::Type *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, const clang::Type *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::Expr *",
                            "NumElts"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ],
                        [
                            "clang::SourceRange",
                            "Brackets"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVariableArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::Expr *",
                            "NumElts"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ],
                        [
                            "clang::SourceRange",
                            "Brackets"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDependentSizedArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::ArrayType::ArraySizeModifier, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, ArrayType::ArraySizeModifier, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIncompleteArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "const llvm::APInt &",
                            "ArySize"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const llvm::APInt &, clang::ArrayType::ArraySizeModifier, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, const llvm::APInt &, ArrayType::ArraySizeModifier, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstantArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVariableArrayDecayedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "unsigned int",
                            "NumElts"
                        ],
                        [
                            "clang::VectorType::VectorKind",
                            "VecKind"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int, clang::VectorType::VectorKind) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, unsigned int, VectorType::VectorKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVectorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "unsigned int",
                            "NumElts"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExtVectorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "clang::Expr *",
                            "SizeExpr"
                        ],
                        [
                            "clang::SourceLocation",
                            "AttrLoc"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDependentSizedExtVectorType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ],
                        [
                            "const clang::FunctionType::ExtInfo &",
                            "Info"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const clang::FunctionType::ExtInfo &) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, const FunctionType::ExtInfo &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFunctionNoProtoType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFunctionNoProtoType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "Args"
                        ],
                        [
                            "const clang::FunctionProtoType::ExtProtoInfo &",
                            "EPI"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::ArrayRef<clang::QualType>, const clang::FunctionProtoType::ExtProtoInfo &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, ArrayRef<clang::QualType>, const FunctionProtoType::ExtProtoInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFunctionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::TypeDecl *",
                            "Decl"
                        ],
                        [
                            "const clang::TypeDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TypeDecl *, const clang::TypeDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::TypeDecl *, const clang::TypeDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeDeclType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::TypedefNameDecl *",
                            "Decl"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TypedefNameDecl *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::TypedefNameDecl *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypedefType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "Decl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::RecordDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::RecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRecordType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::EnumDecl *",
                            "Decl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::EnumDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::EnumDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEnumType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "Decl"
                        ],
                        [
                            "clang::QualType",
                            "TST"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::CXXRecordDecl *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::CXXRecordDecl *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInjectedClassNameType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::AttributedType::Kind",
                            "attrKind"
                        ],
                        [
                            "clang::QualType",
                            "modifiedType"
                        ],
                        [
                            "clang::QualType",
                            "equivalentType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::AttributedType::Kind, clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (AttributedType::Kind, clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAttributedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::TemplateTypeParmType *",
                            "Replaced"
                        ],
                        [
                            "clang::QualType",
                            "Replacement"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TemplateTypeParmType *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::TemplateTypeParmType *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubstTemplateTypeParmType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::TemplateTypeParmType *",
                            "Replaced"
                        ],
                        [
                            "const clang::TemplateArgument &",
                            "ArgPack"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TemplateTypeParmType *, const clang::TemplateArgument &)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::TemplateTypeParmType *, const clang::TemplateArgument &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubstTemplateTypeParmPackType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Depth"
                        ],
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool",
                            "ParameterPack"
                        ],
                        [
                            "clang::TemplateTypeParmDecl *",
                            "ParmDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, unsigned int, bool, clang::TemplateTypeParmDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int, unsigned int, bool, clang::TemplateTypeParmDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateTypeParmType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, llvm::ArrayRef<clang::TemplateArgument>, clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::TemplateName, ArrayRef<clang::TemplateArgument>, clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, llvm::ArrayRef<clang::TemplateArgument>) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::TemplateName, ArrayRef<clang::TemplateArgument>) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalTemplateSpecializationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::TemplateName, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "clang::SourceLocation",
                            "TLoc"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::TemplateName, clang::SourceLocation, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(clang::TemplateName, clang::SourceLocation, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "NamedType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParenType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "clang::QualType",
                            "NamedType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getElaboratedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDependentNameType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, const clang::TemplateArgumentListInfo &) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, const clang::TemplateArgumentListInfo &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDependentTemplateSpecializationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, llvm::ArrayRef<clang::TemplateArgument>) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, ArrayRef<clang::TemplateArgument>) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDependentTemplateSpecializationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "Pattern"
                        ],
                        [
                            "llvm::Optional<unsigned int>",
                            "NumExpansions"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::Optional<unsigned int>)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, Optional<unsigned int>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPackExpansionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "Decl"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *, clang::ObjCInterfaceDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ObjCInterfaceDecl *, clang::ObjCInterfaceDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCInterfaceType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "Base"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "typeArgs"
                        ],
                        [
                            "llvm::ArrayRef<clang::ObjCProtocolDecl *>",
                            "protocols"
                        ],
                        [
                            "bool",
                            "isKindOf"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::ArrayRef<clang::QualType>, llvm::ArrayRef<clang::ObjCProtocolDecl *>, bool) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, ArrayRef<clang::QualType>, ArrayRef<clang::ObjCProtocolDecl *>, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getObjCObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "Decl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::ObjCInterfaceDecl *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::ObjCInterfaceDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ObjCObjectAdoptsQTypeProtocols"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "IDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::ObjCInterfaceDecl *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::ObjCInterfaceDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "QIdProtocolsAdoptObjCObjectProtocols"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "OIT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCObjectPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "e"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::Expr *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOfExprType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "t"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOfType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "e"
                        ],
                        [
                            "clang::QualType",
                            "UnderlyingType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::Expr *, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDecltypeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "BaseType"
                        ],
                        [
                            "clang::QualType",
                            "UnderlyingType"
                        ],
                        [
                            "clang::UnaryTransformType::UTTKind",
                            "UKind"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, clang::UnaryTransformType::UTTKind) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType, UnaryTransformType::UTTKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnaryTransformType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "DeducedType"
                        ],
                        [
                            "clang::AutoTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "bool",
                            "IsDependent"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::AutoTypeKeyword, bool) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::AutoTypeKeyword, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAutoType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAutoDeductType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAutoRRefDeductType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "Decl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TagDecl *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::TagDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTagDeclType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSizeType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntMaxType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUIntMaxType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWideCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSignedWCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnsignedWCharType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWIntType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntPtrType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUIntPtrType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointerDiffType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getProcessIDType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCFConstantStringType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSuperType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "ST"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCSuperType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawCFConstantStringType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCFConstantStringType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCFConstantStringDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::RecordDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::RecordDecl *",
                    "typename": "clang::RecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCFConstantStringTagDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "Decl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCInterfaceDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ObjCInterfaceDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCConstantStringInterface"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCConstantStringInterface"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCNSStringType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCNSStringType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCIdRedefinitionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCIdRedefinitionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCClassRedefinitionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCClassRedefinitionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSelRedefinitionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCSelRedefinitionType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNSObjectName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNSCopyingName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBoolName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMakeIntegerSeqName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypePackElementName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCInstanceType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCInstanceTypeDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "FILEDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFILEDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFILEType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "jmp_bufDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setjmp_bufDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getjmp_bufType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "sigjmp_bufDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setsigjmp_bufDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getsigjmp_bufType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "ucontext_tDecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setucontext_tDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getucontext_tType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLogicalOperationType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ],
                        [
                            "const clang::FieldDecl *",
                            "Field"
                        ],
                        [
                            "clang::QualType *",
                            "NotEncodedT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType, std::basic_string<char> &, const clang::FieldDecl *, clang::QualType *) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType, std::string &, const clang::FieldDecl *, clang::QualType *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType, std::basic_string<char> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType, std::string &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForPropertyType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType &",
                            "t"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::QualType &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLegacyIntegralTypeEncoding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QT"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::Decl::ObjCDeclQualifier, std::basic_string<char> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (Decl::ObjCDeclQualifier, std::string &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForTypeQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "Decl"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::FunctionDecl *, std::basic_string<char> &)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::FunctionDecl *, std::string &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForFunctionDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "Decl"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ],
                        [
                            "bool",
                            "Extended"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCMethodDecl *, std::basic_string<char> &, bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ObjCMethodDecl *, std::string &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForMethodDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::BlockExpr *",
                            "blockExpr"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "std::basic_string<char> (clang::ASTContext::*)(const clang::BlockExpr *) const",
                    "mode": "short",
                    "result_type": "std::basic_string<char>",
                    "typename": "std::string (const clang::BlockExpr *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForBlock"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCPropertyDecl *",
                            "PD"
                        ],
                        [
                            "const clang::Decl *",
                            "Container"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCPropertyDecl *, const clang::Decl *, std::basic_string<char> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ObjCPropertyDecl *, const clang::Decl *, std::string &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForPropertyDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCProtocolDecl *",
                            "lProto"
                        ],
                        [
                            "clang::ObjCProtocolDecl *",
                            "rProto"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::ObjCProtocolDecl *, clang::ObjCProtocolDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ObjCProtocolDecl *, clang::ObjCProtocolDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ProtocolCompatibleWithProtocol"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCPropertyDecl *",
                            "PD"
                        ],
                        [
                            "const clang::Decl *",
                            "Container"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ObjCPropertyImplDecl * (clang::ASTContext::*)(const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "mode": "short",
                    "result_type": "clang::ObjCPropertyImplDecl *",
                    "typename": "clang::ObjCPropertyImplDecl *(const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCPropertyImplDeclForPropertyDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingTypeSize"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCIdDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCIdType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSelDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCSelType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCClassDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCClassType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ObjCInterfaceDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::ObjCInterfaceDecl *",
                    "typename": "clang::ObjCInterfaceDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCProtocolDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBOOLDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypedefDecl *",
                            "TD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TypedefDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypedefDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBOOLDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBOOLType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCProtoType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinVaListDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinVaListType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Decl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVaListTagDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypedefDecl *",
                    "typename": "clang::TypedefDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinMSVaListDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinMSVaListType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "unsigned int",
                            "CVR"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCVRQualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::SplitQualType",
                            "split"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::SplitQualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::SplitQualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getQualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers",
                            "Qs"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::Qualifiers) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getQualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ],
                        [
                            "clang::Qualifiers",
                            "Qs"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::Type *, clang::Qualifiers) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::Type *, clang::Qualifiers) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getQualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "type"
                        ],
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "lifetime"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::ObjCLifetime)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, Qualifiers::ObjCLifetime)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLifetimeQualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "type"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnqualifiedObjCPointerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "Name"
                        ],
                        [
                            "clang::SourceLocation",
                            "NameLoc"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::DeclarationNameInfo (clang::ASTContext::*)(clang::TemplateName, clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo (clang::TemplateName, clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameForTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::UnresolvedSetIterator",
                            "Begin"
                        ],
                        [
                            "clang::UnresolvedSetIterator",
                            "End"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::UnresolvedSetIterator, clang::UnresolvedSetIterator) const",
                    "mode": "short",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::UnresolvedSetIterator, clang::UnresolvedSetIterator) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOverloadedTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "bool",
                            "TemplateKeyword"
                        ],
                        [
                            "clang::TemplateDecl *",
                            "Template"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, bool, clang::TemplateDecl *) const",
                    "mode": "short",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, bool, clang::TemplateDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifiedTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, const clang::IdentifierInfo *) const",
                    "mode": "long",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, const clang::IdentifierInfo *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDependentTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "clang::OverloadedOperatorKind",
                            "Operator"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, clang::OverloadedOperatorKind) const",
                    "mode": "long",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, clang::OverloadedOperatorKind) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDependentTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "param"
                        ],
                        [
                            "clang::TemplateName",
                            "replacement"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateTemplateParmDecl *, clang::TemplateName) const",
                    "mode": "short",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::TemplateTemplateParmDecl *, clang::TemplateName) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubstTemplateTemplateParm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "Param"
                        ],
                        [
                            "const clang::TemplateArgument &",
                            "ArgPack"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateTemplateParmDecl *, const clang::TemplateArgument &) const",
                    "mode": "short",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::TemplateTemplateParmDecl *, const clang::TemplateArgument &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubstTemplateTemplateParmPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "ID"
                        ],
                        [
                            "clang::ASTContext::GetBuiltinTypeError &",
                            "Error"
                        ],
                        [
                            "unsigned int *",
                            "IntegerConstantArgs"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, clang::ASTContext::GetBuiltinTypeError &, unsigned int *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int, clang::ASTContext::GetBuiltinTypeError &, unsigned int *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "GetBuiltinType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Qualifiers::GC (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::GC",
                    "typename": "Qualifiers::GC (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCGCAttrKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "FirstVec"
                        ],
                        [
                            "clang::QualType",
                            "SecondVec"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "areCompatibleVectorTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const llvm::fltSemantics & (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const llvm::fltSemantics &",
                    "typename": "const llvm::fltSemantics &(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFloatTypeSemantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypeInfo (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "clang::TypeInfo",
                    "typename": "clang::TypeInfo (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypeInfo (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::TypeInfo",
                    "typename": "clang::TypeInfo (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOpenMPDefaultSimdAlign"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "uint64_t (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "unsigned long",
                    "typename": "uint64_t (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "uint64_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCharWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "long",
                            "BitSize"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(long) const",
                    "mode": "short",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (int64_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "toCharUnitsFromBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CharUnits",
                            "CharSize"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "long (clang::ASTContext::*)(clang::CharUnits) const",
                    "mode": "short",
                    "result_type": "long",
                    "typename": "int64_t (clang::CharUnits) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "toBits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeSizeInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeSizeInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeAlign"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeAlign"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeAlignInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeAlignInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "typename": "std::pair<CharUnits, CharUnits> (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeInfoDataSizeInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "typename": "std::pair<CharUnits, CharUnits> (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeInfoInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "typename": "std::pair<CharUnits, CharUnits> (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTypeInfoInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isAlignmentRequired"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isAlignmentRequired"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::Type *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPreferredTypeAlign"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTargetDefaultAlignForAttributeAligned"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAlignOfGlobalVar"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAlignOfGlobalVarInChars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ],
                        [
                            "bool",
                            "ForAlignof"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Decl *, bool) const",
                    "mode": "short",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (const clang::Decl *, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclAlign"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::RecordDecl *) const",
                    "mode": "short",
                    "result_type": "const clang::ASTRecordLayout &",
                    "typename": "const clang::ASTRecordLayout &(const clang::RecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTRecordLayout"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *) const",
                    "mode": "short",
                    "result_type": "const clang::ASTRecordLayout &",
                    "typename": "const clang::ASTRecordLayout &(const clang::ObjCInterfaceDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTObjCInterfaceLayout"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "RD"
                        ],
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "bool",
                            "Simple"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::RecordDecl *, llvm::raw_ostream &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::RecordDecl *, llvm::raw_ostream &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "DumpRecordLayout"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCImplementationDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::ObjCImplementationDecl *) const",
                    "mode": "short",
                    "result_type": "const clang::ASTRecordLayout &",
                    "typename": "const clang::ASTRecordLayout &(const clang::ObjCImplementationDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getASTObjCImplementationLayout"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::CXXMethodDecl * (clang::ASTContext::*)(const clang::CXXRecordDecl *)",
                    "mode": "short",
                    "result_type": "const clang::CXXMethodDecl *",
                    "typename": "const clang::CXXMethodDecl *(const clang::CXXRecordDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCurrentKeyFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "method"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::CXXMethodDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::CXXMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNonKeyFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::CXXRecordDecl *) const",
                    "mode": "short",
                    "result_type": "clang::CharUnits",
                    "typename": "clang::CharUnits (const clang::CXXRecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOffsetOfBaseWithVBPtr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ValueDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::ValueDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "uint64_t (const clang::ValueDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFieldOffset"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::CXXRecordDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNearlyEmpty"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::VTableContextBase * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::VTableContextBase *",
                    "typename": "clang::VTableContextBase *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVTableContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::MangleContext * (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "clang::MangleContext *",
                    "typename": "clang::MangleContext *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "createMangleContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "OI"
                        ],
                        [
                            "bool",
                            "leafClass"
                        ],
                        [
                            "llvm::SmallVectorImpl<const clang::ObjCIvarDecl *> &",
                            "Ivars"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *, bool, llvm::SmallVectorImpl<const clang::ObjCIvarDecl *> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ObjCInterfaceDecl *, bool, SmallVectorImpl<const clang::ObjCIvarDecl *> &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "DeepCollectObjCIvars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "OI"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::ObjCInterfaceDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "CountNonClassIvars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::Decl *",
                            "CDecl"
                        ],
                        [
                            "llvm::SmallPtrSet<clang::ObjCProtocolDecl *, 8> &",
                            "Protocols"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::Decl *, llvm::SmallPtrSet<clang::ObjCProtocolDecl *, 8> &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::Decl *, llvm::SmallPtrSet<ObjCProtocolDecl *, 8> &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "CollectInheritedProtocols"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::Type * (clang::ASTContext::*)(const clang::Type *) const",
                    "mode": "long",
                    "result_type": "const clang::Type *",
                    "typename": "const clang::Type *(const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::CanQual<clang::Type>",
                    "typename": "CanQualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalParamType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasSameType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Type *",
                            "T1"
                        ],
                        [
                            "const clang::Type *",
                            "T2"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::Type *, const clang::Type *) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::Type *, const clang::Type *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasSameType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers &",
                            "Quals"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers &)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::Qualifiers &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUnqualifiedArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSameUnqualifiedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "SubT"
                        ],
                        [
                            "clang::QualType",
                            "SuperT"
                        ],
                        [
                            "bool",
                            "IsParam"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSameNullabilityTypeQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MethodDecl"
                        ],
                        [
                            "const clang::ObjCMethodDecl *",
                            "MethodImp"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ObjCMethodsAreEqual"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType &",
                            "T1"
                        ],
                        [
                            "clang::QualType &",
                            "T2"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType &, clang::QualType &)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType &, clang::QualType &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "UnwrapSimilarPointerTypes"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::NestedNameSpecifier * (clang::ASTContext::*)(clang::NestedNameSpecifier *) const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *(clang::NestedNameSpecifier *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalNestedNameSpecifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "isVariadic"
                        ],
                        [
                            "bool",
                            "IsCXXMethod"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::CallingConv (clang::ASTContext::*)(bool, bool) const",
                    "mode": "short",
                    "result_type": "clang::CallingConv",
                    "typename": "clang::CallingConv (bool, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultCallingConvention"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "Name"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateName) const",
                    "mode": "short",
                    "result_type": "clang::TemplateName",
                    "typename": "clang::TemplateName (clang::TemplateName) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateName",
                            "X"
                        ],
                        [
                            "clang::TemplateName",
                            "Y"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::TemplateName, clang::TemplateName)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::TemplateName, clang::TemplateName)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSameTemplateName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::TemplateArgument &",
                            "Arg"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TemplateArgument (clang::ASTContext::*)(const clang::TemplateArgument &) const",
                    "mode": "short",
                    "result_type": "clang::TemplateArgument",
                    "typename": "clang::TemplateArgument (const clang::TemplateArgument &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCanonicalTemplateArgument"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const clang::ArrayType *",
                    "typename": "const clang::ArrayType *(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsArrayType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ConstantArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const clang::ConstantArrayType *",
                    "typename": "const clang::ConstantArrayType *(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsConstantArrayType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::VariableArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const clang::VariableArrayType *",
                    "typename": "const clang::VariableArrayType *(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsVariableArrayType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::IncompleteArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const clang::IncompleteArrayType *",
                    "typename": "const clang::IncompleteArrayType *(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsIncompleteArrayType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::DependentSizedArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "const clang::DependentSizedArrayType *",
                    "typename": "const clang::DependentSizedArrayType *(clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAsDependentSizedArrayType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ArrayType *",
                            "VAT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ArrayType *) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ArrayType *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBaseElementType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBaseElementType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ConstantArrayType *",
                            "CA"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::ConstantArrayType *) const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "uint64_t (const clang::ConstantArrayType *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstantArrayElementCount"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAdjustedParameterType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSignatureParameterType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExceptionObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArrayDecayedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "PromotableType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPromotedIntegerType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "typename": "Qualifiers::ObjCLifetime (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInnerObjCOwnership"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::Expr *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPromotableBitField"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "int (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (clang::QualType, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntegerTypeOrder"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "int (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "short",
                    "result_type": "int",
                    "typename": "int (clang::QualType, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFloatingTypeOrder"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "typeSize"
                        ],
                        [
                            "clang::QualType",
                            "typeDomain"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFloatingTypeOfSizeWithinDomain"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::QualType) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTargetAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::Qualifiers) const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::Qualifiers) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTargetAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "AS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTargetAddressSpace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "AS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addressSpaceMapManglingFor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ],
                        [
                            "bool",
                            "CompareUnqualified"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "typesAreCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "propertyTypesAreCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "typesAreBlockPointerCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCIdType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCClassType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCSelType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ],
                        [
                            "bool",
                            "ForCompare"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ObjCQualifiedIdTypesAreCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ObjCQualifiedClassTypesAreCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "canAssignObjCInterfaces"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCObjectType *",
                            "LHS"
                        ],
                        [
                            "const clang::ObjCObjectType *",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectType *, const clang::ObjCObjectType *)",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::ObjCObjectType *, const clang::ObjCObjectType *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "canAssignObjCInterfaces"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ],
                        [
                            "bool",
                            "BlockReturnType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *, bool)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "canAssignObjCInterfacesInBlockPointer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "areComparableObjCPointerTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "areCommonBaseCompatible"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "To"
                        ],
                        [
                            "clang::QualType",
                            "From"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "canBindObjCObjectType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ],
                        [
                            "bool",
                            "BlockReturnType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool, bool)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeFunctionTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeFunctionParameterTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeTransparentUnionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            null
                        ],
                        [
                            "clang::QualType",
                            null
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType, clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mergeObjCGCQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::FunctionProtoType *",
                            "FromFunctionType"
                        ],
                        [
                            "const clang::FunctionProtoType *",
                            "ToFunctionType"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::FunctionProtoType *, const clang::FunctionProtoType *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::FunctionProtoType *, const clang::FunctionProtoType *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "doFunctionTypesMatchOnExtParameterInfos"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCContainerDecl *",
                            "CD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCContainerDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ObjCContainerDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ResetObjCLayout"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCorrespondingUnsignedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned long",
                            "Value"
                        ],
                        [
                            "clang::QualType",
                            "Type"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "llvm::APSInt (clang::ASTContext::*)(unsigned long, clang::QualType) const",
                    "mode": "short",
                    "result_type": "llvm::APSInt",
                    "typename": "llvm::APSInt (uint64_t, clang::QualType) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "MakeIntValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::Expr *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSentinelNullExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ObjCImplementationDecl * (clang::ASTContext::*)(clang::ObjCInterfaceDecl *)",
                    "mode": "long",
                    "result_type": "clang::ObjCImplementationDecl *",
                    "typename": "clang::ObjCImplementationDecl *(clang::ObjCInterfaceDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getObjCImplementation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCCategoryDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ObjCCategoryImplDecl * (clang::ASTContext::*)(clang::ObjCCategoryDecl *)",
                    "mode": "long",
                    "result_type": "clang::ObjCCategoryImplDecl *",
                    "typename": "clang::ObjCCategoryImplDecl *(clang::ObjCCategoryDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getObjCImplementation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)()",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AnyObjCImplementation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "IFaceD"
                        ],
                        [
                            "clang::ObjCImplementationDecl *",
                            "ImplD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCInterfaceDecl *, clang::ObjCImplementationDecl *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::ObjCInterfaceDecl *, clang::ObjCImplementationDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setObjCImplementation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ObjCCategoryDecl *",
                            "CatD"
                        ],
                        [
                            "clang::ObjCCategoryImplDecl *",
                            "ImplD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCCategoryDecl *, clang::ObjCCategoryImplDecl *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::ObjCCategoryDecl *, clang::ObjCCategoryImplDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setObjCImplementation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ObjCMethodDecl * (clang::ASTContext::*)(const clang::ObjCMethodDecl *) const",
                    "mode": "short",
                    "result_type": "const clang::ObjCMethodDecl *",
                    "typename": "const clang::ObjCMethodDecl *(const clang::ObjCMethodDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCMethodRedeclaration"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MD"
                        ],
                        [
                            "const clang::ObjCMethodDecl *",
                            "Redecl"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjCMethodRedeclaration"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::ObjCInterfaceDecl * (clang::ASTContext::*)(const clang::NamedDecl *) const",
                    "mode": "short",
                    "result_type": "const clang::ObjCInterfaceDecl *",
                    "typename": "const clang::ObjCInterfaceDecl *(const clang::NamedDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjContainingInterface"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "clang::Expr *",
                            "Init"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::VarDecl *, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarDecl *, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBlockVarCopyInits"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Expr * (clang::ASTContext::*)(const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBlockVarCopyInits"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "unsigned int",
                            "Size"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(clang::QualType, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "CreateTypeSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::QualType, clang::SourceLocation) const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(clang::QualType, clang::SourceLocation) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrivialTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "void (*)(void *)",
                            "Callback"
                        ],
                        [
                            "void *",
                            "Data"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(void (*)(void *), void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (void (*)(void *), void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AddDeallocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::GVALinkage (clang::ASTContext::*)(const clang::FunctionDecl *) const",
                    "mode": "short",
                    "result_type": "clang::GVALinkage",
                    "typename": "clang::GVALinkage (const clang::FunctionDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "GetGVALinkageForFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::GVALinkage (clang::ASTContext::*)(const clang::VarDecl *)",
                    "mode": "short",
                    "result_type": "clang::GVALinkage",
                    "typename": "clang::GVALinkage (const clang::VarDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "GetGVALinkageForVariable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::Decl *)",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "DeclMustBeEmitted"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "const clang::CXXConstructorDecl * (clang::ASTContext::*)(clang::CXXRecordDecl *)",
                    "mode": "short",
                    "result_type": "const clang::CXXConstructorDecl *",
                    "typename": "const clang::CXXConstructorDecl *(clang::CXXRecordDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCopyConstructorForExceptionObject"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "clang::CXXConstructorDecl *",
                            "CD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::CXXRecordDecl *, clang::CXXConstructorDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXRecordDecl *, clang::CXXConstructorDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addCopyConstructorForExceptionObject"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXConstructorDecl *",
                            "CD"
                        ],
                        [
                            "unsigned int",
                            "ParmIdx"
                        ],
                        [
                            "clang::Expr *",
                            "DAE"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::CXXConstructorDecl *, unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::CXXConstructorDecl *, unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addDefaultArgExprForConstructor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXConstructorDecl *",
                            "CD"
                        ],
                        [
                            "unsigned int",
                            "ParmIdx"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::Expr * (clang::ASTContext::*)(const clang::CXXConstructorDecl *, unsigned int)",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::CXXConstructorDecl *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgExprForConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TagDecl *",
                            "TD"
                        ],
                        [
                            "clang::TypedefNameDecl *",
                            "TND"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TagDecl *, clang::TypedefNameDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TagDecl *, clang::TypedefNameDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addTypedefNameForUnnamedTagDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "TD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::TypedefNameDecl * (clang::ASTContext::*)(const clang::TagDecl *)",
                    "mode": "short",
                    "result_type": "clang::TypedefNameDecl *",
                    "typename": "clang::TypedefNameDecl *(const clang::TagDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypedefNameForUnnamedTagDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TagDecl *",
                            "TD"
                        ],
                        [
                            "clang::DeclaratorDecl *",
                            "DD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::TagDecl *, clang::DeclaratorDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TagDecl *, clang::DeclaratorDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addDeclaratorForUnnamedTagDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "TD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::DeclaratorDecl * (clang::ASTContext::*)(const clang::TagDecl *)",
                    "mode": "short",
                    "result_type": "clang::DeclaratorDecl *",
                    "typename": "clang::DeclaratorDecl *(const clang::TagDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclaratorForUnnamedTagDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ],
                        [
                            "unsigned int",
                            "Number"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::NamedDecl *, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::NamedDecl *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setManglingNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::NamedDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::NamedDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getManglingNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "unsigned int",
                            "Number"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::VarDecl *, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::VarDecl *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStaticLocalNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::VarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStaticLocalNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::MangleNumberingContext & (clang::ASTContext::*)(const clang::DeclContext *)",
                    "mode": "short",
                    "result_type": "clang::MangleNumberingContext &",
                    "typename": "clang::MangleNumberingContext &(const clang::DeclContext *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getManglingNumberContext"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ASTContext",
                    "signature": "clang::MangleNumberingContext * (clang::ASTContext::*)() const",
                    "mode": "short",
                    "result_type": "clang::MangleNumberingContext *",
                    "typename": "clang::MangleNumberingContext *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "createMangleNumberingContext"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ParmVarDecl *",
                            "D"
                        ],
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::ParmVarDecl *, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ParmVarDecl *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setParameterIndex"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ParmVarDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::ParmVarDecl *) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int (const clang::ParmVarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameterIndex"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::MaterializeTemporaryExpr *",
                            "E"
                        ],
                        [
                            "bool",
                            "MayCreate"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::APValue * (clang::ASTContext::*)(const clang::MaterializeTemporaryExpr *, bool)",
                    "mode": "short",
                    "result_type": "clang::APValue *",
                    "typename": "clang::APValue *(const clang::MaterializeTemporaryExpr *, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMaterializedTemporaryValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::TargetInfo &",
                            "Target"
                        ],
                        [
                            "const clang::TargetInfo *",
                            "AuxTarget"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(const clang::TargetInfo &, const clang::TargetInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::TargetInfo &, const clang::TargetInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "InitBuiltinTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QT"
                        ],
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::basic_string<char> &",
                            "S"
                        ],
                        [
                            "bool",
                            "Extended"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "void (clang::ASTContext::*)(clang::Decl::ObjCDeclQualifier, clang::QualType, std::basic_string<char> &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (Decl::ObjCDeclQualifier, clang::QualType, std::string &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCEncodingForMethodParameter"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "bool (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMSStaticDataMemberInlineDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "parent": "clang::ASTContext",
                    "signature": "clang::ASTContext::InlineVariableDefinitionKind (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "mode": "short",
                    "result_type": "clang::ASTContext::InlineVariableDefinitionKind",
                    "typename": "clang::ASTContext::InlineVariableDefinitionKind (const clang::VarDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInlineVariableDefinitionKind"
                }
            ],
            "typename": "clang::ASTContext",
            "supers": [],
            "name": "ASTContext"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::QualType (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "t"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isValueDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "VD"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setValueDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTypeDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "TD"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInstantiationDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ID"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiationDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsUnexpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "PP"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setContainsUnexpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::SourceLocation (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isXValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGLValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr::LValueClassification (clang::Expr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::Expr::LValueClassification",
                    "typename": "clang::Expr::LValueClassification (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ClassifyLValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr::isModifiableLvalueResult (clang::Expr::*)(clang::ASTContext &, clang::SourceLocation *) const",
                    "mode": "short",
                    "result_type": "clang::Expr::isModifiableLvalueResult",
                    "typename": "clang::Expr::isModifiableLvalueResult (clang::ASTContext &, clang::SourceLocation *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isModifiableLvalue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr::Classification (clang::Expr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::Expr::Classification",
                    "typename": "clang::Expr::Classification (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "Classify"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation &",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr::Classification (clang::Expr::*)(clang::ASTContext &, clang::SourceLocation &) const",
                    "mode": "short",
                    "result_type": "clang::Expr::Classification",
                    "typename": "clang::Expr::Classification (clang::ASTContext &, clang::SourceLocation &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ClassifyModifiable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::ExprValueKind (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ExprValueKind",
                    "typename": "clang::ExprValueKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValueKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::ExprObjectKind (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ExprObjectKind",
                    "typename": "clang::ExprObjectKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjectKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOrdinaryOrBitFieldObject"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ExprValueKind",
                            "Cat"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(clang::ExprValueKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ExprValueKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setValueKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ExprObjectKind",
                            "Cat"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(clang::ExprObjectKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ExprObjectKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setObjectKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "refersToBitField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::FieldDecl * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSourceBitField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::FieldDecl * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FieldDecl *",
                    "typename": "const clang::FieldDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSourceBitField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::ObjCPropertyRefExpr * (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ObjCPropertyRefExpr *",
                    "typename": "const clang::ObjCPropertyRefExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjCProperty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isObjCSelfExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "refersToVectorElement"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "refersToGlobalRegisterVar"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasPlaceholderType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::BuiltinType::Kind",
                            "K"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::BuiltinType::Kind) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (BuiltinType::Kind) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "hasPlaceholderType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isKnownToHaveBooleanValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::APSInt &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ],
                        [
                            "bool",
                            "isEvaluated"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(llvm::APSInt &, const clang::ASTContext &, clang::SourceLocation *, bool) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (llvm::APSInt &, const clang::ASTContext &, clang::SourceLocation *, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isIntegerConstantExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::SourceLocation *) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &, clang::SourceLocation *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isIntegerConstantExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXX98IntegralConstantExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::APValue *",
                            "Result"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::APValue *, clang::SourceLocation *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &, clang::APValue *, clang::SourceLocation *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCXX11ConstantExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsRValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(bool &, const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool &, const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsBooleanCondition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::APSInt &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(llvm::APSInt &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::APSInt &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsInt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::APFloat &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(llvm::APFloat &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (llvm::APFloat &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsFloat"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEvaluatable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "bool",
                            "IncludePossibleEffects"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "HasSideEffects"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialCall"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *",
                            "Diag"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "llvm::APSInt (clang::Expr::*)(const clang::ASTContext &, llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *) const",
                    "mode": "short",
                    "result_type": "llvm::APSInt",
                    "typename": "llvm::APSInt (const clang::ASTContext &, SmallVectorImpl<PartialDiagnosticAt> *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateKnownConstInt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "void (clang::Expr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateForOverflow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsLValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::APValue &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &",
                            "Notes"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::APValue &, const clang::ASTContext &, const clang::VarDecl *, llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::APValue &, const clang::ASTContext &, const clang::VarDecl *, SmallVectorImpl<PartialDiagnosticAt> &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateAsInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::APValue &",
                            "Value"
                        ],
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::FunctionDecl *",
                            "Callee"
                        ],
                        [
                            "llvm::ArrayRef<const clang::Expr *>",
                            "Args"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::APValue &, clang::ASTContext &, const clang::FunctionDecl *, llvm::ArrayRef<const clang::Expr *>) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::APValue &, clang::ASTContext &, const clang::FunctionDecl *, ArrayRef<const clang::Expr *>) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "EvaluateWithSubstitution"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long &",
                            "Result"
                        ],
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "unsigned int",
                            "Type"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(unsigned long &, clang::ASTContext &, unsigned int) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (uint64_t &, clang::ASTContext &, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "tryEvaluateObjectSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::NullPointerConstantValueDependence",
                            "NPC"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr::NullPointerConstantKind (clang::Expr::*)(clang::ASTContext &, clang::Expr::NullPointerConstantValueDependence) const",
                    "mode": "short",
                    "result_type": "clang::Expr::NullPointerConstantKind",
                    "typename": "clang::Expr::NullPointerConstantKind (clang::ASTContext &, clang::Expr::NullPointerConstantValueDependence) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isNullPointerConstant"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOBJCGCCandidate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBoundMemberFunction"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreImpCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreImplicit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreImplicit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParens"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenImpCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreConversionOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreConversionOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenImpCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenLValueCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenLValueCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)(clang::ASTContext &)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(clang::ASTContext &)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenNoopCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "ignoreParenBaseCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "ignoreParenBaseCasts"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::CXXRecordDecl *",
                            "TempTy"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &, const clang::CXXRecordDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (clang::ASTContext &, const clang::CXXRecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTemporaryObject"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "bool (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitCXXThis"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreImpCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParens"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)(clang::ASTContext &) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(clang::ASTContext &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "IgnoreParenNoopCasts"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::Expr",
                    "signature": "const clang::CXXRecordDecl * (clang::Expr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBestDynamicClassType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<const clang::Expr *> &",
                            "CommaLHS"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::SubobjectAdjustment> &",
                            "Adjustments"
                        ]
                    ],
                    "parent": "clang::Expr",
                    "signature": "const clang::Expr * (clang::Expr::*)(llvm::SmallVectorImpl<const clang::Expr *> &, llvm::SmallVectorImpl<clang::SubobjectAdjustment> &) const",
                    "mode": "short",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(SmallVectorImpl<const clang::Expr *> &, SmallVectorImpl<clang::SubobjectAdjustment> &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "skipRValueSubobjectAdjustments"
                }
            ],
            "deleter": "stmt_deleter<clang::Expr>::type",
            "typename": "clang::Expr",
            "supers": [
                "clang::Stmt"
            ],
            "name": "Expr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::OpaqueValueExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OpaqueValueExpr",
                    "signature": "clang::Expr * (clang::OpaqueValueExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceExpr"
                }
            ],
            "deleter": "stmt_deleter<clang::OpaqueValueExpr>::type",
            "typename": "clang::OpaqueValueExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "OpaqueValueExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::ValueDecl * (clang::DeclRefExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::ValueDecl *",
                    "typename": "clang::ValueDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "const clang::ValueDecl * (clang::DeclRefExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::ValueDecl *",
                    "typename": "const clang::ValueDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ValueDecl *",
                            "NewD"
                        ]
                    ],
                    "parent": "clang::DeclRefExpr",
                    "signature": "void (clang::DeclRefExpr::*)(clang::ValueDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ValueDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::DeclarationNameInfo (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DeclRefExpr",
                    "signature": "void (clang::DeclRefExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::NamedDecl * (clang::DeclRefExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFoundDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "const clang::NamedDecl * (clang::DeclRefExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamedDecl *",
                    "typename": "const clang::NamedDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFoundDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKWAndArgsInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKeyword"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "parent": "clang::DeclRefExpr",
                    "signature": "void (clang::DeclRefExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "copyTemplateArgumentsInto"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "const clang::TemplateArgumentLoc * (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "unsigned int (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "template_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::DeclRefExpr",
                    "signature": "void (clang::DeclRefExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "refersToEnclosingVariableOrCapture"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DeclRefExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DeclRefExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DeclRefExpr>::type",
            "typename": "clang::DeclRefExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "DeclRefExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "clang::PredefinedExpr::IdentType (clang::PredefinedExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::PredefinedExpr::IdentType",
                    "typename": "clang::PredefinedExpr::IdentType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::PredefinedExpr",
                    "signature": "void (clang::PredefinedExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "clang::StringLiteral * (clang::PredefinedExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFunctionName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "const clang::StringLiteral * (clang::PredefinedExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getFunctionName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PredefinedExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PredefinedExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::PredefinedExpr>::type",
            "typename": "clang::PredefinedExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "PredefinedExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IntegerLiteral",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IntegerLiteral",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::IntegerLiteral",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ]
                    ],
                    "parent": "clang::IntegerLiteral",
                    "signature": "void (clang::IntegerLiteral::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::IntegerLiteral",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IntegerLiteral::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::IntegerLiteral>::type",
            "typename": "clang::IntegerLiteral",
            "supers": [
                "clang::Expr"
            ],
            "name": "IntegerLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "clang::CharacterLiteral::CharacterKind (clang::CharacterLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::CharacterLiteral::CharacterKind",
                    "typename": "clang::CharacterLiteral::CharacterKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "unsigned int (clang::CharacterLiteral::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ]
                    ],
                    "parent": "clang::CharacterLiteral",
                    "signature": "void (clang::CharacterLiteral::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CharacterLiteral::CharacterKind",
                            "kind"
                        ]
                    ],
                    "parent": "clang::CharacterLiteral",
                    "signature": "void (clang::CharacterLiteral::*)(clang::CharacterLiteral::CharacterKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CharacterLiteral::CharacterKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Val"
                        ]
                    ],
                    "parent": "clang::CharacterLiteral",
                    "signature": "void (clang::CharacterLiteral::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CharacterLiteral",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CharacterLiteral::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CharacterLiteral>::type",
            "typename": "clang::CharacterLiteral",
            "supers": [
                "clang::Expr"
            ],
            "name": "CharacterLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "llvm::APFloat (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "llvm::APFloat",
                    "typename": "llvm::APFloat () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const llvm::APFloat &",
                            "Val"
                        ]
                    ],
                    "parent": "clang::FloatingLiteral",
                    "signature": "void (clang::FloatingLiteral::*)(const clang::ASTContext &, const llvm::APFloat &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, const llvm::APFloat &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "clang::Stmt::APFloatSemantics (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt::APFloatSemantics",
                    "typename": "clang::Stmt::APFloatSemantics () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawSemantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Stmt::APFloatSemantics",
                            "Sem"
                        ]
                    ],
                    "parent": "clang::FloatingLiteral",
                    "signature": "void (clang::FloatingLiteral::*)(clang::Stmt::APFloatSemantics)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt::APFloatSemantics)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRawSemantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "const llvm::fltSemantics & (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "const llvm::fltSemantics &",
                    "typename": "const llvm::fltSemantics &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSemantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const llvm::fltSemantics &",
                            "Sem"
                        ]
                    ],
                    "parent": "clang::FloatingLiteral",
                    "signature": "void (clang::FloatingLiteral::*)(const llvm::fltSemantics &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const llvm::fltSemantics &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSemantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "bool (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExact"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "E"
                        ]
                    ],
                    "parent": "clang::FloatingLiteral",
                    "signature": "void (clang::FloatingLiteral::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExact"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "double (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "double",
                    "typename": "double () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValueAsApproximateDouble"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::FloatingLiteral",
                    "signature": "void (clang::FloatingLiteral::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FloatingLiteral",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::FloatingLiteral::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::FloatingLiteral>::type",
            "typename": "clang::FloatingLiteral",
            "supers": [
                "clang::Expr"
            ],
            "name": "FloatingLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "const clang::Expr * (clang::ImaginaryLiteral::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "clang::Expr * (clang::ImaginaryLiteral::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "void (clang::ImaginaryLiteral::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "clang::SourceLocation (clang::ImaginaryLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "clang::SourceLocation (clang::ImaginaryLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ImaginaryLiteral",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ImaginaryLiteral::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ImaginaryLiteral>::type",
            "typename": "clang::ImaginaryLiteral",
            "supers": [
                "clang::Expr"
            ],
            "name": "ImaginaryLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "llvm::StringRef (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "llvm::StringRef (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBytes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "void (clang::StringLiteral::*)(llvm::raw_ostream &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "outputString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned long",
                            "i"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "unsigned int (clang::StringLiteral::*)(unsigned long) const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "uint32_t (size_t) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCodeUnit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getByteLength"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLength"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCharByteWidth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "llvm::StringRef",
                            "Str"
                        ],
                        [
                            "clang::StringLiteral::StringKind",
                            "Kind"
                        ],
                        [
                            "bool",
                            "IsPascal"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "void (clang::StringLiteral::*)(const clang::ASTContext &, llvm::StringRef, clang::StringLiteral::StringKind, bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, llvm::StringRef, clang::StringLiteral::StringKind, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setString"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "clang::StringLiteral::StringKind (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::StringLiteral::StringKind",
                    "typename": "clang::StringLiteral::StringKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAscii"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isWide"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUTF8"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUTF16"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUTF32"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPascal"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsNonAsciiOrNull"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumConcatenated"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "TokNum"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStrTokenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "TokNum"
                        ],
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "void (clang::StringLiteral::*)(unsigned int, clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStrTokenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "ByteNo"
                        ],
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ],
                        [
                            "const clang::LangOptions &",
                            "Features"
                        ],
                        [
                            "const clang::TargetInfo &",
                            "Target"
                        ],
                        [
                            "unsigned int *",
                            "StartToken"
                        ],
                        [
                            "unsigned int *",
                            "StartTokenByteOffset"
                        ]
                    ],
                    "parent": "clang::StringLiteral",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)(unsigned int, const clang::SourceManager &, const clang::LangOptions &, const clang::TargetInfo &, unsigned int *, unsigned int *) const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation (unsigned int, const clang::SourceManager &, const clang::LangOptions &, const clang::TargetInfo &, unsigned int *, unsigned int *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocationOfByte"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::StringLiteral",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::StringLiteral::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::StringLiteral>::type",
            "typename": "clang::StringLiteral",
            "supers": [
                "clang::Expr"
            ],
            "name": "StringLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "const clang::Expr * (clang::ParenExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "clang::Expr * (clang::ParenExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ParenExpr",
                    "signature": "void (clang::ParenExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParen"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ParenExpr",
                    "signature": "void (clang::ParenExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParen"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParen"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ParenExpr",
                    "signature": "void (clang::ParenExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParen"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ParenExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ParenExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ParenExpr>::type",
            "typename": "clang::ParenExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ParenExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::UnaryOperatorKind (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::UnaryOperatorKind",
                    "typename": "Opcode () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOpcode"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UnaryOperatorKind",
                            "O"
                        ]
                    ],
                    "parent": "clang::UnaryOperator",
                    "signature": "void (clang::UnaryOperator::*)(clang::UnaryOperatorKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (Opcode)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOpcode"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::Expr * (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::UnaryOperator",
                    "signature": "void (clang::UnaryOperator::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::UnaryOperator",
                    "signature": "void (clang::UnaryOperator::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isPrefix"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isPostfix"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isIncrementOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isDecrementOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isIncrementDecrementOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isArithmeticOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnaryOperator",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnaryOperator::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::UnaryOperator>::type",
            "typename": "clang::UnaryOperator",
            "supers": [
                "clang::Expr"
            ],
            "name": "UnaryOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "R"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::TypeSourceInfo * (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "tsi"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "const clang::OffsetOfNode & (clang::OffsetOfExpr::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "const clang::OffsetOfNode &",
                    "typename": "const clang::OffsetOfNode &(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getComponent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::OffsetOfNode",
                            "ON"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "void (clang::OffsetOfExpr::*)(unsigned int, clang::OffsetOfNode)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::OffsetOfNode)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setComponent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "unsigned int (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumComponents"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::Expr * (clang::OffsetOfExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIndexExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "const clang::Expr * (clang::OffsetOfExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIndexExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "void (clang::OffsetOfExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIndexExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "unsigned int (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExpressions"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OffsetOfExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::OffsetOfExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::OffsetOfExpr>::type",
            "typename": "clang::OffsetOfExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "OffsetOfExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::UnaryExprOrTypeTrait (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::UnaryExprOrTypeTrait",
                    "typename": "clang::UnaryExprOrTypeTrait () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UnaryExprOrTypeTrait",
                            "K"
                        ]
                    ],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::UnaryExprOrTypeTrait)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::UnaryExprOrTypeTrait)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "bool (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArgumentType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::QualType (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArgumentType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::TypeSourceInfo * (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArgumentTypeInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::Expr * (clang::UnaryExprOrTypeTraitExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArgumentExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "const clang::Expr * (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArgumentExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::Expr *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::QualType (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOfArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnaryExprOrTypeTraitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::UnaryExprOrTypeTraitExpr>::type",
            "typename": "clang::UnaryExprOrTypeTraitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "UnaryExprOrTypeTraitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIdx"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIdx"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBracketLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRBracketLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ArraySubscriptExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArraySubscriptExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ArraySubscriptExpr>::type",
            "typename": "clang::ArraySubscriptExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ArraySubscriptExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "const clang::Expr * (clang::CallExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCallee"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::Expr * (clang::CallExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCallee"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "F"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "void (clang::CallExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCallee"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::Decl * (clang::CallExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCalleeDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "const clang::Decl * (clang::CallExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Decl *",
                    "typename": "const clang::Decl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCalleeDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::FunctionDecl * (clang::CallExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDirectCallee"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "const clang::FunctionDecl * (clang::CallExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getDirectCallee"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "clang::Expr * (clang::CallExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "const clang::Expr * (clang::CallExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ],
                        [
                            "clang::Expr *",
                            "ArgExpr"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "void (clang::CallExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "NumArgs"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "void (clang::CallExpr::*)(const clang::ASTContext &, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNumArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CallExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "typename": "arg_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CallExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "typename": "arg_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "llvm::ArrayRef<clang::Stmt *> (clang::CallExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Stmt *>",
                    "typename": "ArrayRef<clang::Stmt *> ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRawSubExprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumCommas"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinCallee"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "bool (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUnevaluatedBuiltinCall"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "clang::QualType (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCallReturnType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CallExpr",
                    "signature": "void (clang::CallExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CallExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CallExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CallExpr>::type",
            "typename": "clang::CallExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CallExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::Expr * (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::ValueDecl * (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ValueDecl *",
                    "typename": "clang::ValueDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ValueDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(clang::ValueDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ValueDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMemberDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::DeclAccessPair (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclAccessPair",
                    "typename": "clang::DeclAccessPair () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFoundDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKeyword"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "copyTemplateArgumentsInto"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "const clang::TemplateArgumentLoc * (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "unsigned int (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "template_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::DeclarationNameInfo (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "A"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMemberLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitAccess"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "void (clang::MemberExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::LangOptions &",
                            "LO"
                        ]
                    ],
                    "parent": "clang::MemberExpr",
                    "signature": "bool (clang::MemberExpr::*)(const clang::LangOptions &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::LangOptions &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "performsVirtualDispatch"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MemberExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MemberExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::MemberExpr>::type",
            "typename": "clang::MemberExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "MemberExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "const clang::Expr * (clang::CompoundLiteralExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializer"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "clang::Expr * (clang::CompoundLiteralExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "bool (clang::CompoundLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFileScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "FS"
                        ]
                    ],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "void (clang::CompoundLiteralExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFileScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CompoundLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "tinfo"
                        ]
                    ],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CompoundLiteralExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CompoundLiteralExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CompoundLiteralExpr>::type",
            "typename": "clang::CompoundLiteralExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CompoundLiteralExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "clang::CastKind (clang::CastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CastKind",
                    "typename": "clang::CastKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCastKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CastKind",
                            "K"
                        ]
                    ],
                    "parent": "clang::CastExpr",
                    "signature": "void (clang::CastExpr::*)(clang::CastKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CastKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCastKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "const char * (clang::CastExpr::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCastKindName"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "clang::Expr * (clang::CastExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "const clang::Expr * (clang::CastExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CastExpr",
                    "signature": "void (clang::CastExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "clang::Expr * (clang::CastExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExprAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "const clang::Expr * (clang::CastExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExprAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "bool (clang::CastExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "path_empty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "unsigned int (clang::CastExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "path_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CastExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CastExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CastExpr>::type",
            "typename": "clang::CastExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImplicitCastExpr",
                    "signature": "clang::SourceLocation (clang::ImplicitCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImplicitCastExpr",
                    "signature": "clang::SourceLocation (clang::ImplicitCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::ImplicitCastExpr>::type",
            "typename": "clang::ImplicitCastExpr",
            "supers": [
                "clang::CastExpr"
            ],
            "name": "ImplicitCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExplicitCastExpr",
                    "signature": "clang::TypeSourceInfo * (clang::ExplicitCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeInfoAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "writtenTy"
                        ]
                    ],
                    "parent": "clang::ExplicitCastExpr",
                    "signature": "void (clang::ExplicitCastExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeInfoAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExplicitCastExpr",
                    "signature": "clang::QualType (clang::ExplicitCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeAsWritten"
                }
            ],
            "deleter": "stmt_deleter<clang::ExplicitCastExpr>::type",
            "typename": "clang::ExplicitCastExpr",
            "supers": [
                "clang::CastExpr"
            ],
            "name": "ExplicitCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "void (clang::CStyleCastExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "void (clang::CStyleCastExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CStyleCastExpr",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::CStyleCastExpr>::type",
            "typename": "clang::CStyleCastExpr",
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CStyleCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::BinaryOperator",
                    "signature": "void (clang::BinaryOperator::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::BinaryOperatorKind (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::BinaryOperatorKind",
                    "typename": "Opcode () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOpcode"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::BinaryOperatorKind",
                            "O"
                        ]
                    ],
                    "parent": "clang::BinaryOperator",
                    "signature": "void (clang::BinaryOperator::*)(clang::BinaryOperatorKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (Opcode)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOpcode"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::Expr * (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::BinaryOperator",
                    "signature": "void (clang::BinaryOperator::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::Expr * (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::BinaryOperator",
                    "signature": "void (clang::BinaryOperator::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "llvm::StringRef (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getOpcodeStr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPtrMemOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isMultiplicativeOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isAdditiveOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isShiftOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isBitwiseOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isRelationalOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isEqualityOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isComparisonOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isLogicalOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isAssignmentOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isCompoundAssignmentOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isShiftAssignOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BinaryOperator::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "FPC"
                        ]
                    ],
                    "parent": "clang::BinaryOperator",
                    "signature": "void (clang::BinaryOperator::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFPContractable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryOperator",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFPContractable"
                }
            ],
            "deleter": "stmt_deleter<clang::BinaryOperator>::type",
            "typename": "clang::BinaryOperator",
            "supers": [
                "clang::Expr"
            ],
            "name": "BinaryOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundAssignOperator",
                    "signature": "clang::QualType (clang::CompoundAssignOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getComputationLHSType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::CompoundAssignOperator",
                    "signature": "void (clang::CompoundAssignOperator::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setComputationLHSType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CompoundAssignOperator",
                    "signature": "clang::QualType (clang::CompoundAssignOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getComputationResultType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::CompoundAssignOperator",
                    "signature": "void (clang::CompoundAssignOperator::*)(clang::QualType)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setComputationResultType"
                }
            ],
            "deleter": "stmt_deleter<clang::CompoundAssignOperator>::type",
            "typename": "clang::CompoundAssignOperator",
            "supers": [
                "clang::BinaryOperator"
            ],
            "name": "CompoundAssignOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AbstractConditionalOperator",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AbstractConditionalOperator",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrueExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AbstractConditionalOperator",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFalseExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AbstractConditionalOperator",
                    "signature": "clang::SourceLocation (clang::AbstractConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQuestionLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AbstractConditionalOperator",
                    "signature": "clang::SourceLocation (clang::AbstractConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                }
            ],
            "deleter": "stmt_deleter<clang::AbstractConditionalOperator>::type",
            "typename": "clang::AbstractConditionalOperator",
            "supers": [
                "clang::Expr"
            ],
            "name": "AbstractConditionalOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrueExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFalseExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::SourceLocation (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "clang::SourceLocation (clang::ConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ConditionalOperator",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ConditionalOperator::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ConditionalOperator>::type",
            "typename": "clang::ConditionalOperator",
            "supers": [
                "clang::AbstractConditionalOperator"
            ],
            "name": "ConditionalOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCommon"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::OpaqueValueExpr * (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::OpaqueValueExpr *",
                    "typename": "clang::OpaqueValueExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOpaqueValue"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrueExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFalseExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::SourceLocation (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "clang::SourceLocation (clang::BinaryConditionalOperator::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BinaryConditionalOperator",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BinaryConditionalOperator::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::BinaryConditionalOperator>::type",
            "typename": "clang::BinaryConditionalOperator",
            "supers": [
                "clang::AbstractConditionalOperator"
            ],
            "name": "BinaryConditionalOperator"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAmpAmpLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAmpAmpLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLabelLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLabelLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "clang::LabelDecl * (clang::AddrLabelExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::LabelDecl *",
                    "typename": "clang::LabelDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "L"
                        ]
                    ],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::LabelDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::LabelDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLabel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AddrLabelExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AddrLabelExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::AddrLabelExpr>::type",
            "typename": "clang::AddrLabelExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "AddrLabelExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "clang::CompoundStmt * (clang::StmtExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "const clang::CompoundStmt * (clang::StmtExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CompoundStmt *",
                    "typename": "const clang::CompoundStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CompoundStmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::StmtExpr",
                    "signature": "void (clang::StmtExpr::*)(clang::CompoundStmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CompoundStmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::StmtExpr",
                    "signature": "void (clang::StmtExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::StmtExpr",
                    "signature": "void (clang::StmtExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::StmtExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::StmtExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::StmtExpr>::type",
            "typename": "clang::StmtExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "StmtExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "void (clang::ShuffleVectorExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "void (clang::ShuffleVectorExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "unsigned int (clang::ShuffleVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumSubExprs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "clang::Expr * (clang::ShuffleVectorExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "const clang::Expr * (clang::ShuffleVectorExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "llvm::ArrayRef<clang::Expr *>",
                            "Exprs"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "void (clang::ShuffleVectorExpr::*)(const clang::ASTContext &, llvm::ArrayRef<clang::Expr *>)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, ArrayRef<clang::Expr *>)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "unsigned int",
                            "N"
                        ]
                    ],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "llvm::APSInt (clang::ShuffleVectorExpr::*)(const clang::ASTContext &, unsigned int) const",
                    "mode": "short",
                    "result_type": "llvm::APSInt",
                    "typename": "llvm::APSInt (const clang::ASTContext &, unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getShuffleMaskIdx"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ShuffleVectorExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ShuffleVectorExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ShuffleVectorExpr>::type",
            "typename": "clang::ShuffleVectorExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ShuffleVectorExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::Expr * (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSrcExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::TypeSourceInfo * (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "ti"
                        ]
                    ],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "void (clang::ConvertVectorExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ConvertVectorExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ConvertVectorExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ConvertVectorExpr>::type",
            "typename": "clang::ConvertVectorExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ConvertVectorExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "bool (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConditionTrue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "isTrue"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsConditionTrue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "bool (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConditionDependent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getChosenSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ChooseExpr",
                    "signature": "void (clang::ChooseExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ChooseExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ChooseExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ChooseExpr>::type",
            "typename": "clang::ChooseExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ChooseExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GNUNullExpr",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTokenLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::GNUNullExpr",
                    "signature": "void (clang::GNUNullExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTokenLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GNUNullExpr",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GNUNullExpr",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::GNUNullExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GNUNullExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::GNUNullExpr>::type",
            "typename": "clang::GNUNullExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "GNUNullExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "const clang::Expr * (clang::VAArgExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::Expr * (clang::VAArgExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::VAArgExpr",
                    "signature": "void (clang::VAArgExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "bool (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMicrosoftABI"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "IsMS"
                        ]
                    ],
                    "parent": "clang::VAArgExpr",
                    "signature": "void (clang::VAArgExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsMicrosoftABI"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::TypeSourceInfo * (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWrittenTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TI"
                        ]
                    ],
                    "parent": "clang::VAArgExpr",
                    "signature": "void (clang::VAArgExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setWrittenTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::VAArgExpr",
                    "signature": "void (clang::VAArgExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::VAArgExpr",
                    "signature": "void (clang::VAArgExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VAArgExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::VAArgExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::VAArgExpr>::type",
            "typename": "clang::VAArgExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "VAArgExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "unsigned int (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumInits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::InitListExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "typename": "ArrayRef<clang::Expr *> ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "inits"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "const clang::Expr * (clang::InitListExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::Expr * (clang::InitListExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ],
                        [
                            "clang::Expr *",
                            "expr"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "NumInits"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "reserveInits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "unsigned int",
                            "NumInits"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "resizeInits"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "Init"
                        ],
                        [
                            "clang::Expr *",
                            "expr"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::Expr * (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::ASTContext &, unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "updateInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::Expr * (clang::InitListExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArrayFiller"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "const clang::Expr * (clang::InitListExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArrayFiller"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "filler"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setArrayFiller"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasArrayFiller"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::FieldDecl * (clang::InitListExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializedFieldInUnion"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "const clang::FieldDecl * (clang::InitListExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FieldDecl *",
                    "typename": "const clang::FieldDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializedFieldInUnion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(clang::FieldDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FieldDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInitializedFieldInUnion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "bool (clang::InitListExpr::*)()",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStringLiteralInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSemanticForm"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::InitListExpr * (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::InitListExpr *",
                    "typename": "clang::InitListExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSemanticForm"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::InitListExpr * (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::InitListExpr *",
                    "typename": "clang::InitListExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSyntacticForm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::InitListExpr *",
                            "Init"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(clang::InitListExpr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::InitListExpr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSyntacticForm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hadArrayRangeDesignator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ARD"
                        ]
                    ],
                    "parent": "clang::InitListExpr",
                    "signature": "void (clang::InitListExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "sawArrayRangeDesignator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::InitListExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::InitListExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::InitListExpr>::type",
            "typename": "clang::InitListExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "InitListExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "unsigned int (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "llvm::MutableArrayRef<clang::DesignatedInitExpr::Designator> (clang::DesignatedInitExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::MutableArrayRef<clang::DesignatedInitExpr::Designator>",
                    "typename": "llvm::MutableArrayRef<Designator> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "designators"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "llvm::ArrayRef<clang::DesignatedInitExpr::Designator> (clang::DesignatedInitExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::ArrayRef<clang::DesignatedInitExpr::Designator>",
                    "typename": "llvm::ArrayRef<Designator> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "designators"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::DesignatedInitExpr::Designator * (clang::DesignatedInitExpr::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "clang::DesignatedInitExpr::Designator *",
                    "typename": "clang::DesignatedInitExpr::Designator *(unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDesignator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "Desigs"
                        ],
                        [
                            "unsigned int",
                            "NumDesigs"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(const clang::ASTContext &, const clang::DesignatedInitExpr::Designator *, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, const clang::DesignatedInitExpr::Designator *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDesignators"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArrayIndex"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArrayRangeStart"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArrayRangeEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEqualOrColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEqualOrColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "bool (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "usesGNUSyntax"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "GNU"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setGNUSyntax"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "init"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "unsigned int (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumSubExprs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "First"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "Last"
                        ]
                    ],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "void (clang::DesignatedInitExpr::*)(const clang::ASTContext &, unsigned int, const clang::DesignatedInitExpr::Designator *, const clang::DesignatedInitExpr::Designator *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, unsigned int, const clang::DesignatedInitExpr::Designator *, const clang::DesignatedInitExpr::Designator *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ExpandDesignator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::SourceRange (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDesignatorsSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DesignatedInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DesignatedInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DesignatedInitExpr>::type",
            "typename": "clang::DesignatedInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "DesignatedInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NoInitExpr",
                    "signature": "clang::SourceLocation (clang::NoInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NoInitExpr",
                    "signature": "clang::SourceLocation (clang::NoInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NoInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::NoInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::NoInitExpr>::type",
            "typename": "clang::NoInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "NoInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "clang::SourceLocation (clang::DesignatedInitUpdateExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "clang::SourceLocation (clang::DesignatedInitUpdateExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "clang::Expr * (clang::DesignatedInitUpdateExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Base"
                        ]
                    ],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "void (clang::DesignatedInitUpdateExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "clang::InitListExpr * (clang::DesignatedInitUpdateExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::InitListExpr *",
                    "typename": "clang::InitListExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUpdater"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "Updater"
                        ]
                    ],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "void (clang::DesignatedInitUpdateExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUpdater"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DesignatedInitUpdateExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DesignatedInitUpdateExpr>::type",
            "typename": "clang::DesignatedInitUpdateExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "DesignatedInitUpdateExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImplicitValueInitExpr",
                    "signature": "clang::SourceLocation (clang::ImplicitValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ImplicitValueInitExpr",
                    "signature": "clang::SourceLocation (clang::ImplicitValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ImplicitValueInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ImplicitValueInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ImplicitValueInitExpr>::type",
            "typename": "clang::ImplicitValueInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ImplicitValueInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "unsigned int (clang::ParenListExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExprs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "parent": "clang::ParenListExpr",
                    "signature": "const clang::Expr * (clang::ParenListExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "parent": "clang::ParenListExpr",
                    "signature": "clang::Expr * (clang::ParenListExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::ParenListExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "typename": "ArrayRef<clang::Expr *> ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "exprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ParenListExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ParenListExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ParenListExpr>::type",
            "typename": "clang::ParenListExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ParenListExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "unsigned int (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumAssocs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGenericLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssocExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssocExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "const clang::TypeSourceInfo * (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::TypeSourceInfo *",
                    "typename": "const clang::TypeSourceInfo *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssocTypeSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::TypeSourceInfo * (clang::GenericSelectionExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssocTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::QualType (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAssocType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getControllingExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getControllingExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "bool (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isResultDependent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "unsigned int (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getResultIndex"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getResultExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getResultExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::GenericSelectionExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GenericSelectionExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::GenericSelectionExpr>::type",
            "typename": "clang::GenericSelectionExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "GenericSelectionExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "const clang::Expr * (clang::ExtVectorElementExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "clang::Expr * (clang::ExtVectorElementExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "clang::IdentifierInfo & (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo &",
                    "typename": "clang::IdentifierInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAccessor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::IdentifierInfo *",
                            "II"
                        ]
                    ],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::IdentifierInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::IdentifierInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAccessor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAccessorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAccessorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "unsigned int (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumElements"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "bool (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "containsDuplicateElements"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<unsigned int> &",
                            "Elts"
                        ]
                    ],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "void (clang::ExtVectorElementExpr::*)(llvm::SmallVectorImpl<unsigned int> &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<uint32_t> &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEncodedElementAccess"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "bool (clang::ExtVectorElementExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ExtVectorElementExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExtVectorElementExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ExtVectorElementExpr>::type",
            "typename": "clang::ExtVectorElementExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ExtVectorElementExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "const clang::BlockDecl * (clang::BlockExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::BlockDecl *",
                    "typename": "const clang::BlockDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBlockDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "clang::BlockDecl * (clang::BlockExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::BlockDecl *",
                    "typename": "clang::BlockDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBlockDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::BlockDecl *",
                            "BD"
                        ]
                    ],
                    "parent": "clang::BlockExpr",
                    "signature": "void (clang::BlockExpr::*)(clang::BlockDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::BlockDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBlockDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaretLocation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "const clang::Stmt * (clang::BlockExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "clang::Stmt * (clang::BlockExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "const clang::FunctionProtoType * (clang::BlockExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::FunctionProtoType *",
                    "typename": "const clang::FunctionProtoType *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFunctionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::BlockExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BlockExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::BlockExpr>::type",
            "typename": "clang::BlockExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "BlockExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "clang::Expr * (clang::AsTypeExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSrcExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AsTypeExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AsTypeExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::AsTypeExpr>::type",
            "typename": "clang::AsTypeExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "AsTypeExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSyntacticForm"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSyntacticForm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "unsigned int (clang::PseudoObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getResultExprIndex"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getResultExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getResultExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "unsigned int (clang::PseudoObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumSemanticExprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::PseudoObjectExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "typename": "llvm::iterator_range<semantics_iterator> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "semantics"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "llvm::iterator_range<const clang::Expr *const *> (clang::PseudoObjectExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<const clang::Expr *const *>",
                    "typename": "llvm::iterator_range<const_semantics_iterator> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "semantics"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSemanticExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSemanticExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PseudoObjectExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PseudoObjectExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::PseudoObjectExpr>::type",
            "typename": "clang::PseudoObjectExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "PseudoObjectExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPtr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOrder"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVal1"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOrderFail"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVal2"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getWeak"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::AtomicExpr::AtomicOp (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::AtomicExpr::AtomicOp",
                    "typename": "clang::AtomicExpr::AtomicOp () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOp"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "unsigned int (clang::AtomicExpr::*)() const",
                    "mode": "long",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNumSubExprs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "bool (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "bool (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCmpXChg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::AtomicExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AtomicExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::AtomicExpr>::type",
            "typename": "clang::AtomicExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "AtomicExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TypoExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::TypoExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypoExpr",
                    "signature": "clang::SourceLocation (clang::TypoExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypoExpr",
                    "signature": "clang::SourceLocation (clang::TypoExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::TypoExpr>::type",
            "typename": "clang::TypoExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "TypoExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AccessSpecDecl",
                    "signature": "clang::SourceLocation (clang::AccessSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAccessSpecifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "ASLoc"
                        ]
                    ],
                    "parent": "clang::AccessSpecDecl",
                    "signature": "void (clang::AccessSpecDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setAccessSpecifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AccessSpecDecl",
                    "signature": "clang::SourceLocation (clang::AccessSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "CLoc"
                        ]
                    ],
                    "parent": "clang::AccessSpecDecl",
                    "signature": "void (clang::AccessSpecDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::AccessSpecDecl",
                    "signature": "clang::SourceRange (clang::AccessSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::AccessSpecDecl>::type",
            "typename": "clang::AccessSpecDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "AccessSpecDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDynamicClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setIsParsingBaseSpecifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParsingBaseSpecifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::CXXBaseSpecifier *>",
                    "typename": "base_class_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "bases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<const clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<const clang::CXXBaseSpecifier *>",
                    "typename": "base_class_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "bases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumVBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::CXXBaseSpecifier *>",
                    "typename": "base_class_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "vbases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<const clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<const clang::CXXBaseSpecifier *>",
                    "typename": "base_class_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "vbases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasAnyDependentBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXMethodDecl> > (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXMethodDecl> >",
                    "typename": "method_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "methods"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXConstructorDecl> > (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXConstructorDecl> >",
                    "typename": "ctor_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "ctors"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::CXXRecordDecl::friend_iterator> (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::CXXRecordDecl::friend_iterator>",
                    "typename": "friend_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "friends"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FriendDecl *",
                            "FD"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::FriendDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FriendDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "pushFriendDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasFriends"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSimpleMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSimpleMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSimpleDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserProvidedDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsOverloadResolutionForCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "implicitCopyConstructorHasConstParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasCopyConstructorWithConstParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredMoveOperation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicitMoveConstructorIsDeleted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsOverloadResolutionForMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredCopyAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitCopyAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsOverloadResolutionForCopyAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "implicitCopyAssignmentHasConstParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasCopyAssignmentWithConstParam"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicitMoveAssignmentIsDeleted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsOverloadResolutionForMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUserDeclaredDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsImplicitDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "needsOverloadResolutionForDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLambda"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGenericLambda"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXMethodDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaCallOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXMethodDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaStaticInvoker"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::TemplateParameterList * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGenericLambdaTemplateParameterList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::LambdaCaptureDefault (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LambdaCaptureDefault",
                    "typename": "clang::LambdaCaptureDefault () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaCaptureDefault"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "typename": "capture_const_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "Old"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(const clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeConversion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "llvm::iterator_range<clang::UnresolvedSetIterator> (clang::CXXRecordDecl::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::UnresolvedSetIterator>",
                    "typename": "llvm::iterator_range<conversion_iterator> ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getVisibleConversionFunctions"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAggregate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInClassInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUninitializedReferenceMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPOD"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCLike"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isEmpty"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPolymorphic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAbstract"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStandardLayout"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasMutableFields"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasVariantMembers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasConstexprNonCopyMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "defaultedDefaultConstructorIsConstexpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasConstexprDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialCopyAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialCopyAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialMoveAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTrivialDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonTrivialDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "allowConstDefaultInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasIrrelevantDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasNonLiteralTypeFieldsOrBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInheritedConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInheritedAssignment"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTriviallyCopyable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTrivial"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberClass"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::MemberSpecializationInfo * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MemberSpecializationInfo *",
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberSpecializationInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXRecordDecl *, clang::TemplateSpecializationKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXRecordDecl *, clang::TemplateSpecializationKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiationOfMemberClass"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDescribedClassTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::ClassTemplateDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplateDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDescribedClassTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::TemplateSpecializationKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateSpecializationKind"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::CXXDestructorDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXDestructorDecl *",
                    "typename": "clang::CXXDestructorDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAnyDestructorNoReturn"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "const clang::FunctionDecl * (clang::CXXRecordDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isLocalClass"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::FunctionDecl * (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isLocalClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "CurContext"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::DeclContext *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCurrentInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isDerivedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ],
                        [
                            "clang::CXXBasePaths &",
                            "Paths"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *, clang::CXXBasePaths &) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (const clang::CXXRecordDecl *, clang::CXXBasePaths &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isDerivedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVirtuallyDerivedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isProvablyNotDerivedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::function_ref<bool (const clang::CXXRecordDecl *)>",
                            "BaseMatches"
                        ],
                        [
                            "bool",
                            "AllowShortCircuit"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(llvm::function_ref<bool (const clang::CXXRecordDecl *)>, bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (ForallBasesCallback, bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "forallBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::function_ref<bool (const clang::CXXBaseSpecifier *, clang::CXXBasePath &)>",
                            "BaseMatches"
                        ],
                        [
                            "clang::CXXBasePaths &",
                            "Paths"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)(llvm::function_ref<bool (const clang::CXXBaseSpecifier *, clang::CXXBasePath &)>, clang::CXXBasePaths &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (BaseMatchesCallback, clang::CXXBasePaths &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "lookupInBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CXXFinalOverriderMap &",
                            "FinaOverriders"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXFinalOverriderMap &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXFinalOverriderMap &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFinalOverriders"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CXXIndirectPrimaryBaseSet &",
                            "Bases"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXIndirectPrimaryBaseSet &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXIndirectPrimaryBaseSet &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIndirectPrimaryBases"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "viewInheritance"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXMethodDecl *",
                            "MD"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXMethodDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "finishedDefaultedOrDeletedMember"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "completeDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CXXFinalOverriderMap *",
                            "FinalOverriders"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXFinalOverriderMap *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::CXXFinalOverriderMap *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "completeDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "mayBeAbstract"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaManglingNumber"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::Decl * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Decl *",
                    "typename": "clang::Decl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaContextDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "ManglingNumber"
                        ],
                        [
                            "clang::Decl *",
                            "ContextDecl"
                        ]
                    ],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "void (clang::CXXRecordDecl::*)(unsigned int, clang::Decl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Decl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLambdaMangling"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::MSInheritanceAttr::Spelling (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MSInheritanceAttr::Spelling",
                    "typename": "MSInheritanceAttr::Spelling () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMSInheritanceModel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::MSInheritanceAttr::Spelling (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MSInheritanceAttr::Spelling",
                    "typename": "MSInheritanceAttr::Spelling () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "calculateInheritanceModel"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "nullFieldOffsetIsZero"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::MSVtorDispAttr::Mode (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::MSVtorDispAttr::Mode",
                    "typename": "MSVtorDispAttr::Mode () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMSVtorDispMode"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDependentLambda"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXRecordDecl",
                    "signature": "clang::TypeSourceInfo * (clang::CXXRecordDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaTypeInfo"
                }
            ],
            "deleter": "decl_deleter<clang::CXXRecordDecl>::type",
            "typename": "clang::CXXRecordDecl",
            "supers": [
                "clang::RecordDecl"
            ],
            "name": "CXXRecordDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStatic"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInstance"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConst"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVolatile"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isVirtual"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUsualDeallocationFunction"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isCopyAssignmentOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMoveAssignmentOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXMethodDecl *",
                    "typename": "const clang::CXXMethodDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXMethodDecl *",
                    "typename": "const clang::CXXMethodDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isUserProvided"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "MD"
                        ]
                    ],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "void (clang::CXXMethodDecl::*)(const clang::CXXMethodDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::CXXMethodDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addOverriddenMethod"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "unsigned int (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "size_overridden_methods"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "llvm::iterator_range<const clang::CXXMethodDecl *const *> (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::CXXMethodDecl *const *>",
                    "typename": "overridden_method_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "overridden_methods"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXMethodDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXRecordDecl *",
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::CXXRecordDecl * (clang::CXXMethodDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParent"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::QualType (clang::CXXMethodDecl::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getThisType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "unsigned int (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeQualifiers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::RefQualifierKind (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::RefQualifierKind",
                    "typename": "clang::RefQualifierKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRefQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInlineBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLambdaStaticInvoker"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "bool",
                            "MayBeBase"
                        ]
                    ],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::CXXRecordDecl *, bool)",
                    "mode": "long",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *(const clang::CXXRecordDecl *, bool)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCorrespondingMethodInClass"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "bool",
                            "MayBeBase"
                        ]
                    ],
                    "parent": "clang::CXXMethodDecl",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::CXXRecordDecl *, bool) const",
                    "mode": "long",
                    "result_type": "const clang::CXXMethodDecl *",
                    "typename": "const clang::CXXMethodDecl *(const clang::CXXRecordDecl *, bool) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCorrespondingMethodInClass"
                }
            ],
            "deleter": "decl_deleter<clang::CXXMethodDecl>::type",
            "typename": "clang::CXXMethodDecl",
            "supers": [
                "clang::FunctionDecl"
            ],
            "name": "CXXMethodDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "llvm::iterator_range<clang::CXXCtorInitializer **> (clang::CXXConstructorDecl::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::CXXCtorInitializer **>",
                    "typename": "init_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "llvm::iterator_range<clang::CXXCtorInitializer *const *> (clang::CXXConstructorDecl::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::CXXCtorInitializer *const *>",
                    "typename": "init_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "unsigned int (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumCtorInitializers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "numCtorInitializers"
                        ]
                    ],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "void (clang::CXXConstructorDecl::*)(unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setNumCtorInitializers"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDelegatingConstructor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXConstructorDecl *",
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTargetConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isDefaultConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (unsigned int &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isCopyConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (unsigned int &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool (unsigned int &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isCopyOrMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "long",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "isCopyOrMoveConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "AllowExplicit"
                        ]
                    ],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)(bool) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (bool) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConvertingConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isSpecializationCopyingObject"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInheritingConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "clang::InheritedConstructor (clang::CXXConstructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::InheritedConstructor",
                    "typename": "clang::InheritedConstructor () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInheritedConstructor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXConstructorDecl *",
                    "typename": "clang::CXXConstructorDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructorDecl",
                    "signature": "const clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXConstructorDecl *",
                    "typename": "const clang::CXXConstructorDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::CXXConstructorDecl>::type",
            "typename": "clang::CXXConstructorDecl",
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXConstructorDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "OD"
                        ]
                    ],
                    "parent": "clang::CXXDestructorDecl",
                    "signature": "void (clang::CXXDestructorDecl::*)(clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorDelete"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDestructorDecl",
                    "signature": "const clang::FunctionDecl * (clang::CXXDestructorDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::FunctionDecl *",
                    "typename": "const clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorDelete"
                }
            ],
            "deleter": "decl_deleter<clang::CXXDestructorDecl>::type",
            "typename": "clang::CXXDestructorDecl",
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXDestructorDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConversionDecl",
                    "signature": "bool (clang::CXXConversionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitSpecified"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConversionDecl",
                    "signature": "bool (clang::CXXConversionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConversionDecl",
                    "signature": "clang::QualType (clang::CXXConversionDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConversionType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConversionDecl",
                    "signature": "bool (clang::CXXConversionDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLambdaToBlockPointerConversion"
                }
            ],
            "deleter": "decl_deleter<clang::CXXConversionDecl>::type",
            "typename": "clang::CXXConversionDecl",
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXConversionDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "clang::LinkageSpecDecl::LanguageIDs (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::LinkageSpecDecl::LanguageIDs",
                    "typename": "clang::LinkageSpecDecl::LanguageIDs () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLanguage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::LinkageSpecDecl::LanguageIDs",
                            "L"
                        ]
                    ],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::LinkageSpecDecl::LanguageIDs)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::LinkageSpecDecl::LanguageIDs)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLanguage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "bool (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasBraces"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRBraceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LinkageSpecDecl",
                    "signature": "clang::SourceRange (clang::LinkageSpecDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::LinkageSpecDecl>::type",
            "typename": "clang::LinkageSpecDecl",
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "LinkageSpecDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::NamedDecl * (clang::UsingDirectiveDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNominatedNamespaceAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "const clang::NamedDecl * (clang::UsingDirectiveDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamedDecl *",
                    "typename": "const clang::NamedDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNominatedNamespaceAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::NamespaceDecl * (clang::UsingDirectiveDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNominatedNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "const clang::NamespaceDecl * (clang::UsingDirectiveDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamespaceDecl *",
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNominatedNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::DeclContext * (clang::UsingDirectiveDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclContext *",
                    "typename": "clang::DeclContext *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCommonAncestor"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "const clang::DeclContext * (clang::UsingDirectiveDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclContext *",
                    "typename": "const clang::DeclContext *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCommonAncestor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamespaceKeyLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIdentLocation"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDirectiveDecl",
                    "signature": "clang::SourceRange (clang::UsingDirectiveDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::UsingDirectiveDecl>::type",
            "typename": "clang::UsingDirectiveDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingDirectiveDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::NamespaceAliasDecl * (clang::NamespaceAliasDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamespaceAliasDecl *",
                    "typename": "clang::NamespaceAliasDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "const clang::NamespaceAliasDecl * (clang::NamespaceAliasDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamespaceAliasDecl *",
                    "typename": "const clang::NamespaceAliasDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceAliasDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::NamespaceDecl *",
                    "typename": "clang::NamespaceDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNamespace"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceAliasDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::NamespaceDecl *",
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAliasLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamespaceLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTargetNameLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::NamedDecl * (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAliasedNamespace"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NamespaceAliasDecl",
                    "signature": "clang::SourceRange (clang::NamespaceAliasDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::NamespaceAliasDecl>::type",
            "typename": "clang::NamespaceAliasDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "NamespaceAliasDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "clang::UsingShadowDecl * (clang::UsingShadowDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::UsingShadowDecl *",
                    "typename": "clang::UsingShadowDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "const clang::UsingShadowDecl * (clang::UsingShadowDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::UsingShadowDecl *",
                    "typename": "const clang::UsingShadowDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "clang::NamedDecl * (clang::UsingShadowDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTargetDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "void (clang::UsingShadowDecl::*)(clang::NamedDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamedDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTargetDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "clang::UsingDecl * (clang::UsingShadowDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::UsingDecl *",
                    "typename": "clang::UsingDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsingDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingShadowDecl",
                    "signature": "clang::UsingShadowDecl * (clang::UsingShadowDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::UsingShadowDecl *",
                    "typename": "clang::UsingShadowDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNextUsingShadowDecl"
                }
            ],
            "deleter": "decl_deleter<clang::UsingShadowDecl>::type",
            "typename": "clang::UsingShadowDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingShadowDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::SourceLocation (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::UsingDecl",
                    "signature": "void (clang::UsingDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::DeclarationNameInfo (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "bool (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAccessDeclaration"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "bool (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTypename"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "TN"
                        ]
                    ],
                    "parent": "clang::UsingDecl",
                    "signature": "void (clang::UsingDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypename"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "llvm::iterator_range<clang::UsingDecl::shadow_iterator> (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::UsingDecl::shadow_iterator>",
                    "typename": "shadow_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "shadows"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "unsigned int (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "shadow_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "S"
                        ]
                    ],
                    "parent": "clang::UsingDecl",
                    "signature": "void (clang::UsingDecl::*)(clang::UsingShadowDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::UsingShadowDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "addShadowDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "S"
                        ]
                    ],
                    "parent": "clang::UsingDecl",
                    "signature": "void (clang::UsingDecl::*)(clang::UsingShadowDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::UsingShadowDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeShadowDecl"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::SourceRange (clang::UsingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "clang::UsingDecl * (clang::UsingDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::UsingDecl *",
                    "typename": "clang::UsingDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UsingDecl",
                    "signature": "const clang::UsingDecl * (clang::UsingDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::UsingDecl *",
                    "typename": "const clang::UsingDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::UsingDecl>::type",
            "typename": "clang::UsingDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "void (clang::UnresolvedUsingValueDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "bool (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAccessDeclaration"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::DeclarationNameInfo (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::SourceRange (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "clang::UnresolvedUsingValueDecl * (clang::UnresolvedUsingValueDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::UnresolvedUsingValueDecl *",
                    "typename": "clang::UnresolvedUsingValueDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "signature": "const clang::UnresolvedUsingValueDecl * (clang::UnresolvedUsingValueDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::UnresolvedUsingValueDecl *",
                    "typename": "const clang::UnresolvedUsingValueDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::UnresolvedUsingValueDecl>::type",
            "typename": "clang::UnresolvedUsingValueDecl",
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "UnresolvedUsingValueDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsingLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypenameLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "clang::NestedNameSpecifier * (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "clang::UnresolvedUsingTypenameDecl * (clang::UnresolvedUsingTypenameDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::UnresolvedUsingTypenameDecl *",
                    "typename": "clang::UnresolvedUsingTypenameDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "signature": "const clang::UnresolvedUsingTypenameDecl * (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::UnresolvedUsingTypenameDecl *",
                    "typename": "const clang::UnresolvedUsingTypenameDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                }
            ],
            "deleter": "decl_deleter<clang::UnresolvedUsingTypenameDecl>::type",
            "typename": "clang::UnresolvedUsingTypenameDecl",
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "UnresolvedUsingTypenameDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "clang::Expr * (clang::StaticAssertDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssertExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "const clang::Expr * (clang::StaticAssertDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getAssertExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "clang::StringLiteral * (clang::StaticAssertDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::StringLiteral *",
                    "typename": "clang::StringLiteral *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMessage"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "const clang::StringLiteral * (clang::StaticAssertDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::StringLiteral *",
                    "typename": "const clang::StringLiteral *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMessage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "bool (clang::StaticAssertDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFailed"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "clang::SourceLocation (clang::StaticAssertDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::StaticAssertDecl",
                    "signature": "clang::SourceRange (clang::StaticAssertDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::StaticAssertDecl>::type",
            "typename": "clang::StaticAssertDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "StaticAssertDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BindingDecl",
                    "signature": "clang::Expr * (clang::BindingDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBinding"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "DeclaredType"
                        ],
                        [
                            "clang::Expr *",
                            "Binding"
                        ]
                    ],
                    "parent": "clang::BindingDecl",
                    "signature": "void (clang::BindingDecl::*)(clang::QualType, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::QualType, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBinding"
                }
            ],
            "deleter": "decl_deleter<clang::BindingDecl>::type",
            "typename": "clang::BindingDecl",
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "BindingDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DecompositionDecl",
                    "signature": "llvm::ArrayRef<clang::BindingDecl *> (clang::DecompositionDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::BindingDecl *>",
                    "typename": "ArrayRef<clang::BindingDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "bindings"
                }
            ],
            "deleter": "decl_deleter<clang::DecompositionDecl>::type",
            "typename": "clang::DecompositionDecl",
            "supers": [
                "clang::VarDecl"
            ],
            "name": "DecompositionDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyDecl",
                    "signature": "bool (clang::MSPropertyDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasGetter"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSPropertyDecl",
                    "signature": "clang::IdentifierInfo * (clang::MSPropertyDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getGetterId"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyDecl",
                    "signature": "bool (clang::MSPropertyDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasSetter"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSPropertyDecl",
                    "signature": "clang::IdentifierInfo * (clang::MSPropertyDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSetterId"
                }
            ],
            "deleter": "decl_deleter<clang::MSPropertyDecl>::type",
            "typename": "clang::MSPropertyDecl",
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "MSPropertyDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TemplateDecl",
                    "signature": "clang::TemplateParameterList * (clang::TemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameters"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateDecl",
                    "signature": "clang::NamedDecl * (clang::TemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateDecl",
                    "signature": "clang::SourceRange (clang::TemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateDecl",
                    "signature": "bool (clang::TemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isConcept"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateDecl",
                    "signature": "void (clang::TemplateDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConcept"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "templatedDecl"
                        ],
                        [
                            "clang::TemplateParameterList *",
                            "templateParams"
                        ]
                    ],
                    "parent": "clang::TemplateDecl",
                    "signature": "void (clang::TemplateDecl::*)(clang::NamedDecl *, clang::TemplateParameterList *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::NamedDecl *, clang::TemplateParameterList *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "init"
                }
            ],
            "deleter": "decl_deleter<clang::TemplateDecl>::type",
            "typename": "clang::TemplateDecl",
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "TemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::RedeclarableTemplateDecl *",
                    "typename": "clang::RedeclarableTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "const clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::RedeclarableTemplateDecl *",
                    "typename": "const clang::RedeclarableTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "bool (clang::RedeclarableTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "void (clang::RedeclarableTemplateDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMemberSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::RedeclarableTemplateDecl *",
                    "typename": "clang::RedeclarableTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::RedeclarableTemplateDecl *",
                            "TD"
                        ]
                    ],
                    "parent": "clang::RedeclarableTemplateDecl",
                    "signature": "void (clang::RedeclarableTemplateDecl::*)(clang::RedeclarableTemplateDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::RedeclarableTemplateDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromMemberTemplate"
                }
            ],
            "deleter": "decl_deleter<clang::RedeclarableTemplateDecl>::type",
            "typename": "clang::RedeclarableTemplateDecl",
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "RedeclarableTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "void (clang::FunctionTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "LoadLazySpecializations"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "clang::FunctionDecl * (clang::FunctionTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "bool (clang::FunctionTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionTemplateDecl *",
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::FunctionTemplateSpecializationInfo, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::FunctionTemplateSpecializationInfo>, clang::FunctionDecl> > (clang::FunctionTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::FunctionTemplateSpecializationInfo, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::FunctionTemplateSpecializationInfo>, clang::FunctionDecl> >",
                    "typename": "spec_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "specializations"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionTemplateDecl",
                    "signature": "llvm::ArrayRef<clang::TemplateArgument> (clang::FunctionTemplateDecl::*)()",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgument>",
                    "typename": "ArrayRef<clang::TemplateArgument> ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInjectedTemplateArgs"
                }
            ],
            "deleter": "decl_deleter<clang::FunctionTemplateDecl>::type",
            "typename": "clang::FunctionTemplateDecl",
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "FunctionTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "wasDeclaredWithTypename"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "const clang::DefaultArgStorage<clang::TemplateTypeParmDecl, clang::TypeSourceInfo *> & (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DefaultArgStorage<clang::TemplateTypeParmDecl, clang::TypeSourceInfo *> &",
                    "typename": "const DefArgStorage &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "clang::QualType (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgument"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "clang::TypeSourceInfo * (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgumentInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "clang::SourceLocation (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgumentLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "defaultArgumentWasInherited"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "DefArg"
                        ]
                    ],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::TemplateTypeParmDecl *",
                            "Prev"
                        ]
                    ],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(const clang::ASTContext &, clang::TemplateTypeParmDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::TemplateTypeParmDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInheritedDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "void (clang::TemplateTypeParmDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "withTypename"
                        ]
                    ],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDeclaredWithTypename"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "unsigned int (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDepth"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "unsigned int (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIndex"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTypeParmDecl",
                    "signature": "clang::SourceRange (clang::TemplateTypeParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::TemplateTypeParmDecl>::type",
            "typename": "clang::TemplateTypeParmDecl",
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "TemplateTypeParmDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "clang::SourceRange (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "const clang::DefaultArgStorage<clang::NonTypeTemplateParmDecl, clang::Expr *> & (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DefaultArgStorage<clang::NonTypeTemplateParmDecl, clang::Expr *> &",
                    "typename": "const DefArgStorage &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefaultArgument"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "clang::Expr * (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "clang::SourceLocation (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgumentLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "defaultArgumentWasInherited"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "DefArg"
                        ]
                    ],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::NonTypeTemplateParmDecl *",
                            "Parm"
                        ]
                    ],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)(const clang::ASTContext &, clang::NonTypeTemplateParmDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::NonTypeTemplateParmDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInheritedDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPackExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "unsigned int (clang::NonTypeTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExpansionTypes"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "clang::QualType (clang::NonTypeTemplateParmDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "signature": "clang::TypeSourceInfo * (clang::NonTypeTemplateParmDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionTypeSourceInfo"
                }
            ],
            "deleter": "decl_deleter<clang::NonTypeTemplateParmDecl>::type",
            "typename": "clang::NonTypeTemplateParmDecl",
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "NonTypeTemplateParmDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPackExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExpandedParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "unsigned int (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExpansionTemplateParameters"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "clang::TemplateParameterList * (clang::TemplateTemplateParmDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansionTemplateParameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "const clang::DefaultArgStorage<clang::TemplateTemplateParmDecl, clang::TemplateArgumentLoc *> & (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DefaultArgStorage<clang::TemplateTemplateParmDecl, clang::TemplateArgumentLoc *> &",
                    "typename": "const DefArgStorage &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgStorage"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "const clang::TemplateArgumentLoc & (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc &",
                    "typename": "const clang::TemplateArgumentLoc &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "clang::SourceLocation (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefaultArgumentLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "defaultArgumentWasInherited"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const clang::TemplateArgumentLoc &",
                            "DefArg"
                        ]
                    ],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)(const clang::ASTContext &, const clang::TemplateArgumentLoc &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, const clang::TemplateArgumentLoc &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "Prev"
                        ]
                    ],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)(const clang::ASTContext &, clang::TemplateTemplateParmDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, clang::TemplateTemplateParmDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInheritedDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "removeDefaultArgument"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TemplateTemplateParmDecl",
                    "signature": "clang::SourceRange (clang::TemplateTemplateParmDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::TemplateTemplateParmDecl>::type",
            "typename": "clang::TemplateTemplateParmDecl",
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "TemplateTemplateParmDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BuiltinTemplateDecl",
                    "signature": "clang::SourceRange (clang::BuiltinTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::BuiltinTemplateDecl",
                    "signature": "clang::BuiltinTemplateKind (clang::BuiltinTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::BuiltinTemplateKind",
                    "typename": "clang::BuiltinTemplateKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBuiltinTemplateKind"
                }
            ],
            "deleter": "decl_deleter<clang::BuiltinTemplateDecl>::type",
            "typename": "clang::BuiltinTemplateDecl",
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "BuiltinTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getNameForDiagnostic"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::ClassTemplateSpecializationDecl * (clang::ClassTemplateSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::ClassTemplateSpecializationDecl *",
                    "typename": "clang::ClassTemplateSpecializationDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializedTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "const clang::TemplateArgumentList & (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentList &",
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "bool (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "bool (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitInstantiationOrSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::TemplateSpecializationKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointOfInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPointOfInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *> (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *>",
                    "typename": "llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *> (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *>",
                    "typename": "llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializedTemplateOrPartial"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "const clang::TemplateArgumentList & (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentList &",
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::ClassTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplateDecl *",
                            "TemplDecl"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::ClassTemplateDecl *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplateDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "T"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::TypeSourceInfo * (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "clang::SourceRange (clang::ClassTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(llvm::FoldingSetNodeID &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "Profile"
                }
            ],
            "deleter": "decl_deleter<clang::ClassTemplateSpecializationDecl>::type",
            "typename": "clang::ClassTemplateSpecializationDecl",
            "supers": [
                "clang::CXXRecordDecl"
            ],
            "name": "ClassTemplateSpecializationDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "clang::TemplateParameterList * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameters"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgsAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMember"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ]
                    ],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "void (clang::ClassTemplatePartialSpecializationDecl::*)(clang::ClassTemplatePartialSpecializationDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "bool (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "void (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMemberSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "signature": "clang::QualType (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInjectedSpecializationType"
                }
            ],
            "deleter": "decl_deleter<clang::ClassTemplatePartialSpecializationDecl>::type",
            "typename": "clang::ClassTemplatePartialSpecializationDecl",
            "supers": [
                "clang::ClassTemplateSpecializationDecl"
            ],
            "name": "ClassTemplatePartialSpecializationDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "void (clang::ClassTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "LoadLazySpecializations"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::CXXRecordDecl * (clang::ClassTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "bool (clang::ClassTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplateSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "void (clang::ClassTemplateDecl::*)(clang::ClassTemplateSpecializationDecl *, void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplateSpecializationDecl *, void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AddSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::ClassTemplateDecl *",
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::ClassTemplateDecl *",
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::ClassTemplateDecl *",
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::ClassTemplateDecl *",
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "void (clang::ClassTemplateDecl::*)(clang::ClassTemplatePartialSpecializationDecl *, void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *, void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AddPartialSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &",
                            "PS"
                        ]
                    ],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "void (clang::ClassTemplateDecl::*)(llvm::SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPartialSpecializations"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplateDecl::*)(clang::QualType)",
                    "mode": "long",
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *(clang::QualType)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "findPartialSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplateDecl::*)(clang::ClassTemplatePartialSpecializationDecl *)",
                    "mode": "short",
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *(clang::ClassTemplatePartialSpecializationDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "findPartialSpecInstantiatedFromMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "clang::QualType (clang::ClassTemplateDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInjectedClassNameSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassTemplateDecl",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::ClassTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::ClassTemplateSpecializationDecl>, clang::ClassTemplateSpecializationDecl> > (clang::ClassTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::ClassTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::ClassTemplateSpecializationDecl>, clang::ClassTemplateSpecializationDecl> >",
                    "typename": "spec_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "specializations"
                }
            ],
            "deleter": "decl_deleter<clang::ClassTemplateDecl>::type",
            "typename": "clang::ClassTemplateDecl",
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "ClassTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendTemplateDecl",
                    "signature": "clang::TypeSourceInfo * (clang::FriendTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendTemplateDecl",
                    "signature": "clang::NamedDecl * (clang::FriendTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendTemplateDecl",
                    "signature": "clang::SourceLocation (clang::FriendTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::FriendTemplateDecl",
                    "signature": "clang::TemplateParameterList * (clang::FriendTemplateDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameterList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendTemplateDecl",
                    "signature": "unsigned int (clang::FriendTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateParameters"
                }
            ],
            "deleter": "decl_deleter<clang::FriendTemplateDecl>::type",
            "typename": "clang::FriendTemplateDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "FriendTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "clang::TypeAliasDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeAliasDecl *",
                    "typename": "clang::TypeAliasDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "typename": "clang::TypeAliasTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "const clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::TypeAliasTemplateDecl *",
                    "typename": "const clang::TypeAliasTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "typename": "clang::TypeAliasTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "const clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::TypeAliasTemplateDecl *",
                    "typename": "const clang::TypeAliasTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeAliasTemplateDecl",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "typename": "clang::TypeAliasTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                }
            ],
            "deleter": "decl_deleter<clang::TypeAliasTemplateDecl>::type",
            "typename": "clang::TypeAliasTemplateDecl",
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "TypeAliasTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "signature": "clang::CXXMethodDecl * (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "signature": "bool (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "signature": "const clang::TemplateArgumentListInfo & (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentListInfo &",
                    "typename": "const clang::TemplateArgumentListInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "templateArgs"
                }
            ],
            "deleter": "decl_deleter<clang::ClassScopeFunctionSpecializationDecl>::type",
            "typename": "clang::ClassScopeFunctionSpecializationDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "ClassScopeFunctionSpecializationDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getNameForDiagnostic"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::VarTemplateSpecializationDecl * (clang::VarTemplateSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::VarTemplateSpecializationDecl *",
                    "typename": "clang::VarTemplateSpecializationDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializedTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "const clang::TemplateArgumentList & (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentList &",
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "ArgsInfo"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(const clang::TemplateArgumentListInfo &)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::TemplateArgumentListInfo &)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateArgsInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "const clang::TemplateArgumentListInfo & (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentListInfo &",
                    "typename": "const clang::TemplateArgumentListInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgsInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::TemplateSpecializationKind (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateSpecializationKind",
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "bool (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "bool (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isExplicitInstantiationOrSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::TemplateSpecializationKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSpecializationKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPointOfInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setPointOfInstantiation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *> (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *>",
                    "typename": "llvm::PointerUnion<VarTemplateDecl *, VarTemplatePartialSpecializationDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFrom"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *> (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *>",
                    "typename": "llvm::PointerUnion<VarTemplateDecl *, VarTemplatePartialSpecializationDecl *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSpecializedTemplateOrPartial"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "const clang::TemplateArgumentList & (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentList &",
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateInstantiationArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::VarTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplateDecl *",
                            "TemplDecl"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::VarTemplateDecl *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplateDecl *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setInstantiationOf"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "T"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::TypeSourceInfo * (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExternLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(llvm::FoldingSetNodeID &) const",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "Profile"
                }
            ],
            "deleter": "decl_deleter<clang::VarTemplateSpecializationDecl>::type",
            "typename": "clang::VarTemplateSpecializationDecl",
            "supers": [
                "clang::VarDecl"
            ],
            "name": "VarTemplateSpecializationDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "typename": "clang::VarTemplatePartialSpecializationDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "clang::TemplateParameterList * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameters"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgsAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "typename": "clang::VarTemplatePartialSpecializationDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ]
                    ],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "void (clang::VarTemplatePartialSpecializationDecl::*)(clang::VarTemplatePartialSpecializationDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInstantiatedFromMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "bool (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMemberSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "signature": "void (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setMemberSpecialization"
                }
            ],
            "deleter": "decl_deleter<clang::VarTemplatePartialSpecializationDecl>::type",
            "typename": "clang::VarTemplatePartialSpecializationDecl",
            "supers": [
                "clang::VarTemplateSpecializationDecl"
            ],
            "name": "VarTemplatePartialSpecializationDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "void (clang::VarTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "LoadLazySpecializations"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarDecl * (clang::VarTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplatedDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "bool (clang::VarTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThisDeclarationADefinition"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "mode": "short",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDefinition"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplateSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "void (clang::VarTemplateDecl::*)(clang::VarTemplateSpecializationDecl *, void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplateSpecializationDecl *, void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AddSpecialization"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": true,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarTemplateDecl *",
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCanonicalDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarTemplateDecl *",
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPreviousDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "mode": "long",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarTemplateDecl *",
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getMostRecentDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarTemplateDecl *",
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInstantiatedFromMemberTemplate"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "void (clang::VarTemplateDecl::*)(clang::VarTemplatePartialSpecializationDecl *, void *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *, void *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AddPartialSpecialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &",
                            "PS"
                        ]
                    ],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "void (clang::VarTemplateDecl::*)(llvm::SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPartialSpecializations"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplateDecl::*)(clang::VarTemplatePartialSpecializationDecl *)",
                    "mode": "short",
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "typename": "clang::VarTemplatePartialSpecializationDecl *(clang::VarTemplatePartialSpecializationDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "findPartialSpecInstantiatedFromMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::VarTemplateDecl",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::VarTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::VarTemplateSpecializationDecl>, clang::VarTemplateSpecializationDecl> > (clang::VarTemplateDecl::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::VarTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::VarTemplateSpecializationDecl>, clang::VarTemplateSpecializationDecl> >",
                    "typename": "spec_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "specializations"
                }
            ],
            "deleter": "decl_deleter<clang::VarTemplateDecl>::type",
            "typename": "clang::VarTemplateDecl",
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "VarTemplateDecl"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::OverloadedOperatorKind (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::OverloadedOperatorKind",
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "clang::SourceRange (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "FPC"
                        ]
                    ],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "void (clang::CXXOperatorCallExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setFPContractable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXOperatorCallExpr",
                    "signature": "bool (clang::CXXOperatorCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isFPContractable"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXOperatorCallExpr>::type",
            "typename": "clang::CXXOperatorCallExpr",
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CXXOperatorCallExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMemberCallExpr",
                    "signature": "clang::Expr * (clang::CXXMemberCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getImplicitObjectArgument"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMemberCallExpr",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMemberCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMethodDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMemberCallExpr",
                    "signature": "clang::CXXRecordDecl * (clang::CXXMemberCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRecordDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXMemberCallExpr",
                    "signature": "clang::SourceLocation (clang::CXXMemberCallExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXMemberCallExpr>::type",
            "typename": "clang::CXXMemberCallExpr",
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CXXMemberCallExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CUDAKernelCallExpr",
                    "signature": "const clang::CallExpr * (clang::CUDAKernelCallExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CallExpr *",
                    "typename": "const clang::CallExpr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getConfig"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CUDAKernelCallExpr",
                    "signature": "clang::CallExpr * (clang::CUDAKernelCallExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::CallExpr *",
                    "typename": "clang::CallExpr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getConfig"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CallExpr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CUDAKernelCallExpr",
                    "signature": "void (clang::CUDAKernelCallExpr::*)(clang::CallExpr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CallExpr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConfig"
                }
            ],
            "deleter": "stmt_deleter<clang::CUDAKernelCallExpr>::type",
            "typename": "clang::CUDAKernelCallExpr",
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CUDAKernelCallExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "const char * (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "const char *",
                    "typename": "const char *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCastName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNamedCastExpr",
                    "signature": "clang::SourceRange (clang::CXXNamedCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAngleBrackets"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXNamedCastExpr>::type",
            "typename": "clang::CXXNamedCastExpr",
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CXXNamedCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "stmt_deleter<clang::CXXStaticCastExpr>::type",
            "typename": "clang::CXXStaticCastExpr",
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXStaticCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDynamicCastExpr",
                    "signature": "bool (clang::CXXDynamicCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isAlwaysNull"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXDynamicCastExpr>::type",
            "typename": "clang::CXXDynamicCastExpr",
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXDynamicCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "stmt_deleter<clang::CXXReinterpretCastExpr>::type",
            "typename": "clang::CXXReinterpretCastExpr",
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXReinterpretCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [],
            "deleter": "stmt_deleter<clang::CXXConstCastExpr>::type",
            "typename": "clang::CXXConstCastExpr",
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXConstCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "clang::UserDefinedLiteral::LiteralOperatorKind (clang::UserDefinedLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::UserDefinedLiteral::LiteralOperatorKind",
                    "typename": "clang::UserDefinedLiteral::LiteralOperatorKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLiteralOperatorKind"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "clang::Expr * (clang::UserDefinedLiteral::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCookedLiteral"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "const clang::Expr * (clang::UserDefinedLiteral::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCookedLiteral"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUDSuffixLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UserDefinedLiteral",
                    "signature": "const clang::IdentifierInfo * (clang::UserDefinedLiteral::*)() const",
                    "mode": "short",
                    "result_type": "const clang::IdentifierInfo *",
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUDSuffix"
                }
            ],
            "deleter": "stmt_deleter<clang::UserDefinedLiteral>::type",
            "typename": "clang::UserDefinedLiteral",
            "supers": [
                "clang::CallExpr"
            ],
            "name": "UserDefinedLiteral"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "bool (clang::CXXBoolLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "void (clang::CXXBoolLiteralExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "void (clang::CXXBoolLiteralExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXBoolLiteralExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXBoolLiteralExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXBoolLiteralExpr>::type",
            "typename": "clang::CXXBoolLiteralExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXBoolLiteralExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "signature": "void (clang::CXXNullPtrLiteralExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNullPtrLiteralExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXNullPtrLiteralExpr>::type",
            "typename": "clang::CXXNullPtrLiteralExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNullPtrLiteralExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "clang::Expr * (clang::CXXStdInitializerListExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "const clang::Expr * (clang::CXXStdInitializerListExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "clang::SourceLocation (clang::CXXStdInitializerListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "clang::SourceLocation (clang::CXXStdInitializerListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "clang::SourceRange (clang::CXXStdInitializerListExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXStdInitializerListExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXStdInitializerListExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXStdInitializerListExpr>::type",
            "typename": "clang::CXXStdInitializerListExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXStdInitializerListExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "bool (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPotentiallyEvaluated"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "bool (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTypeOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::QualType (clang::CXXTypeidExpr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOperand"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOperandSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TSI"
                        ]
                    ],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeOperandSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::Expr * (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExprOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::SourceLocation (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::SourceLocation (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "clang::SourceRange (clang::CXXTypeidExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::SourceRange)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceRange)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXTypeidExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXTypeidExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXTypeidExpr>::type",
            "typename": "clang::CXXTypeidExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXTypeidExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::SourceRange (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "bool (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitAccess"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSPropertyRefExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::Expr * (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBaseExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::MSPropertyDecl * (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::MSPropertyDecl *",
                    "typename": "clang::MSPropertyDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPropertyDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "bool (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSPropertyRefExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MSPropertyRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                }
            ],
            "deleter": "stmt_deleter<clang::MSPropertyRefExpr>::type",
            "typename": "clang::MSPropertyRefExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "MSPropertyRefExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::Expr * (clang::MSPropertySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "const clang::Expr * (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::Expr * (clang::MSPropertySubscriptExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIdx"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "const clang::Expr * (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getIdx"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRBracketLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "void (clang::MSPropertySubscriptExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRBracketLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSPropertySubscriptExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSPropertySubscriptExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::MSPropertySubscriptExpr>::type",
            "typename": "clang::MSPropertySubscriptExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "MSPropertySubscriptExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "bool (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isTypeOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::QualType (clang::CXXUuidofExpr::*)(clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType (clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOperand"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeOperandSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TSI"
                        ]
                    ],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTypeOperandSourceInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::Expr * (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExprOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "llvm::StringRef",
                            "US"
                        ]
                    ],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "void (clang::CXXUuidofExpr::*)(llvm::StringRef)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (llvm::StringRef)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setUuidStr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "llvm::StringRef (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::StringRef",
                    "typename": "llvm::StringRef () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUuidStr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::SourceLocation (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::SourceLocation (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "clang::SourceRange (clang::CXXUuidofExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::SourceRange)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceRange)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXUuidofExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXUuidofExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXUuidofExpr>::type",
            "typename": "clang::CXXUuidofExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXUuidofExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThisExpr",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXThisExpr",
                    "signature": "void (clang::CXXThisExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThisExpr",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThisExpr",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThisExpr",
                    "signature": "bool (clang::CXXThisExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "parent": "clang::CXXThisExpr",
                    "signature": "void (clang::CXXThisExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setImplicit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXThisExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXThisExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXThisExpr>::type",
            "typename": "clang::CXXThisExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXThisExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "const clang::Expr * (clang::CXXThrowExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "clang::Expr * (clang::CXXThrowExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getThrowLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "bool (clang::CXXThrowExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isThrownVariableInScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXThrowExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXThrowExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXThrowExpr>::type",
            "typename": "clang::CXXThrowExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXThrowExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "const clang::ParmVarDecl * (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::ParmVarDecl *",
                    "typename": "const clang::ParmVarDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParam"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::ParmVarDecl * (clang::CXXDefaultArgExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::ParmVarDecl *",
                    "typename": "clang::ParmVarDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getParam"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "const clang::Expr * (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::Expr * (clang::CXXDefaultArgExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getUsedLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDefaultArgExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDefaultArgExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXDefaultArgExpr>::type",
            "typename": "clang::CXXDefaultArgExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDefaultArgExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "clang::FieldDecl * (clang::CXXDefaultInitExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::FieldDecl *",
                    "typename": "clang::FieldDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "const clang::FieldDecl * (clang::CXXDefaultInitExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::FieldDecl *",
                    "typename": "const clang::FieldDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getField"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "const clang::Expr * (clang::CXXDefaultInitExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "clang::Expr * (clang::CXXDefaultInitExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXDefaultInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDefaultInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDefaultInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXDefaultInitExpr>::type",
            "typename": "clang::CXXDefaultInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDefaultInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "clang::CXXTemporary * (clang::CXXBindTemporaryExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::CXXTemporary *",
                    "typename": "clang::CXXTemporary *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemporary"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "const clang::CXXTemporary * (clang::CXXBindTemporaryExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CXXTemporary *",
                    "typename": "const clang::CXXTemporary *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTemporary"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::CXXTemporary *",
                            "T"
                        ]
                    ],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "void (clang::CXXBindTemporaryExpr::*)(clang::CXXTemporary *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXTemporary *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setTemporary"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "const clang::Expr * (clang::CXXBindTemporaryExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "clang::Expr * (clang::CXXBindTemporaryExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "void (clang::CXXBindTemporaryExpr::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "clang::SourceLocation (clang::CXXBindTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "clang::SourceLocation (clang::CXXBindTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXBindTemporaryExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXBindTemporaryExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXBindTemporaryExpr>::type",
            "typename": "clang::CXXBindTemporaryExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXBindTemporaryExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXConstructorDecl *",
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isElidable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setElidable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setHadMultipleCandidates"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isListInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setListInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isStdInitListInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setStdInitListInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "requiresZeroInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "bool",
                            "ZeroInit"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRequiresZeroInitialization"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::CXXConstructExpr::ConstructionKind (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXConstructExpr::ConstructionKind",
                    "typename": "clang::CXXConstructExpr::ConstructionKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstructionKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::CXXConstructExpr::ConstructionKind",
                            "CK"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::CXXConstructExpr::ConstructionKind)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::CXXConstructExpr::ConstructionKind)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setConstructionKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CXXConstructExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "typename": "arg_range ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CXXConstructExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "typename": "arg_const_range () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "unsigned int (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::Expr * (clang::CXXConstructExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "const clang::Expr * (clang::CXXConstructExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ],
                        [
                            "clang::Expr *",
                            "ArgExpr"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "clang::SourceRange (clang::CXXConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParenOrBraceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceRange",
                            "Range"
                        ]
                    ],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::SourceRange)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceRange)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setParenOrBraceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXConstructExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXConstructExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXConstructExpr>::type",
            "typename": "clang::CXXConstructExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXConstructExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXConstructorDecl *",
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstructor"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "bool (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "constructsVBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "clang::CXXConstructExpr::ConstructionKind (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXConstructExpr::ConstructionKind",
                    "typename": "CXXConstructExpr::ConstructionKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstructionKind"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "bool (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "inheritedFromVBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXInheritedCtorInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXInheritedCtorInitExpr>::type",
            "typename": "clang::CXXInheritedCtorInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXInheritedCtorInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "void (clang::CXXFunctionalCastExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "void (clang::CXXFunctionalCastExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFunctionalCastExpr",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXFunctionalCastExpr>::type",
            "typename": "clang::CXXFunctionalCastExpr",
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CXXFunctionalCastExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXTemporaryObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "signature": "clang::SourceLocation (clang::CXXTemporaryObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "signature": "clang::SourceLocation (clang::CXXTemporaryObjectExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXTemporaryObjectExpr>::type",
            "typename": "clang::CXXTemporaryObjectExpr",
            "supers": [
                "clang::CXXConstructExpr"
            ],
            "name": "CXXTemporaryObjectExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::LambdaCaptureDefault (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::LambdaCaptureDefault",
                    "typename": "clang::LambdaCaptureDefault () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaptureDefault"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaptureDefaultLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "const clang::LambdaCapture *",
                            "Capture"
                        ]
                    ],
                    "parent": "clang::LambdaExpr",
                    "signature": "bool (clang::LambdaExpr::*)(const clang::LambdaCapture *) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::LambdaCapture *) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isInitCapture"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "typename": "capture_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "unsigned int (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "capture_size"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "typename": "capture_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "explicit_captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "typename": "capture_range () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "implicit_captures"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<clang::Expr **> (clang::LambdaExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Expr **>",
                    "typename": "llvm::iterator_range<capture_init_iterator> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "capture_inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::LambdaExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "typename": "llvm::iterator_range<const_capture_init_iterator> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "capture_inits"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::Expr *const *",
                            "Iter"
                        ]
                    ],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::ArrayRef<clang::VarDecl *> (clang::LambdaExpr::*)(clang::Expr *const *) const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::VarDecl *>",
                    "typename": "ArrayRef<clang::VarDecl *> (const_capture_init_iterator) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaptureInitIndexVars"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::SourceRange (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getIntroducerRange"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::CXXRecordDecl * (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLambdaClass"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::CXXMethodDecl * (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXMethodDecl *",
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCallOperator"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::TemplateParameterList * (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateParameterList"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGenericLambda"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::CompoundStmt * (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isMutable"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitParameters"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitResultType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::LambdaExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::LambdaExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::LambdaExpr>::type",
            "typename": "clang::LambdaExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "LambdaExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXScalarValueInitExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXScalarValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXScalarValueInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXScalarValueInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXScalarValueInitExpr",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXScalarValueInitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXScalarValueInitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXScalarValueInitExpr>::type",
            "typename": "clang::CXXScalarValueInitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXScalarValueInitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "bool",
                            "isArray"
                        ],
                        [
                            "unsigned int",
                            "numPlaceArgs"
                        ],
                        [
                            "bool",
                            "hasInitializer"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "void (clang::CXXNewExpr::*)(const clang::ASTContext &, bool, unsigned int, bool)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ASTContext &, bool, unsigned int, bool)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "AllocateArgsArray"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::QualType (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAllocatedType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getAllocatedTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)(const clang::ASTContext &) const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "shouldNullCheckAllocation"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::FunctionDecl * (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorNew"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "void (clang::CXXNewExpr::*)(clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorNew"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::FunctionDecl * (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorDelete"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "D"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "void (clang::CXXNewExpr::*)(clang::FunctionDecl *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::FunctionDecl *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setOperatorDelete"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArray"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArraySize"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArraySize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "unsigned int (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumPlacementArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPlacementArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::CXXNewExpr",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPlacementArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isParenTypeId"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeIdParens"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGlobalNew"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasInitializer"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::CXXNewExpr::InitializationStyle (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXNewExpr::InitializationStyle",
                    "typename": "clang::CXXNewExpr::InitializationStyle () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInitializationStyle"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializer"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInitializer"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "const clang::CXXConstructExpr * (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::CXXConstructExpr *",
                    "typename": "const clang::CXXConstructExpr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getConstructExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "doesUsualArrayDeleteWantSize"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CXXNewExpr::*)()",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "typename": "llvm::iterator_range<arg_iterator> ()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "placement_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CXXNewExpr::*)() const",
                    "mode": "long",
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "typename": "llvm::iterator_range<const_arg_iterator> () const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "placement_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStartLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDirectInitRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXNewExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNewExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXNewExpr>::type",
            "typename": "clang::CXXNewExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNewExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isGlobalDelete"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrayForm"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrayFormAsWritten"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "doesUsualArrayDeleteWantSize"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "clang::FunctionDecl * (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::FunctionDecl *",
                    "typename": "clang::FunctionDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorDelete"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "clang::Expr * (clang::CXXDeleteExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArgument"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "const clang::Expr * (clang::CXXDeleteExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArgument"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "clang::QualType (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestroyedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "clang::SourceLocation (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "clang::SourceLocation (clang::CXXDeleteExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDeleteExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDeleteExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXDeleteExpr>::type",
            "typename": "clang::CXXDeleteExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDeleteExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::Expr * (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "bool (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "bool (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getScopeTypeInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTildeLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestroyedTypeInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::IdentifierInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::IdentifierInfo *",
                    "typename": "clang::IdentifierInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestroyedTypeIdentifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::QualType (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestroyedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDestroyedTypeLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::IdentifierInfo *",
                            "II"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "void (clang::CXXPseudoDestructorExpr::*)(clang::IdentifierInfo *, clang::SourceLocation)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::IdentifierInfo *, clang::SourceLocation)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setDestroyedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "Info"
                        ]
                    ],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "void (clang::CXXPseudoDestructorExpr::*)(clang::TypeSourceInfo *)",
                    "mode": "long",
                    "result_type": "void",
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "setDestroyedType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXPseudoDestructorExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXPseudoDestructorExpr>::type",
            "typename": "clang::CXXPseudoDestructorExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXPseudoDestructorExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "clang::TypeTrait (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeTrait",
                    "typename": "clang::TypeTrait () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrait"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "bool (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "unsigned int (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "clang::TypeSourceInfo * (clang::TypeTraitExpr::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "llvm::ArrayRef<clang::TypeSourceInfo *> (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TypeSourceInfo *>",
                    "typename": "ArrayRef<clang::TypeSourceInfo *> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::TypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::TypeTraitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::TypeTraitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::TypeTraitExpr>::type",
            "typename": "clang::TypeTraitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "TypeTraitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::SourceLocation (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::ArrayTypeTrait (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ArrayTypeTrait",
                    "typename": "clang::ArrayTypeTrait () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrait"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::QualType (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQueriedType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::TypeSourceInfo * (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQueriedTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "unsigned long (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned long",
                    "typename": "uint64_t () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "clang::Expr * (clang::ArrayTypeTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDimensionExpression"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ArrayTypeTraitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArrayTypeTraitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ArrayTypeTraitExpr>::type",
            "typename": "clang::ArrayTypeTraitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ArrayTypeTraitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "clang::SourceLocation (clang::ExpressionTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "clang::SourceLocation (clang::ExpressionTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "clang::ExpressionTrait (clang::ExpressionTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ExpressionTrait",
                    "typename": "clang::ExpressionTrait () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTrait"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "clang::Expr * (clang::ExpressionTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQueriedExpression"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "bool (clang::ExpressionTraitExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ExpressionTraitExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExpressionTraitExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ExpressionTraitExpr>::type",
            "typename": "clang::ExpressionTraitExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "ExpressionTraitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::CXXRecordDecl * (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamingClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "llvm::iterator_range<clang::UnresolvedSetIterator> (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::UnresolvedSetIterator>",
                    "typename": "llvm::iterator_range<decls_iterator> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "decls"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "unsigned int (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumDecls"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "const clang::DeclarationNameInfo & (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclarationNameInfo &",
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::DeclarationName (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "bool (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKeyword"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "bool (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "const clang::TemplateArgumentLoc * (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "unsigned int (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::OverloadExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::OverloadExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "template_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "parent": "clang::OverloadExpr",
                    "signature": "void (clang::OverloadExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "copyTemplateArgumentsInto"
                }
            ],
            "deleter": "stmt_deleter<clang::OverloadExpr>::type",
            "typename": "clang::OverloadExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "OverloadExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "bool (clang::UnresolvedLookupExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "requiresADL"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "bool (clang::UnresolvedLookupExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isOverloaded"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "clang::CXXRecordDecl * (clang::UnresolvedLookupExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamingClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedLookupExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedLookupExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedLookupExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnresolvedLookupExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::UnresolvedLookupExpr>::type",
            "typename": "clang::UnresolvedLookupExpr",
            "supers": [
                "clang::OverloadExpr"
            ],
            "name": "UnresolvedLookupExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "const clang::DeclarationNameInfo & (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclarationNameInfo &",
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::DeclarationName (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getDeclName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "bool (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKeyword"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "bool (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "void (clang::DependentScopeDeclRefExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "copyTemplateArgumentsInto"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "const clang::TemplateArgumentLoc * (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "unsigned int (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "template_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DependentScopeDeclRefExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::DependentScopeDeclRefExpr>::type",
            "typename": "clang::DependentScopeDeclRefExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "DependentScopeDeclRefExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "llvm::ArrayRef<clang::BlockDecl *> (clang::ExprWithCleanups::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::BlockDecl *>",
                    "typename": "ArrayRef<CleanupObject> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObjects"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "unsigned int (clang::ExprWithCleanups::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumObjects"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "clang::BlockDecl * (clang::ExprWithCleanups::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::BlockDecl *",
                    "typename": "CleanupObject (unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getObject"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "clang::Expr * (clang::ExprWithCleanups::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "const clang::Expr * (clang::ExprWithCleanups::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "bool (clang::ExprWithCleanups::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "cleanupsHaveSideEffects"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "void (clang::ExprWithCleanups::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setSubExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "clang::SourceLocation (clang::ExprWithCleanups::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "clang::SourceLocation (clang::ExprWithCleanups::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::ExprWithCleanups",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExprWithCleanups::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::ExprWithCleanups>::type",
            "typename": "clang::ExprWithCleanups",
            "supers": [
                "clang::Expr"
            ],
            "name": "ExprWithCleanups"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::QualType (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeAsWritten"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::TypeSourceInfo * (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTypeSourceInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(clang::SourceLocation)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::SourceLocation)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "unsigned int (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "arg_size"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::Expr * (clang::CXXUnresolvedConstructExpr::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "const clang::Expr * (clang::CXXUnresolvedConstructExpr::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(unsigned int, clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setArg"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXUnresolvedConstructExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXUnresolvedConstructExpr>::type",
            "typename": "clang::CXXUnresolvedConstructExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXUnresolvedConstructExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitAccess"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::Expr * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::QualType (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBaseType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::NestedNameSpecifier * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifier *",
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifier"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::NestedNameSpecifierLoc (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::NamedDecl * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFirstQualifierFoundInScope"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "const clang::DeclarationNameInfo & (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclarationNameInfo &",
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::DeclarationName (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMember"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRAngleLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasTemplateKeyword"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasExplicitTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "void (clang::CXXDependentScopeMemberExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "copyTemplateArgumentsInto"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "const clang::TemplateArgumentLoc * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "unsigned int (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumTemplateArgs"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "template_arguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDependentScopeMemberExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXDependentScopeMemberExpr>::type",
            "typename": "clang::CXXDependentScopeMemberExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDependentScopeMemberExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isImplicitAccess"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::Expr * (clang::UnresolvedMemberExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "const clang::Expr * (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBase"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::QualType (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBaseType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "hasUnresolvedUsing"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isArrow"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::CXXRecordDecl * (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::CXXRecordDecl *",
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNamingClass"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "const clang::DeclarationNameInfo & (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::DeclarationNameInfo &",
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberNameInfo"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::DeclarationName (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationName",
                    "typename": "clang::DeclarationName () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberName"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getMemberLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExprLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::UnresolvedMemberExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnresolvedMemberExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::UnresolvedMemberExpr>::type",
            "typename": "clang::UnresolvedMemberExpr",
            "supers": [
                "clang::OverloadExpr"
            ],
            "name": "UnresolvedMemberExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "clang::Expr * (clang::CXXNoexceptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperand"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "clang::SourceLocation (clang::CXXNoexceptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "clang::SourceLocation (clang::CXXNoexceptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "clang::SourceRange (clang::CXXNoexceptExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSourceRange"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "bool (clang::CXXNoexceptExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getValue"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXNoexceptExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNoexceptExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXNoexceptExpr>::type",
            "typename": "clang::CXXNoexceptExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNoexceptExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "clang::Expr * (clang::PackExpansionExpr::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "const clang::Expr * (clang::PackExpansionExpr::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getPattern"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEllipsisLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "llvm::Optional<unsigned int> (clang::PackExpansionExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::Optional<unsigned int>",
                    "typename": "Optional<unsigned int> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExpansions"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::PackExpansionExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PackExpansionExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::PackExpansionExpr>::type",
            "typename": "clang::PackExpansionExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "PackExpansionExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperatorLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPackLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::NamedDecl * (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "unsigned int (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPackLength"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "bool (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isPartiallySubstituted"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "llvm::ArrayRef<clang::TemplateArgument> (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "llvm::ArrayRef<clang::TemplateArgument>",
                    "typename": "ArrayRef<clang::TemplateArgument> () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPartialArguments"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SizeOfPackExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SizeOfPackExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SizeOfPackExpr>::type",
            "typename": "clang::SizeOfPackExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "SizeOfPackExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "clang::Expr * (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReplacement"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "clang::NonTypeTemplateParmDecl * (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NonTypeTemplateParmDecl *",
                    "typename": "clang::NonTypeTemplateParmDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameter"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SubstNonTypeTemplateParmExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SubstNonTypeTemplateParmExpr>::type",
            "typename": "clang::SubstNonTypeTemplateParmExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "SubstNonTypeTemplateParmExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "clang::NonTypeTemplateParmDecl * (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::NonTypeTemplateParmDecl *",
                    "typename": "clang::NonTypeTemplateParmDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameterPackLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "clang::TemplateArgument (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::TemplateArgument",
                    "typename": "clang::TemplateArgument () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getArgumentPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SubstNonTypeTemplateParmPackExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::SubstNonTypeTemplateParmPackExpr>::type",
            "typename": "clang::SubstNonTypeTemplateParmPackExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "SubstNonTypeTemplateParmPackExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "clang::ParmVarDecl * (clang::FunctionParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::ParmVarDecl *",
                    "typename": "clang::ParmVarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameterPack"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getParameterPackLocation"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "unsigned int (clang::FunctionParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumExpansions"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "clang::ParmVarDecl * (clang::FunctionParmPackExpr::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::ParmVarDecl *",
                    "typename": "clang::ParmVarDecl *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExpansion"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::FunctionParmPackExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::FunctionParmPackExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::FunctionParmPackExpr>::type",
            "typename": "clang::FunctionParmPackExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "FunctionParmPackExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "clang::Stmt * (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTemporary"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "clang::Expr * (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "GetTemporaryExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "clang::StorageDuration (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::StorageDuration",
                    "typename": "clang::StorageDuration () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getStorageDuration"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "const clang::ValueDecl * (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "const clang::ValueDecl *",
                    "typename": "const clang::ValueDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExtendingDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "const clang::ValueDecl *",
                            "ExtendedBy"
                        ],
                        [
                            "unsigned int",
                            "ManglingNumber"
                        ]
                    ],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "void (clang::MaterializeTemporaryExpr::*)(const clang::ValueDecl *, unsigned int)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (const clang::ValueDecl *, unsigned int)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setExtendingDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "unsigned int (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getManglingNumber"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "bool (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isBoundToLvalueReference"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "clang::SourceLocation (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "clang::SourceLocation (clang::MaterializeTemporaryExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MaterializeTemporaryExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MaterializeTemporaryExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::MaterializeTemporaryExpr>::type",
            "typename": "clang::MaterializeTemporaryExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "MaterializeTemporaryExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLHS"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRHS"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "bool (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isRightFold"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "bool (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isLeftFold"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPattern"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEllipsisLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::BinaryOperatorKind (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::BinaryOperatorKind",
                    "typename": "clang::BinaryOperatorKind () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperator"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXFoldExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXFoldExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXFoldExpr>::type",
            "typename": "clang::CXXFoldExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXFoldExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKeywordLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCommonExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReadyExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSuspendExpr"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getResumeExpr"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CoroutineSuspendExpr",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoroutineSuspendExpr::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CoroutineSuspendExpr>::type",
            "typename": "clang::CoroutineSuspendExpr",
            "supers": [
                "clang::Expr"
            ],
            "name": "CoroutineSuspendExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoawaitExpr",
                    "signature": "clang::Expr * (clang::CoawaitExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperand"
                }
            ],
            "deleter": "stmt_deleter<clang::CoawaitExpr>::type",
            "typename": "clang::CoawaitExpr",
            "supers": [
                "clang::CoroutineSuspendExpr"
            ],
            "name": "CoawaitExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoyieldExpr",
                    "signature": "clang::Expr * (clang::CoyieldExpr::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperand"
                }
            ],
            "deleter": "stmt_deleter<clang::CoyieldExpr>::type",
            "typename": "clang::CoyieldExpr",
            "supers": [
                "clang::CoroutineSuspendExpr"
            ],
            "name": "CoyieldExpr"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCatchLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::VarDecl * (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExceptionDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::QualType (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::QualType",
                    "typename": "clang::QualType () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCaughtType"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "clang::Stmt * (clang::CXXCatchStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getHandlerBlock"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXCatchStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXCatchStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXCatchStmt>::type",
            "typename": "clang::CXXCatchStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXCatchStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getTryLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getEndLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::CompoundStmt * (clang::CXXTryStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTryBlock"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "const clang::CompoundStmt * (clang::CXXTryStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::CompoundStmt *",
                    "typename": "const clang::CompoundStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getTryBlock"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "unsigned int (clang::CXXTryStmt::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNumHandlers"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::CXXTryStmt",
                    "signature": "clang::CXXCatchStmt * (clang::CXXTryStmt::*)(unsigned int)",
                    "mode": "long",
                    "result_type": "clang::CXXCatchStmt *",
                    "typename": "clang::CXXCatchStmt *(unsigned int)",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getHandler"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "parent": "clang::CXXTryStmt",
                    "signature": "const clang::CXXCatchStmt * (clang::CXXTryStmt::*)(unsigned int) const",
                    "mode": "long",
                    "result_type": "const clang::CXXCatchStmt *",
                    "typename": "const clang::CXXCatchStmt *(unsigned int) const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getHandler"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXTryStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXTryStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXTryStmt>::type",
            "typename": "clang::CXXTryStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXTryStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::VarDecl * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLoopVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRangeInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::VarDecl * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::VarDecl *",
                    "typename": "const clang::VarDecl *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLoopVariable"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRangeInit"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclStmt *",
                    "typename": "clang::DeclStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRangeStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclStmt *",
                    "typename": "clang::DeclStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBeginStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclStmt *",
                    "typename": "clang::DeclStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getEndStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::DeclStmt *",
                    "typename": "clang::DeclStmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLoopVarStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::Stmt * (clang::CXXForRangeStmt::*)()",
                    "mode": "long",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *()",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getRangeStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBeginStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getEndStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getCond"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Expr *",
                    "typename": "const clang::Expr *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getInc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::DeclStmt *",
                    "typename": "const clang::DeclStmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getLoopVarStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "const clang::Stmt * (clang::CXXForRangeStmt::*)() const",
                    "mode": "long",
                    "result_type": "const clang::Stmt *",
                    "typename": "const clang::Stmt *() const",
                    "is_overload": true,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRangeInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setRangeStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBeginStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setEndStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setCond"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Expr *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setInc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setLoopVarStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": false,
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "mode": "short",
                    "result_type": "void",
                    "typename": "void (clang::Stmt *)",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "setBody"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getForLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getCoawaitLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getColonLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getRParenLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CXXForRangeStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXForRangeStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CXXForRangeStmt>::type",
            "typename": "clang::CXXForRangeStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXForRangeStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKeywordLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "bool (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIfExists"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "bool (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "bool",
                    "typename": "bool () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "isIfNotExists"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getQualifierLoc"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::DeclarationNameInfo (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::DeclarationNameInfo",
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getNameInfo"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::CompoundStmt * (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::CompoundStmt *",
                    "typename": "clang::CompoundStmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getSubStmt"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::MSDependentExistsStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSDependentExistsStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::MSDependentExistsStmt>::type",
            "typename": "clang::MSDependentExistsStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "MSDependentExistsStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getBody"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPromiseDeclStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::VarDecl * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::VarDecl *",
                    "typename": "clang::VarDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPromiseDecl"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getInitSuspendStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFinalSuspendStmt"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getExceptionHandler"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Stmt *",
                    "typename": "clang::Stmt *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFallthroughHandler"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::Expr * (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getReturnValueInit"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::SourceLocation (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "clang::SourceLocation (clang::CoroutineBodyStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CoroutineBodyStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoroutineBodyStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CoroutineBodyStmt>::type",
            "typename": "clang::CoroutineBodyStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CoroutineBodyStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getKeywordLoc"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "clang::Expr * (clang::CoreturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getOperand"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "clang::Expr * (clang::CoreturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::Expr *",
                    "typename": "clang::Expr *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getPromiseCall"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocStart"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getLocEnd"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": false,
                    "is_disabled": true,
                    "args": [],
                    "parent": "clang::CoreturnStmt",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoreturnStmt::*)()",
                    "mode": "short",
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "typename": "child_range ()",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "children"
                }
            ],
            "deleter": "stmt_deleter<clang::CoreturnStmt>::type",
            "typename": "clang::CoreturnStmt",
            "supers": [
                "clang::Stmt"
            ],
            "name": "CoreturnStmt"
        },
        {
            "node": true,
            "is_disabled": false,
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendDecl",
                    "signature": "clang::TypeSourceInfo * (clang::FriendDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::TypeSourceInfo *",
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendType"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendDecl",
                    "signature": "unsigned int (clang::FriendDecl::*)() const",
                    "mode": "short",
                    "result_type": "unsigned int",
                    "typename": "unsigned int () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendTypeNumTemplateParameterLists"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": true,
                    "args": [
                        [
                            "unsigned int",
                            "N"
                        ]
                    ],
                    "parent": "clang::FriendDecl",
                    "signature": "clang::TemplateParameterList * (clang::FriendDecl::*)(unsigned int) const",
                    "mode": "short",
                    "result_type": "clang::TemplateParameterList *",
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendTypeTemplateParameterList"
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendDecl",
                    "signature": "clang::NamedDecl * (clang::FriendDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::NamedDecl *",
                    "typename": "clang::NamedDecl *() const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendDecl"
                },
                {
                    "policy": null,
                    "is_virtual": false,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendDecl",
                    "signature": "clang::SourceLocation (clang::FriendDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceLocation",
                    "typename": "clang::SourceLocation () const",
                    "is_overload": false,
                    "is_overridden": false,
                    "name": "getFriendLoc"
                },
                {
                    "policy": null,
                    "is_virtual": true,
                    "is_pure_virtual": false,
                    "const": true,
                    "is_disabled": false,
                    "args": [],
                    "parent": "clang::FriendDecl",
                    "signature": "clang::SourceRange (clang::FriendDecl::*)() const",
                    "mode": "short",
                    "result_type": "clang::SourceRange",
                    "typename": "clang::SourceRange () const",
                    "is_overload": false,
                    "is_overridden": true,
                    "name": "getSourceRange"
                }
            ],
            "deleter": "decl_deleter<clang::FriendDecl>::type",
            "typename": "clang::FriendDecl",
            "supers": [
                "clang::Decl"
            ],
            "name": "FriendDecl"
        }
    ]
}